{
  "total_violations": 21178,
  "violations_by_file": {
    "/home/hariravichandran/AELP/fix_dashboard_component_connections.py": {
      "file_path": "/home/hariravichandran/AELP/fix_dashboard_component_connections.py",
      "line_number": 181,
      "line_content": "segments = []",
      "violation_type": "hardcoded_segments",
      "hardcoded_value": "segments = []",
      "suggested_fix": "Replace with self.segment_discovery.get_discovered_segments()"
    },
    "/home/hariravichandran/AELP/fix_complete_integration.py": {
      "file_path": "/home/hariravichandran/AELP/fix_complete_integration.py",
      "line_number": 94,
      "line_content": "min_roi=0.5",
      "violation_type": "hardcoded_min",
      "hardcoded_value": "min_roi=0",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/quick_persistence_demo.py": {
      "file_path": "/home/hariravichandran/AELP/quick_persistence_demo.py",
      "line_number": 65,
      "line_content": "channels = ['google_ads', 'facebook_ads', 'email_campaign']",
      "violation_type": "hardcoded_channels",
      "hardcoded_value": "channels = ['google_ads', 'facebook_ads', 'email_campaign']",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/affiliate_pattern_analyzer.py": {
      "file_path": "/home/hariravichandran/AELP/affiliate_pattern_analyzer.py",
      "line_number": 620,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/gaelp_live_dashboard_enhanced.py": {
      "file_path": "/home/hariravichandran/AELP/gaelp_live_dashboard_enhanced.py",
      "line_number": 2710,
      "line_content": "unique_segments = []",
      "violation_type": "hardcoded_segments",
      "hardcoded_value": "segments = []",
      "suggested_fix": "Replace with self.segment_discovery.get_discovered_segments()"
    },
    "/home/hariravichandran/AELP/fix_master_auction.py": {
      "file_path": "/home/hariravichandran/AELP/fix_master_auction.py",
      "line_number": 318,
      "line_content": "'ctr': 0.02 if won else 0.0",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "02",
      "suggested_fix": "Replace 02 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/verify_todo_completion.py": {
      "file_path": "/home/hariravichandran/AELP/verify_todo_completion.py",
      "line_number": 31,
      "line_content": "print(\" GAELP TODO LIST VERIFICATION REPORT\")",
      "violation_type": "unfinished_code",
      "hardcoded_value": "TODO",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/gaelp_dynamic_budget_optimizer.py": {
      "file_path": "/home/hariravichandran/AELP/gaelp_dynamic_budget_optimizer.py",
      "line_number": 644,
      "line_content": "channels = [GAELPChannel.GOOGLE_SEARCH, GAELPChannel.FACEBOOK_FEED, GAELPChannel.TIKTOK_FEED]",
      "violation_type": "hardcoded_channels",
      "hardcoded_value": "channels = [GAELPChannel.GOOGLE_SEARCH, GAELPChannel.FACEBOOK_FEED, GAELPChannel.TIKTOK_FEED]",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/performance_driven_budget_optimizer.py": {
      "file_path": "/home/hariravichandran/AELP/performance_driven_budget_optimizer.py",
      "line_number": 577,
      "line_content": "raise RuntimeError(\"Safe allocation fallback removed. Fix optimization logic instead.\")",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/display_bot_filter.py": {
      "file_path": "/home/hariravichandran/AELP/display_bot_filter.py",
      "line_number": 448,
      "line_content": "raise RuntimeError(\"Mock placement data generation removed. Use real placement data from GA4.\")",
      "violation_type": "forbidden_mock",
      "hardcoded_value": "Mock",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/display_channel_fixer.py": {
      "file_path": "/home/hariravichandran/AELP/display_channel_fixer.py",
      "line_number": 282,
      "line_content": "print(\"   From 0.01% CVR to 1.0%+ CVR\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "01",
      "suggested_fix": "Replace 01 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/display_channel_diagnostic.py": {
      "file_path": "/home/hariravichandran/AELP/display_channel_diagnostic.py",
      "line_number": 195,
      "line_content": "print(\"Using fallback mock data for diagnosis\")",
      "violation_type": "forbidden_mock",
      "hardcoded_value": "mock",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/behavioral_health_headline_generator.py": {
      "file_path": "/home/hariravichandran/AELP/behavioral_health_headline_generator.py",
      "line_number": 461,
      "line_content": "max_steps=30,",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_steps=30",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/gaelp_complete_integration.py": {
      "file_path": "/home/hariravichandran/AELP/gaelp_complete_integration.py",
      "line_number": 638,
      "line_content": "journey_id=user['user_id'],  # Simplified",
      "violation_type": "forbidden_simplified",
      "hardcoded_value": "Simplified",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/launch_parallel_training.py": {
      "file_path": "/home/hariravichandran/AELP/launch_parallel_training.py",
      "line_number": 107,
      "line_content": "logger.info(f\"   Total cost: ${elapsed/3600 * 0.38:.2f}\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/display_channel_diagnostic_fixed.py": {
      "file_path": "/home/hariravichandran/AELP/display_channel_diagnostic_fixed.py",
      "line_number": 370,
      "line_content": "'improvement_factor': 100",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "100",
      "suggested_fix": "Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/full_dashboard.py": {
      "file_path": "/home/hariravichandran/AELP/full_dashboard.py",
      "line_number": 365,
      "line_content": "return [base_bid * np.random.uniform(0.8, 1.3) for _ in range(random.randint(3, 7))]",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return [base_bid * np.random.uniform(0.8, 1.3) for _ in range(random.randint(3, 7))]",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/gaelp_production_orchestrator.py": {
      "file_path": "/home/hariravichandran/AELP/gaelp_production_orchestrator.py",
      "line_number": 2468,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/crisis_parent_training_demo.py": {
      "file_path": "/home/hariravichandran/AELP/crisis_parent_training_demo.py",
      "line_number": 239,
      "line_content": "learning_rate=3e-4,",
      "violation_type": "hardcoded_lr",
      "hardcoded_value": "learning_rate=3",
      "suggested_fix": "Replace with self.optimizer_config.get('learning_rate')"
    },
    "/home/hariravichandran/AELP/affiliate_content_replicator.py": {
      "file_path": "/home/hariravichandran/AELP/affiliate_content_replicator.py",
      "line_number": 641,
      "line_content": "print(\"5. Target 12am-4am crisis hours for maximum impact\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/user_journey_tracker.py": {
      "file_path": "/home/hariravichandran/AELP/user_journey_tracker.py",
      "line_number": 522,
      "line_content": "return []",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return []",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/run_real_rl_demo.py": {
      "file_path": "/home/hariravichandran/AELP/run_real_rl_demo.py",
      "line_number": 451,
      "line_content": "return {\"type\": \"real\", \"platform\": \"meta_ads\", \"budget_limit\": 50}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {\"type\": \"real\", \"platform\": \"meta_ads\", \"budget_limit\": 50}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/check_competitor_bids.py": {
      "file_path": "/home/hariravichandran/AELP/check_competitor_bids.py",
      "line_number": 33,
      "line_content": "print('\\nProblem: ALL competitors bid > $8.10 in crisis scenarios!')",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "8",
      "suggested_fix": "Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/training_orchestrator/importance_sampling_trainer.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/importance_sampling_trainer.py",
      "line_number": 403,
      "line_content": "simulation_episodes=1000",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "1000",
      "suggested_fix": "Replace 1000 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/fix_dashboard_storage_integration.py": {
      "file_path": "/home/hariravichandran/AELP/fix_dashboard_storage_integration.py",
      "line_number": 217,
      "line_content": "Episodes 100+:",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "100",
      "suggested_fix": "Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/demo_realistic_persistent_journeys.py": {
      "file_path": "/home/hariravichandran/AELP/demo_realistic_persistent_journeys.py",
      "line_number": 255,
      "line_content": "print(f\"   \u2705 Realistic 1-3 day journey patterns supported\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/fix_dashboard_sections.py": {
      "file_path": "/home/hariravichandran/AELP/fix_dashboard_sections.py",
      "line_number": 40,
      "line_content": "segments = []",
      "violation_type": "hardcoded_segments",
      "hardcoded_value": "segments = []",
      "suggested_fix": "Replace with self.segment_discovery.get_discovered_segments()"
    },
    "/home/hariravichandran/AELP/fix_all_issues.py": {
      "file_path": "/home/hariravichandran/AELP/fix_all_issues.py",
      "line_number": 348,
      "line_content": "print(\"=\" * 70)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "7",
      "suggested_fix": "Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/monte_carlo_simulator.py": {
      "file_path": "/home/hariravichandran/AELP/monte_carlo_simulator.py",
      "line_number": 1098,
      "line_content": "max_concurrent_worlds=10",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_concurrent_worlds=10",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/validate_monte_carlo.py": {
      "file_path": "/home/hariravichandran/AELP/validate_monte_carlo.py",
      "line_number": 41,
      "line_content": "simulator = MonteCarloSimulator(n_worlds=100, max_concurrent_worlds=25)",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_concurrent_worlds=25",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/fix_continuous_learning.py": {
      "file_path": "/home/hariravichandran/AELP/fix_continuous_learning.py",
      "line_number": 93,
      "line_content": "return [{'type': 'learning', 'message': 'Agent exploring...', 'impact': 'low'}]",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return [{'type': 'learning', 'message': 'Agent exploring...', 'impact': 'low'}]",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/demo_monte_carlo.py": {
      "file_path": "/home/hariravichandran/AELP/demo_monte_carlo.py",
      "line_number": 123,
      "line_content": "max_concurrent_worlds=20,  # Increase parallelism",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_concurrent_worlds=20",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/segment_discovery_analysis.py": {
      "file_path": "/home/hariravichandran/AELP/segment_discovery_analysis.py",
      "line_number": 172,
      "line_content": "\u2705 Parents 35-45 are the sweet spot (have teens + money)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "4",
      "suggested_fix": "Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/production_readiness_validation_report.py": {
      "file_path": "/home/hariravichandran/AELP/production_readiness_validation_report.py",
      "line_number": 174,
      "line_content": "breaker = CircuitBreaker(\"test_validation\", failure_threshold=2, timeout=1)",
      "violation_type": "hardcoded_threshold",
      "hardcoded_value": "threshold=2",
      "suggested_fix": "Replace with self.performance_thresholds.get_threshold(metric_name)"
    },
    "/home/hariravichandran/AELP/criteo_response_model.py": {
      "file_path": "/home/hariravichandran/AELP/criteo_response_model.py",
      "line_number": 660,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/analyze_reward_system.py": {
      "file_path": "/home/hariravichandran/AELP/analyze_reward_system.py",
      "line_number": 162,
      "line_content": "- Improvement: 12-18X",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "12",
      "suggested_fix": "Replace 12 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/emergency_controls.py": {
      "file_path": "/home/hariravichandran/AELP/emergency_controls.py",
      "line_number": 292,
      "line_content": "failure_threshold=3,",
      "violation_type": "hardcoded_threshold",
      "hardcoded_value": "threshold=3",
      "suggested_fix": "Replace with self.performance_thresholds.get_threshold(metric_name)"
    },
    "/home/hariravichandran/AELP/aura_real_data_analysis.py": {
      "file_path": "/home/hariravichandran/AELP/aura_real_data_analysis.py",
      "line_number": 352,
      "line_content": "print(f\"No mock data used - all insights from actual Aura GA4.\")",
      "violation_type": "forbidden_mock",
      "hardcoded_value": "mock",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/fix_conversions_properly.py": {
      "file_path": "/home/hariravichandran/AELP/fix_conversions_properly.py",
      "line_number": 125,
      "line_content": "print(\"  \u2022 Max CVR is 30% for late-stage users with many touchpoints\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/revert_to_discovered_conversions.py": {
      "file_path": "/home/hariravichandran/AELP/revert_to_discovered_conversions.py",
      "line_number": 95,
      "line_content": "print(\"  proactive_parent: 1.46%\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "4",
      "suggested_fix": "Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/setup.py": {
      "file_path": "/home/hariravichandran/AELP/setup.py",
      "line_number": 41,
      "line_content": "\"pytest-mock>=3.11.1\",",
      "violation_type": "forbidden_mock",
      "hardcoded_value": "mock",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/setup_production_ads.py": {
      "file_path": "/home/hariravichandran/AELP/setup_production_ads.py",
      "line_number": 122,
      "line_content": "return {'success': False, 'error': str(e), 'partial_setup': self.account_info}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'success': False, 'error': str(e), 'partial_setup': self.account_info}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/analyze_balance_marketing_failure.py": {
      "file_path": "/home/hariravichandran/AELP/analyze_balance_marketing_failure.py",
      "line_number": 208,
      "line_content": "Current 0.32% CVR \u2192 Potential 3%+ CVR = 10X IMPROVEMENT",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/integrated_performance_budget_optimizer.py": {
      "file_path": "/home/hariravichandran/AELP/integrated_performance_budget_optimizer.py",
      "line_number": 700,
      "line_content": "return {\"error\": str(e)}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {\"error\": str(e)}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/conversion_lag_integration_example.py": {
      "file_path": "/home/hariravichandran/AELP/conversion_lag_integration_example.py",
      "line_number": 432,
      "line_content": "print(\"3. Delayed Reward System for timing predictions\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/competitive_auction_summary.py": {
      "file_path": "/home/hariravichandran/AELP/competitive_auction_summary.py",
      "line_number": 89,
      "line_content": "print(\"\u2022 4 AI agents with different strategies compete for the same users\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "4",
      "suggested_fix": "Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/july_ga4_mapping_final.py": {
      "file_path": "/home/hariravichandran/AELP/july_ga4_mapping_final.py",
      "line_number": 147,
      "line_content": "print(\"=\"*70)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "7",
      "suggested_fix": "Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/enhanced_behavioral_creative_generator.py": {
      "file_path": "/home/hariravichandran/AELP/enhanced_behavioral_creative_generator.py",
      "line_number": 707,
      "line_content": "segments = ['crisis_parents', 'concerned_parents', 'researchers', 'tech_savvy_parents']",
      "violation_type": "hardcoded_segments",
      "hardcoded_value": "segments = ['crisis_parents', 'concerned_parents', 'researchers', 'tech_savvy_parents']",
      "suggested_fix": "Replace with self.segment_discovery.get_discovered_segments()"
    },
    "/home/hariravichandran/AELP/july_ga4_tracking_analysis.py": {
      "file_path": "/home/hariravichandran/AELP/july_ga4_tracking_analysis.py",
      "line_number": 121,
      "line_content": "print(\"=\"*70)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "7",
      "suggested_fix": "Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/final_evaluation_validation.py": {
      "file_path": "/home/hariravichandran/AELP/final_evaluation_validation.py",
      "line_number": 93,
      "line_content": "clicks=np.sum(campaign_a_costs > 0),  # Simplified",
      "violation_type": "forbidden_simplified",
      "hardcoded_value": "Simplified",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/real_competitor_analysis.py": {
      "file_path": "/home/hariravichandran/AELP/real_competitor_analysis.py",
      "line_number": 517,
      "line_content": "return []  # Placeholder",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return []",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/analyze_trial_vs_paid.py": {
      "file_path": "/home/hariravichandran/AELP/analyze_trial_vs_paid.py",
      "line_number": 79,
      "line_content": "print(\"  4. Attribution windows differ (trials convert over 14 days)\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "14",
      "suggested_fix": "Replace 14 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/ethical_advertising_system.py": {
      "file_path": "/home/hariravichandran/AELP/ethical_advertising_system.py",
      "line_number": 1011,
      "line_content": "return default_config",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_config",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/gaelp_explainable_production.py": {
      "file_path": "/home/hariravichandran/AELP/gaelp_explainable_production.py",
      "line_number": 496,
      "line_content": "fallback_to_base_agent=False  # Never fallback",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/display_behavioral_health_creatives.py": {
      "file_path": "/home/hariravichandran/AELP/display_behavioral_health_creatives.py",
      "line_number": 460,
      "line_content": "print(\"6. Target: CVR improvement from 0.01% to 0.5%+ with new creatives\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/check_learning.py": {
      "file_path": "/home/hariravichandran/AELP/check_learning.py",
      "line_number": 37,
      "line_content": "r = requests.get('http://localhost:8080/api/status')",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "8",
      "suggested_fix": "Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/criteo_ga4_integration_analysis.py": {
      "file_path": "/home/hariravichandran/AELP/criteo_ga4_integration_analysis.py",
      "line_number": 198,
      "line_content": "4. Produces realistic 0.1-10% CTR predictions \u2705",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "10",
      "suggested_fix": "Replace 10 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/persistent_user_database.py": {
      "file_path": "/home/hariravichandran/AELP/persistent_user_database.py",
      "line_number": 1165,
      "line_content": "return []",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return []",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/budget_safety_system.py": {
      "file_path": "/home/hariravichandran/AELP/budget_safety_system.py",
      "line_number": 734,
      "line_content": "return default_config",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_config",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/verify_double_dqn_implementation.py": {
      "file_path": "/home/hariravichandran/AELP/verify_double_dqn_implementation.py",
      "line_number": 205,
      "line_content": "print(f\"  Fallback Count: {fallback['fallback_count']}\")",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/production_online_learner.py": {
      "file_path": "/home/hariravichandran/AELP/production_online_learner.py",
      "line_number": 1376,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/gaelp_safety_framework.py": {
      "file_path": "/home/hariravichandran/AELP/gaelp_safety_framework.py",
      "line_number": 1013,
      "line_content": "return default_config",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_config",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/gaelp_safety_integration.py": {
      "file_path": "/home/hariravichandran/AELP/gaelp_safety_integration.py",
      "line_number": 136,
      "line_content": "return default_config",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_config",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/final_verification.py": {
      "file_path": "/home/hariravichandran/AELP/final_verification.py",
      "line_number": 215,
      "line_content": "(\"User_journey_database BigQuery\", \"\u2705 FIXED - Requires BigQuery (no fallback)\"),",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/grounding_data_analysis.py": {
      "file_path": "/home/hariravichandran/AELP/grounding_data_analysis.py",
      "line_number": 210,
      "line_content": "The simulation will get you 85% of the way there. The remaining 15%",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "15",
      "suggested_fix": "Replace 15 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/get_google_ads_data.py": {
      "file_path": "/home/hariravichandran/AELP/get_google_ads_data.py",
      "line_number": 67,
      "line_content": "recommended_max_bid = 25.0",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_bid = 25",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/reward_validation_system.py": {
      "file_path": "/home/hariravichandran/AELP/reward_validation_system.py",
      "line_number": 829,
      "line_content": "return {'message': 'No validations recorded'}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'message': 'No validations recorded'}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/gaelp_master_integration.py": {
      "file_path": "/home/hariravichandran/AELP/gaelp_master_integration.py",
      "line_number": 2452,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/run_agent_training.py": {
      "file_path": "/home/hariravichandran/AELP/run_agent_training.py",
      "line_number": 129,
      "line_content": "Improvement: 10-15X",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "10",
      "suggested_fix": "Replace 10 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/trace_competition.py": {
      "file_path": "/home/hariravichandran/AELP/trace_competition.py",
      "line_number": 115,
      "line_content": "elif overall_ctr > 10:",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "10",
      "suggested_fix": "Replace 10 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/fetch_comprehensive_ga4_data.py": {
      "file_path": "/home/hariravichandran/AELP/fetch_comprehensive_ga4_data.py",
      "line_number": 116,
      "line_content": "\"7. Extract purchase revenue \u2192 ROAS optimization\"",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "7",
      "suggested_fix": "Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/competitor_agents.py": {
      "file_path": "/home/hariravichandran/AELP/competitor_agents.py",
      "line_number": 1068,
      "line_content": "return {agent: count / total_wins for agent, count in wins.items()}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {agent: count / total_wins for agent, count in wins.items()}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/check_google_ads_access.py": {
      "file_path": "/home/hariravichandran/AELP/check_google_ads_access.py",
      "line_number": 79,
      "line_content": "print(\"3. Configure the MCP server with these credentials\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/remove_hardcoded_segments.py": {
      "file_path": "/home/hariravichandran/AELP/remove_hardcoded_segments.py",
      "line_number": 330,
      "line_content": "print(\"3. Re-run this script to validate\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/diagnose_gaelp_issues.py": {
      "file_path": "/home/hariravichandran/AELP/diagnose_gaelp_issues.py",
      "line_number": 125,
      "line_content": "print(\"=\" * 80)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "8",
      "suggested_fix": "Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/trace_missing_features.py": {
      "file_path": "/home/hariravichandran/AELP/trace_missing_features.py",
      "line_number": 63,
      "line_content": "print(\"   Code has 5 variants initialized\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/fix_training_system.py": {
      "file_path": "/home/hariravichandran/AELP/fix_training_system.py",
      "line_number": 166,
      "line_content": "max_steps = 500  # Shorter episodes",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_steps = 500",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/examples/online_learning_demo.py": {
      "file_path": "/home/hariravichandran/AELP/examples/online_learning_demo.py",
      "line_number": 300,
      "line_content": "\"next_state\": recent_episode[\"state\"],  # Simplified",
      "violation_type": "forbidden_simplified",
      "hardcoded_value": "Simplified",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/validate_complete_ab_framework.py": {
      "file_path": "/home/hariravichandran/AELP/validate_complete_ab_framework.py",
      "line_number": 541,
      "line_content": "max_concurrent_tests=10,",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_concurrent_tests=10",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/cross_device_demo.py": {
      "file_path": "/home/hariravichandran/AELP/cross_device_demo.py",
      "line_number": 35,
      "line_content": "medium_confidence_threshold=0.5  # Medium confidence threshold",
      "violation_type": "hardcoded_threshold",
      "hardcoded_value": "threshold=0",
      "suggested_fix": "Replace with self.performance_thresholds.get_threshold(metric_name)"
    },
    "/home/hariravichandran/AELP/simple_learning_test.py": {
      "file_path": "/home/hariravichandran/AELP/simple_learning_test.py",
      "line_number": 535,
      "line_content": "print(\"NO FALLBACKS. NO MOCK LEARNING. REAL VERIFICATION ONLY.\")",
      "violation_type": "forbidden_mock",
      "hardcoded_value": "MOCK",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/reward_explanation.py": {
      "file_path": "/home/hariravichandran/AELP/reward_explanation.py",
      "line_number": 193,
      "line_content": "print(\"=\" * 70)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "7",
      "suggested_fix": "Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/run_fortified_filtered.py": {
      "file_path": "/home/hariravichandran/AELP/run_fortified_filtered.py",
      "line_number": 17,
      "line_content": "print(\"=\"*70 + \"\\n\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "7",
      "suggested_fix": "Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/convert_ga4_to_criteo.py": {
      "file_path": "/home/hariravichandran/AELP/convert_ga4_to_criteo.py",
      "line_number": 201,
      "line_content": "level_ctr = level_data['click'].mean() * 100",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "100",
      "suggested_fix": "Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/simplified_mcp_connectors.py": {
      "file_path": "/home/hariravichandran/AELP/simplified_mcp_connectors.py",
      "line_number": 651,
      "line_content": "print(\"Testing simplified MCP connections...\")",
      "violation_type": "forbidden_simplified",
      "hardcoded_value": "simplified",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/explore_ga4_data.py": {
      "file_path": "/home/hariravichandran/AELP/explore_ga4_data.py",
      "line_number": 50,
      "line_content": "print(f\"{channel:20} | {device:7} | CVR: {cvr:.2f}% | {duration:.0f}s\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "7",
      "suggested_fix": "Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/attribution_system.py": {
      "file_path": "/home/hariravichandran/AELP/attribution_system.py",
      "line_number": 853,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/analyze_august_data.py": {
      "file_path": "/home/hariravichandran/AELP/analyze_august_data.py",
      "line_number": 134,
      "line_content": "f\"PC sales averaging {total_pc_sales/7:.0f} per day\",",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "7",
      "suggested_fix": "Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/clean_learning_verifier.py": {
      "file_path": "/home/hariravichandran/AELP/clean_learning_verifier.py",
      "line_number": 585,
      "line_content": "print(\"=\" * 50)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/validate_success_criteria.py": {
      "file_path": "/home/hariravichandran/AELP/validate_success_criteria.py",
      "line_number": 256,
      "line_content": "required_channels = ['google_search', 'google_display', 'facebook_feed']",
      "violation_type": "hardcoded_channels",
      "hardcoded_value": "channels = ['google_search', 'google_display', 'facebook_feed']",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/mcp_connectors.py": {
      "file_path": "/home/hariravichandran/AELP/mcp_connectors.py",
      "line_number": 509,
      "line_content": "return []",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return []",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/run_training.py": {
      "file_path": "/home/hariravichandran/AELP/run_training.py",
      "line_number": 96,
      "line_content": "print(\"=\" * 70)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "7",
      "suggested_fix": "Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/check_parental_controls_platforms.py": {
      "file_path": "/home/hariravichandran/AELP/check_parental_controls_platforms.py",
      "line_number": 139,
      "line_content": "print(\"=\"*70)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "7",
      "suggested_fix": "Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/verify_auction_fix.py": {
      "file_path": "/home/hariravichandran/AELP/verify_auction_fix.py",
      "line_number": 27,
      "line_content": "if win_rate > 0.9:",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "9",
      "suggested_fix": "Replace 9 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/demo_recsim_auction_bridge.py": {
      "file_path": "/home/hariravichandran/AELP/demo_recsim_auction_bridge.py",
      "line_number": 41,
      "line_content": "example_segments = [UserSegment.IMPULSE_BUYER, UserSegment.RESEARCHER, UserSegment.LOYAL_CUSTOMER]",
      "violation_type": "hardcoded_segments",
      "hardcoded_value": "segments = [UserSegment.IMPULSE_BUYER, UserSegment.RESEARCHER, UserSegment.LOYAL_CUSTOMER]",
      "suggested_fix": "Replace with self.segment_discovery.get_discovered_segments()"
    },
    "/home/hariravichandran/AELP/ab_testing_production_example.py": {
      "file_path": "/home/hariravichandran/AELP/ab_testing_production_example.py",
      "line_number": 328,
      "line_content": "channels = ['organic', 'paid_search', 'social', 'display', 'email']",
      "violation_type": "hardcoded_channels",
      "hardcoded_value": "channels = ['organic', 'paid_search', 'social', 'display', 'email']",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/ga4_creative_content_analysis.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_creative_content_analysis.py",
      "line_number": 337,
      "line_content": "6. Personalize by device (iOS vs Android features)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/fetch_ga4_ctr_data.py": {
      "file_path": "/home/hariravichandran/AELP/fetch_ga4_ctr_data.py",
      "line_number": 270,
      "line_content": "print(\"=\"*60)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/trace_conversions.py": {
      "file_path": "/home/hariravichandran/AELP/trace_conversions.py",
      "line_number": 9,
      "line_content": "segments = ['crisis_parent', 'researcher', 'budget_conscious', 'tech_savvy']",
      "violation_type": "hardcoded_segments",
      "hardcoded_value": "segments = ['crisis_parent', 'researcher', 'budget_conscious', 'tech_savvy']",
      "suggested_fix": "Replace with self.segment_discovery.get_discovered_segments()"
    },
    "/home/hariravichandran/AELP/auction-gym/src/Agent.py": {
      "file_path": "/home/hariravichandran/AELP/auction-gym/src/Agent.py",
      "line_number": 160,
      "line_content": "max_history = 100",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_history = 100",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/simple_verification.py": {
      "file_path": "/home/hariravichandran/AELP/simple_verification.py",
      "line_number": 84,
      "line_content": "print(\"   \u2022 Email capture rate: 15%+\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "15",
      "suggested_fix": "Replace 15 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/verify_auction_mechanics.py": {
      "file_path": "/home/hariravichandran/AELP/verify_auction_mechanics.py",
      "line_number": 133,
      "line_content": "print(\"\u2705 Win rates are realistic (15-40%)\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "4",
      "suggested_fix": "Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/analyze_balance_campaigns.py": {
      "file_path": "/home/hariravichandran/AELP/analyze_balance_campaigns.py",
      "line_number": 286,
      "line_content": "- Add to Cart Rate: {cart_rate*100:.2f}%",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "100",
      "suggested_fix": "Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/final_competitive_demo.py": {
      "file_path": "/home/hariravichandran/AELP/final_competitive_demo.py",
      "line_number": 112,
      "line_content": "print(f\"{'='*60}\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/run_production_training.py": {
      "file_path": "/home/hariravichandran/AELP/run_production_training.py",
      "line_number": 393,
      "line_content": "print(\"=\" * 70)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "7",
      "suggested_fix": "Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/ga4_complete_pc_analysis.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_complete_pc_analysis.py",
      "line_number": 282,
      "line_content": "print(\"\\n\" + \"=\"*80)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "8",
      "suggested_fix": "Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/ga4_hierarchy_investigation.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_hierarchy_investigation.py",
      "line_number": 238,
      "line_content": "4. Tracked through user properties rather than events",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "4",
      "suggested_fix": "Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/ga4_pc_campaign_performance.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_pc_campaign_performance.py",
      "line_number": 382,
      "line_content": "6. Affiliate/influencer traffic has highest CVR for PC",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/diagnose_balance_failure.py": {
      "file_path": "/home/hariravichandran/AELP/diagnose_balance_failure.py",
      "line_number": 336,
      "line_content": "5. **LEARN FROM IDENTITY PROTECTION**",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/ga4_vs_actual_analysis.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_vs_actual_analysis.py",
      "line_number": 125,
      "line_content": "print(f\"\\n  Must bid 57% LESS for trials than we thought!\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/ga4_balance_investigation.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_balance_investigation.py",
      "line_number": 207,
      "line_content": "5. Focus on mobile (majority of traffic)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/ga4_real_conversion_extraction.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_real_conversion_extraction.py",
      "line_number": 722,
      "line_content": "low_cvr_channels = [ch for ch in self.discovered_patterns['channel_performance'].values() if ch['cvr_percent'] < 0.1]",
      "violation_type": "hardcoded_channels",
      "hardcoded_value": "channels = [ch for ch in self.discovered_patterns['channel_performance'].values() if ch['cvr_percent'] < 0.1]",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/fix_dashboard_metrics.py": {
      "file_path": "/home/hariravichandran/AELP/fix_dashboard_metrics.py",
      "line_number": 112,
      "line_content": "print(\"=\" * 80)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "8",
      "suggested_fix": "Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/final_validation_test.py": {
      "file_path": "/home/hariravichandran/AELP/final_validation_test.py",
      "line_number": 132,
      "line_content": "env = GAELPGymEnv(max_budget=2000.0, max_steps=40, render_mode=\"human\")",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_steps=40",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/show_cac.py": {
      "file_path": "/home/hariravichandran/AELP/show_cac.py",
      "line_number": 181,
      "line_content": "print(f\"\\n{'='*60}\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/comprehensive_ga4_map.py": {
      "file_path": "/home/hariravichandran/AELP/comprehensive_ga4_map.py",
      "line_number": 259,
      "line_content": "segments = []",
      "violation_type": "hardcoded_segments",
      "hardcoded_value": "segments = []",
      "suggested_fix": "Replace with self.segment_discovery.get_discovered_segments()"
    },
    "/home/hariravichandran/AELP/quick_demo.py": {
      "file_path": "/home/hariravichandran/AELP/quick_demo.py",
      "line_number": 68,
      "line_content": "print('   \u2022 iOS premium 20-30% across channels')",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/verify_budget_integration.py": {
      "file_path": "/home/hariravichandran/AELP/verify_budget_integration.py",
      "line_number": 15,
      "line_content": "config.max_daily_spend = 500.0",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_daily_spend = 500",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/visual_progress.py": {
      "file_path": "/home/hariravichandran/AELP/visual_progress.py",
      "line_number": 515,
      "line_content": "time.sleep(0.5)  # Simulate training time",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/check_rl_learning.py": {
      "file_path": "/home/hariravichandran/AELP/check_rl_learning.py",
      "line_number": 111,
      "line_content": "print(\"\u274c Cannot connect to dashboard at http://localhost:5000\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/verify_bigquery_data.py": {
      "file_path": "/home/hariravichandran/AELP/verify_bigquery_data.py",
      "line_number": 139,
      "line_content": "print(\"\ud83c\udf89\"*40)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "4",
      "suggested_fix": "Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/explore_ga4_campaigns.py": {
      "file_path": "/home/hariravichandran/AELP/explore_ga4_campaigns.py",
      "line_number": 291,
      "line_content": "4. **Audience Segments**",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "4",
      "suggested_fix": "Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/ga4_oauth_headless.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_oauth_headless.py",
      "line_number": 68,
      "line_content": "limit=3",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/fetch_ga4_direct.py": {
      "file_path": "/home/hariravichandran/AELP/fetch_ga4_direct.py",
      "line_number": 236,
      "line_content": "seg_ctr = seg_data['click'].mean() * 100",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "100",
      "suggested_fix": "Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/launch_social_scanner.py": {
      "file_path": "/home/hariravichandran/AELP/launch_social_scanner.py",
      "line_number": 39,
      "line_content": "\"--server.port\", \"8501\",",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "8",
      "suggested_fix": "Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/compliant_marketing_agent.py": {
      "file_path": "/home/hariravichandran/AELP/compliant_marketing_agent.py",
      "line_number": 207,
      "line_content": "self.epsilon = 0.3",
      "violation_type": "hardcoded_epsilon",
      "hardcoded_value": "epsilon = 0.3",
      "suggested_fix": "Replace with self.discovered_patterns['exploration']['epsilon']"
    },
    "/home/hariravichandran/AELP/agent-manager/config/settings.py": {
      "file_path": "/home/hariravichandran/AELP/agent-manager/config/settings.py",
      "line_number": 45,
      "line_content": "default_storage_request: str = \"10Gi\"",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_storage_request",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/safety_framework/config.py": {
      "file_path": "/home/hariravichandran/AELP/safety_framework/config.py",
      "line_number": 281,
      "line_content": "if self.budget.default_monthly_limit < self.budget.default_weekly_limit * 4:",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_weekly_limit",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/capture_fortified_training.py": {
      "file_path": "/home/hariravichandran/AELP/capture_fortified_training.py",
      "line_number": 128,
      "line_content": "print(\"=\"*70)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "7",
      "suggested_fix": "Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/check_actual_learning.py": {
      "file_path": "/home/hariravichandran/AELP/check_actual_learning.py",
      "line_number": 104,
      "line_content": "max_change = 0",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_change = 0",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/validate_creative_integration.py": {
      "file_path": "/home/hariravichandran/AELP/validate_creative_integration.py",
      "line_number": 146,
      "line_content": "print(\"   \u2022 Neural network dimensions updated (44\u219253)\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/get_real_cpc_from_ga4.py": {
      "file_path": "/home/hariravichandran/AELP/get_real_cpc_from_ga4.py",
      "line_number": 265,
      "line_content": "- 7-9pm: Crisis/urgent searches (1.5x)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "7",
      "suggested_fix": "Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/demo_realtime_pipeline.py": {
      "file_path": "/home/hariravichandran/AELP/demo_realtime_pipeline.py",
      "line_number": 81,
      "line_content": "print(\"=\" * 80)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "8",
      "suggested_fix": "Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/quick_start_production_ads.py": {
      "file_path": "/home/hariravichandran/AELP/quick_start_production_ads.py",
      "line_number": 303,
      "line_content": "print(\"=\"*80)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "8",
      "suggested_fix": "Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/quick_auction_test.py": {
      "file_path": "/home/hariravichandran/AELP/quick_auction_test.py",
      "line_number": 51,
      "line_content": "print(\"\\nLooking for bids with 15-35% win rate for realistic competition\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/debug_criteo.py": {
      "file_path": "/home/hariravichandran/AELP/debug_criteo.py",
      "line_number": 148,
      "line_content": "{f'cat_{i}': np.random.randint(0, 100) for i in range(26)}])",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "100",
      "suggested_fix": "Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/agent-manager/core/database.py": {
      "file_path": "/home/hariravichandran/AELP/agent-manager/core/database.py",
      "line_number": 23,
      "line_content": "pool_recycle=300,",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/fetch_ga4_simulation_data.py": {
      "file_path": "/home/hariravichandran/AELP/fetch_ga4_simulation_data.py",
      "line_number": 223,
      "line_content": "print(f\"   - {channel:20} {cvr*100:.2f}%\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "100",
      "suggested_fix": "Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/debug_auction.py": {
      "file_path": "/home/hariravichandran/AELP/debug_auction.py",
      "line_number": 58,
      "line_content": "context={'estimated_ctr': 0.05, 'quality_score': 0.8}",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "8",
      "suggested_fix": "Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/debug_auction_single.py": {
      "file_path": "/home/hariravichandran/AELP/debug_auction_single.py",
      "line_number": 36,
      "line_content": "'ltv': 199.98",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "199",
      "suggested_fix": "Replace 199 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/final_persistence_validation.py": {
      "file_path": "/home/hariravichandran/AELP/final_persistence_validation.py",
      "line_number": 63,
      "line_content": "channels = ['google_ads', 'facebook_ads', 'email_campaign']",
      "violation_type": "hardcoded_channels",
      "hardcoded_value": "channels = ['google_ads', 'facebook_ads', 'email_campaign']",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/verify_ios_only_targeting.py": {
      "file_path": "/home/hariravichandran/AELP/verify_ios_only_targeting.py",
      "line_number": 279,
      "line_content": "print(\"\ud83d\udcf1 Targeting 62.8% of Aura's existing iOS traffic\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/verify_ios_only_targeting_fixed.py": {
      "file_path": "/home/hariravichandran/AELP/verify_ios_only_targeting_fixed.py",
      "line_number": 117,
      "line_content": "print(\"\ud83d\udcf1 Targeting 62.8% of Aura's existing iOS traffic\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/train_criteo_with_ga4.py": {
      "file_path": "/home/hariravichandran/AELP/train_criteo_with_ga4.py",
      "line_number": 76,
      "line_content": "max_depth=5,",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_depth=5",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/ga4_actual_traffic_analysis.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_actual_traffic_analysis.py",
      "line_number": 231,
      "line_content": "\u25a1 8. Enable correlation between competitor bids",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "8",
      "suggested_fix": "Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/ga4_oauth_with_your_client.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_oauth_with_your_client.py",
      "line_number": 186,
      "line_content": "elif \"403\" in str(e):",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "4",
      "suggested_fix": "Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/verify_no_fallbacks.py": {
      "file_path": "/home/hariravichandran/AELP/verify_no_fallbacks.py",
      "line_number": 31,
      "line_content": "forbidden = ['fallback', 'simplified', 'mock', 'dummy', '_AVAILABLE = False']",
      "violation_type": "forbidden_dummy",
      "hardcoded_value": "dummy",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/budget_pacer_summary.py": {
      "file_path": "/home/hariravichandran/AELP/budget_pacer_summary.py",
      "line_number": 389,
      "line_content": "if not pacer.can_spend(camp_id, channel, Decimal('100.00'))[0])",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "100",
      "suggested_fix": "Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/simple_budget_pacer_test.py": {
      "file_path": "/home/hariravichandran/AELP/simple_budget_pacer_test.py",
      "line_number": 141,
      "line_content": "print(\"=\"*50)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/diagnose_learning.py": {
      "file_path": "/home/hariravichandran/AELP/diagnose_learning.py",
      "line_number": 149,
      "line_content": "max_change = 0",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_change = 0",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/create_remaining_agents.py": {
      "file_path": "/home/hariravichandran/AELP/create_remaining_agents.py",
      "line_number": 362,
      "line_content": "- Use \"mock\" or \"dummy\" code",
      "violation_type": "forbidden_dummy",
      "hardcoded_value": "dummy",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/temporal_integration_example.py": {
      "file_path": "/home/hariravichandran/AELP/temporal_integration_example.py",
      "line_number": 201,
      "line_content": "print(\"\u2713 Peak hours 8-10 PM (2x multiplier) enforced\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "10",
      "suggested_fix": "Replace 10 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/behavioral_health_creative_showcase.py": {
      "file_path": "/home/hariravichandran/AELP/behavioral_health_creative_showcase.py",
      "line_number": 255,
      "line_content": "print(\"   \u2022 NO templates or fallback content used\")",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/trace_simulation_flow.py": {
      "file_path": "/home/hariravichandran/AELP/trace_simulation_flow.py",
      "line_number": 87,
      "line_content": "action = agent.get_bid_action(None, explore=True)  # Simplified call",
      "violation_type": "forbidden_simplified",
      "hardcoded_value": "Simplified",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/run_simple.py": {
      "file_path": "/home/hariravichandran/AELP/run_simple.py",
      "line_number": 20,
      "line_content": "for step in range(100):",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "100",
      "suggested_fix": "Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/agent-manager/api/auth.py": {
      "file_path": "/home/hariravichandran/AELP/agent-manager/api/auth.py",
      "line_number": 148,
      "line_content": "logger.warning(\"Running in development mode with mock authentication\")",
      "violation_type": "forbidden_mock",
      "hardcoded_value": "mock",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/training_orchestrator/config.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/config.py",
      "line_number": 413,
      "line_content": "max_violations_per_day=50  # More lenient for research",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_violations_per_day=50",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/prioritized_replay_demo.py": {
      "file_path": "/home/hariravichandran/AELP/prioritized_replay_demo.py",
      "line_number": 299,
      "line_content": "print(f\"\u2705 Sampling overhead: {(results['sampling_overhead']-1)*100:.1f}% (minimal cost)\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "100",
      "suggested_fix": "Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/shadow_mode_state.py": {
      "file_path": "/home/hariravichandran/AELP/shadow_mode_state.py",
      "line_number": 436,
      "line_content": "segments = [s.segment_name for s in batch_states]",
      "violation_type": "hardcoded_segments",
      "hardcoded_value": "segments = [s.segment_name for s in batch_states]",
      "suggested_fix": "Replace with self.segment_discovery.get_discovered_segments()"
    },
    "/home/hariravichandran/AELP/transformer_world_model_full.py": {
      "file_path": "/home/hariravichandran/AELP/transformer_world_model_full.py",
      "line_number": 540,
      "line_content": "self.optimizer = torch.optim.AdamW(self.world_model.parameters(), lr=1e-4)",
      "violation_type": "hardcoded_lr",
      "hardcoded_value": "lr=1",
      "suggested_fix": "Replace with self.optimizer_config.get('learning_rate')"
    },
    "/home/hariravichandran/AELP/demo_competitive_auctions.py": {
      "file_path": "/home/hariravichandran/AELP/demo_competitive_auctions.py",
      "line_number": 270,
      "line_content": "daily_budget_total=Decimal('500.0'),",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/ga4_oauth_simple.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_oauth_simple.py",
      "line_number": 123,
      "line_content": "print(\"\\nService account email: ga4-mcp-server@centering-line-469716-r7.iam.gserviceaccount.com\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "4",
      "suggested_fix": "Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/aura_demo_simple.py": {
      "file_path": "/home/hariravichandran/AELP/aura_demo_simple.py",
      "line_number": 205,
      "line_content": "print(f\"  {name:12} - Value: {value:.3f} (\u03b1={arm.alpha:.1f}, \u03b2={arm.beta:.1f})\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "12",
      "suggested_fix": "Replace 12 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/update_patterns_with_real_cvr.py": {
      "file_path": "/home/hariravichandran/AELP/update_patterns_with_real_cvr.py",
      "line_number": 80,
      "line_content": "print(f\"{segment_name}: CVR={segment_cvr:.4f} ({segment_cvr*100:.2f}%)\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "100",
      "suggested_fix": "Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/aura_campaign_simulator_updated.py": {
      "file_path": "/home/hariravichandran/AELP/aura_campaign_simulator_updated.py",
      "line_number": 401,
      "line_content": "segments = [j['segment'] for j in results['journeys']]",
      "violation_type": "hardcoded_segments",
      "hardcoded_value": "segments = [j['segment'] for j in results['journeys']]",
      "suggested_fix": "Replace with self.segment_discovery.get_discovered_segments()"
    },
    "/home/hariravichandran/AELP/analyze_learning.py": {
      "file_path": "/home/hariravichandran/AELP/analyze_learning.py",
      "line_number": 29,
      "line_content": "user_segments = []",
      "violation_type": "hardcoded_segments",
      "hardcoded_value": "segments = []",
      "suggested_fix": "Replace with self.segment_discovery.get_discovered_segments()"
    },
    "/home/hariravichandran/AELP/fill_buffer_and_train.py": {
      "file_path": "/home/hariravichandran/AELP/fill_buffer_and_train.py",
      "line_number": 27,
      "line_content": "if i % 100 == 0:",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "100",
      "suggested_fix": "Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/offline_rl_demo.py": {
      "file_path": "/home/hariravichandran/AELP/offline_rl_demo.py",
      "line_number": 189,
      "line_content": "print(\"=\" * 60)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/transformer_world_model.py": {
      "file_path": "/home/hariravichandran/AELP/transformer_world_model.py",
      "line_number": 354,
      "line_content": "return {\"bid\": 1.0, \"creative_id\": 3, \"target_segments\": [\"narrow\"]}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {\"bid\": 1.0, \"creative_id\": 3, \"target_segments\": [\"narrow\"]}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/ga4_oauth_x11.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_oauth_x11.py",
      "line_number": 118,
      "line_content": "elif \"403\" in str(e):",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "4",
      "suggested_fix": "Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/trigger_event_system.py": {
      "file_path": "/home/hariravichandran/AELP/trigger_event_system.py",
      "line_number": 492,
      "line_content": "discoveries = simulator.simulate_day(num_parents=10000)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "10000",
      "suggested_fix": "Replace 10000 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/run_gaelp_system.py": {
      "file_path": "/home/hariravichandran/AELP/run_gaelp_system.py",
      "line_number": 147,
      "line_content": "logger.info(\"=\" * 80)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "8",
      "suggested_fix": "Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/ga4_oauth_browser.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_oauth_browser.py",
      "line_number": 149,
      "line_content": "print(\"Verify that hari@aura.com has access to property ID: 308028264\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/fully_realistic_simulation.py": {
      "file_path": "/home/hariravichandran/AELP/fully_realistic_simulation.py",
      "line_number": 323,
      "line_content": "self.epsilon = 0.3  # Exploration rate",
      "violation_type": "hardcoded_epsilon",
      "hardcoded_value": "epsilon = 0.3",
      "suggested_fix": "Replace with self.discovered_patterns['exploration']['epsilon']"
    },
    "/home/hariravichandran/AELP/competitor_tracker.py": {
      "file_path": "/home/hariravichandran/AELP/competitor_tracker.py",
      "line_number": 301,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/ga4_oauth_manual.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_oauth_manual.py",
      "line_number": 156,
      "line_content": "print(\"\\n\" + \"=\"*70)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "7",
      "suggested_fix": "Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/ga4_oauth_connect.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_oauth_connect.py",
      "line_number": 148,
      "line_content": "print(\"=\" * 40)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "4",
      "suggested_fix": "Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/gaelp_gymnasium_demo.py": {
      "file_path": "/home/hariravichandran/AELP/gaelp_gymnasium_demo.py",
      "line_number": 215,
      "line_content": "eval_env = GAELPGymEnv(max_budget=1000.0, max_steps=30)",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_steps=30",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/simple_encoder_test.py": {
      "file_path": "/home/hariravichandran/AELP/simple_encoder_test.py",
      "line_number": 81,
      "line_content": "max_sequence_length=5,",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_sequence_length=5",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/final_budget_optimization_demo.py": {
      "file_path": "/home/hariravichandran/AELP/final_budget_optimization_demo.py",
      "line_number": 297,
      "line_content": "print(f\"=\"*70)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "7",
      "suggested_fix": "Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/ga4_oauth_playwright.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_oauth_playwright.py",
      "line_number": 160,
      "line_content": "print(\"4. Complete OAuth authentication\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "4",
      "suggested_fix": "Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/monitor_fortified_insights.py": {
      "file_path": "/home/hariravichandran/AELP/monitor_fortified_insights.py",
      "line_number": 454,
      "line_content": "time.sleep(5)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/hybrid_llm_rl_integration.py": {
      "file_path": "/home/hariravichandran/AELP/hybrid_llm_rl_integration.py",
      "line_number": 508,
      "line_content": "return {'ppo_loss': 0.0}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'ppo_loss': 0.0}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/monitor_fortified_enhanced.py": {
      "file_path": "/home/hariravichandran/AELP/monitor_fortified_enhanced.py",
      "line_number": 315,
      "line_content": "all_channels = ['organic', 'paid_search', 'social', 'display', 'email']",
      "violation_type": "hardcoded_channels",
      "hardcoded_value": "channels = ['organic', 'paid_search', 'social', 'display', 'email']",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/trace_store_experience.py": {
      "file_path": "/home/hariravichandran/AELP/trace_store_experience.py",
      "line_number": 29,
      "line_content": "journey_state = \"MOCK_JOURNEY_STATE\"  # Simplified for tracing",
      "violation_type": "forbidden_simplified",
      "hardcoded_value": "Simplified",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/realistic_simulation_model.py": {
      "file_path": "/home/hariravichandran/AELP/realistic_simulation_model.py",
      "line_number": 394,
      "line_content": "sim.current_day = 3",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/behavior_clustering.py": {
      "file_path": "/home/hariravichandran/AELP/behavior_clustering.py",
      "line_number": 85,
      "line_content": "dbscan = DBSCAN(eps=0.5, min_samples=5)",
      "violation_type": "hardcoded_min",
      "hardcoded_value": "min_samples=5",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/demo_budget_safety.py": {
      "file_path": "/home/hariravichandran/AELP/demo_budget_safety.py",
      "line_number": 100,
      "line_content": "emergency_threshold=0.95",
      "violation_type": "hardcoded_threshold",
      "hardcoded_value": "threshold=0",
      "suggested_fix": "Replace with self.performance_thresholds.get_threshold(metric_name)"
    },
    "/home/hariravichandran/AELP/extract_ga4_august.py": {
      "file_path": "/home/hariravichandran/AELP/extract_ga4_august.py",
      "line_number": 202,
      "line_content": "print(\"6. Check device breakdown (iOS for Balance!)\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/ga4_oauth_gcloud.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_oauth_gcloud.py",
      "line_number": 77,
      "line_content": "\"\"\"Fallback to service account if available\"\"\"",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "Fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/debug_competitor_bids.py": {
      "file_path": "/home/hariravichandran/AELP/debug_competitor_bids.py",
      "line_number": 56,
      "line_content": "np.random.seed(42)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "4",
      "suggested_fix": "Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/tests/conftest.py": {
      "file_path": "/home/hariravichandran/AELP/tests/conftest.py",
      "line_number": 423,
      "line_content": "mock_requests = Mock()",
      "violation_type": "forbidden_mock",
      "hardcoded_value": "Mock",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/base_agent.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/rl_agents/base_agent.py",
      "line_number": 315,
      "line_content": "max_episodes = 10000",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_episodes = 10000",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/intelligent_marketing_agent.py": {
      "file_path": "/home/hariravichandran/AELP/intelligent_marketing_agent.py",
      "line_number": 58,
      "line_content": "self.learning_rate = 0.1",
      "violation_type": "hardcoded_lr",
      "hardcoded_value": "learning_rate = 0",
      "suggested_fix": "Replace with self.optimizer_config.get('learning_rate')"
    },
    "/home/hariravichandran/AELP/run_fortified_clean.py": {
      "file_path": "/home/hariravichandran/AELP/run_fortified_clean.py",
      "line_number": 25,
      "line_content": "print(\"=\" * 70)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "7",
      "suggested_fix": "Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/realistic_rl_agent.py": {
      "file_path": "/home/hariravichandran/AELP/realistic_rl_agent.py",
      "line_number": 425,
      "line_content": "'price_paid': 3.45,",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/fetch_real_data.py": {
      "file_path": "/home/hariravichandran/AELP/fetch_real_data.py",
      "line_number": 292,
      "line_content": "print(f\"\\nTop 5 Campaigns by ROAS:\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/demo_emergency_integration.py": {
      "file_path": "/home/hariravichandran/AELP/demo_emergency_integration.py",
      "line_number": 57,
      "line_content": "return {\"budget_ok\": spend <= limit}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {\"budget_ok\": spend <= limit}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/persistent_user_database_batched.py": {
      "file_path": "/home/hariravichandran/AELP/persistent_user_database_batched.py",
      "line_number": 28,
      "line_content": "flush_interval: float = 5.0):",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/verify_fortified_working.py": {
      "file_path": "/home/hariravichandran/AELP/verify_fortified_working.py",
      "line_number": 101,
      "line_content": "\"CRITICAL:gaelp_parameter_manager:USING EMERGENCY FALLBACK\"",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "FALLBACK",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/fix_json_and_lock.py": {
      "file_path": "/home/hariravichandran/AELP/fix_json_and_lock.py",
      "line_number": 179,
      "line_content": "max_retries = 5",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_retries = 5",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/gaelp_google_ads_bridge.py": {
      "file_path": "/home/hariravichandran/AELP/gaelp_google_ads_bridge.py",
      "line_number": 243,
      "line_content": "return {'error': 'RL agent not initialized'}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'error': 'RL agent not initialized'}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/demo_journey_encoder_integration.py": {
      "file_path": "/home/hariravichandran/AELP/demo_journey_encoder_integration.py",
      "line_number": 104,
      "line_content": "max_sequence_length=5,",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_sequence_length=5",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/ga4_oauth_setup.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_oauth_setup.py",
      "line_number": 278,
      "line_content": "print(\"=\" * 60)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/monte_carlo_integration.py": {
      "file_path": "/home/hariravichandran/AELP/monte_carlo_integration.py",
      "line_number": 288,
      "line_content": "max_concurrent_worlds=10,",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_concurrent_worlds=10",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/showcase_monte_carlo.py": {
      "file_path": "/home/hariravichandran/AELP/showcase_monte_carlo.py",
      "line_number": 61,
      "line_content": "max_concurrent_worlds=8",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_concurrent_worlds=8",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/verify_attribution_requirements.py": {
      "file_path": "/home/hariravichandran/AELP/verify_attribution_requirements.py",
      "line_number": 159,
      "line_content": "print(\"\\n5\ufe0f\u20e3 NO FALLBACK VERIFICATION\")",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "FALLBACK",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/ga4_oauth_hari.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_oauth_hari.py",
      "line_number": 172,
      "line_content": "if \"403\" in str(e):",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "4",
      "suggested_fix": "Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/clean_journey_agent.py": {
      "file_path": "/home/hariravichandran/AELP/clean_journey_agent.py",
      "line_number": 344,
      "line_content": "learning_rate=0.001",
      "violation_type": "hardcoded_lr",
      "hardcoded_value": "learning_rate=0",
      "suggested_fix": "Replace with self.optimizer_config.get('learning_rate')"
    },
    "/home/hariravichandran/AELP/email_nurture_system.py": {
      "file_path": "/home/hariravichandran/AELP/email_nurture_system.py",
      "line_number": 576,
      "line_content": "raise RuntimeError(\"Default template fallback removed. All templates must be personalized based on lead data.\")",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/run_full_demo.py": {
      "file_path": "/home/hariravichandran/AELP/run_full_demo.py",
      "line_number": 231,
      "line_content": "return {\"type\": \"real\", \"platform\": \"meta_ads\", \"budget_limit\": 50}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {\"type\": \"real\", \"platform\": \"meta_ads\", \"budget_limit\": 50}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/verify_gradient_stabilization_integration.py": {
      "file_path": "/home/hariravichandran/AELP/verify_gradient_stabilization_integration.py",
      "line_number": 265,
      "line_content": "optimizer = torch.optim.Adam(model.parameters(), lr=0.001)",
      "violation_type": "hardcoded_lr",
      "hardcoded_value": "lr=0",
      "suggested_fix": "Replace with self.optimizer_config.get('learning_rate')"
    },
    "/home/hariravichandran/AELP/ios_targeting_system.py": {
      "file_path": "/home/hariravichandran/AELP/ios_targeting_system.py",
      "line_number": 774,
      "line_content": "print(\"-\" * 30)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/realistic_master_integration.py": {
      "file_path": "/home/hariravichandran/AELP/realistic_master_integration.py",
      "line_number": 39,
      "line_content": "learning_rate=0.0001",
      "violation_type": "hardcoded_lr",
      "hardcoded_value": "learning_rate=0",
      "suggested_fix": "Replace with self.optimizer_config.get('learning_rate')"
    },
    "/home/hariravichandran/AELP/simple_monte_carlo_demo.py": {
      "file_path": "/home/hariravichandran/AELP/simple_monte_carlo_demo.py",
      "line_number": 43,
      "line_content": "max_concurrent_worlds=5",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_concurrent_worlds=5",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/aura_campaign_simulator.py": {
      "file_path": "/home/hariravichandran/AELP/aura_campaign_simulator.py",
      "line_number": 327,
      "line_content": "segments = [j['segment'] for j in results['journeys']]",
      "violation_type": "hardcoded_segments",
      "hardcoded_value": "segments = [j['segment'] for j in results['journeys']]",
      "suggested_fix": "Replace with self.segment_discovery.get_discovered_segments()"
    },
    "/home/hariravichandran/AELP/emergency_monitor.py": {
      "file_path": "/home/hariravichandran/AELP/emergency_monitor.py",
      "line_number": 77,
      "line_content": "return []",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return []",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/rl_training_demo.py": {
      "file_path": "/home/hariravichandran/AELP/rl_training_demo.py",
      "line_number": 245,
      "line_content": "eval_env = GAELPGymEnv(max_budget=1000.0, max_steps=50)",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_steps=50",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/gaelp_live_dashboard.py": {
      "file_path": "/home/hariravichandran/AELP/gaelp_live_dashboard.py",
      "line_number": 187,
      "line_content": "return {'episode': self.episode_count, 'skipped': 'frequency_cap'}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'episode': self.episode_count, 'skipped': 'frequency_cap'}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/demo_social_scanner.py": {
      "file_path": "/home/hariravichandran/AELP/demo_social_scanner.py",
      "line_number": 300,
      "line_content": "print(\"\u2022 ROI: 40%+ after Month 3\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/ga4_parental_controls_analysis.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_parental_controls_analysis.py",
      "line_number": 361,
      "line_content": "\u2705 Fix Display channel (0.01% CVR is unacceptable)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "01",
      "suggested_fix": "Replace 01 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/demo_wandb_integration.py": {
      "file_path": "/home/hariravichandran/AELP/demo_wandb_integration.py",
      "line_number": 51,
      "line_content": "epsilon=0.2,",
      "violation_type": "hardcoded_epsilon",
      "hardcoded_value": "epsilon=0.2",
      "suggested_fix": "Replace with self.discovered_patterns['exploration']['epsilon']"
    },
    "/home/hariravichandran/AELP/training_orchestrator/rl_agent_proper.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/rl_agent_proper.py",
      "line_number": 565,
      "line_content": "self.epsilon = max(0.01, self.epsilon * decay_rate)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "01",
      "suggested_fix": "Replace 01 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/ga4_oauth_proper.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_oauth_proper.py",
      "line_number": 362,
      "line_content": "print(\"3. Copy the ENTIRE authorization code\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/marketing_game_visualization.py": {
      "file_path": "/home/hariravichandran/AELP/marketing_game_visualization.py",
      "line_number": 25,
      "line_content": "self.channels = ['Google', 'Facebook', 'TikTok', 'Instagram']",
      "violation_type": "hardcoded_channels",
      "hardcoded_value": "channels = ['Google', 'Facebook', 'TikTok', 'Instagram']",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/run_recsim_demo.py": {
      "file_path": "/home/hariravichandran/AELP/run_recsim_demo.py",
      "line_number": 166,
      "line_content": "logger.error(\"Failed to install dependencies. Will try to run with fallback model.\")",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/debug_memory.py": {
      "file_path": "/home/hariravichandran/AELP/debug_memory.py",
      "line_number": 29,
      "line_content": "next_state = {'bid': 1.5, 'budget': 99.0, 'hour': 13, 'segment': 0}",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "13",
      "suggested_fix": "Replace 13 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/monitor_production_quality.py": {
      "file_path": "/home/hariravichandran/AELP/monitor_production_quality.py",
      "line_number": 362,
      "line_content": "active_channels = [(ch, data) for ch, data in metrics['channels'].items()",
      "violation_type": "hardcoded_channels",
      "hardcoded_value": "channels = [(ch, data) for ch, data in metrics['channels']",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/bigquery_batch_writer.py": {
      "file_path": "/home/hariravichandran/AELP/bigquery_batch_writer.py",
      "line_number": 337,
      "line_content": "self.flush_thread.join(timeout=10)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "10",
      "suggested_fix": "Replace 10 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/replay_buffer.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/rl_agents/replay_buffer.py",
      "line_number": 411,
      "line_content": "self.states = np.zeros((capacity, sequence_length + 1, 128), dtype=np.float32)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "128",
      "suggested_fix": "Replace 128 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/infrastructure_reality_check.py": {
      "file_path": "/home/hariravichandran/AELP/infrastructure_reality_check.py",
      "line_number": 397,
      "line_content": "\"mock\": mock_components,",
      "violation_type": "forbidden_mock",
      "hardcoded_value": "mock",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/realistic_fixed_environment.py": {
      "file_path": "/home/hariravichandran/AELP/realistic_fixed_environment.py",
      "line_number": 382,
      "line_content": "threshold = 1 / (1 + np.exp(-(bid - avg_cpm) / 3))",
      "violation_type": "hardcoded_threshold",
      "hardcoded_value": "threshold = 1",
      "suggested_fix": "Replace with self.performance_thresholds.get_threshold(metric_name)"
    },
    "/home/hariravichandran/AELP/training_orchestrator/rl_agent_robust.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/rl_agent_robust.py",
      "line_number": 341,
      "line_content": "self.adaptation_threshold = 0.3  # Trigger adaptation if performance drops",
      "violation_type": "hardcoded_threshold",
      "hardcoded_value": "threshold = 0",
      "suggested_fix": "Replace with self.performance_thresholds.get_threshold(metric_name)"
    },
    "/home/hariravichandran/AELP/training_orchestrator/journey_state_encoder.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/journey_state_encoder.py",
      "line_number": 752,
      "line_content": "max_sequence_length=5,",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_sequence_length=5",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/importance_sampling_integration.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/rl_agents/importance_sampling_integration.py",
      "line_number": 46,
      "line_content": "max_weight=5.0,  # 5x weight for crisis parents",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_weight=5",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/temporal_effects.py": {
      "file_path": "/home/hariravichandran/AELP/temporal_effects.py",
      "line_number": 379,
      "line_content": "bid_info = effects.adjust_bidding(10.0, date)  # $10 base bid",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "10",
      "suggested_fix": "Replace 10 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/shadow_mode_dashboard.py": {
      "file_path": "/home/hariravichandran/AELP/shadow_mode_dashboard.py",
      "line_number": 581,
      "line_content": "parser.add_argument('--update-interval', type=int, default=30, help='Update interval in seconds')",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/training_orchestrator/rl_agent_advanced.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/rl_agent_advanced.py",
      "line_number": 816,
      "line_content": "max_bid = 10.0",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_bid = 10",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/enhanced_simulator.py": {
      "file_path": "/home/hariravichandran/AELP/enhanced_simulator.py",
      "line_number": 589,
      "line_content": "if False:  # RecSim is now required",
      "violation_type": "disabled_code",
      "hardcoded_value": "if False:",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/enhanced_simulator_creative_patch.py": {
      "file_path": "/home/hariravichandran/AELP/enhanced_simulator_creative_patch.py",
      "line_number": 93,
      "line_content": "elif 17 <= hour < 22:",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "17",
      "suggested_fix": "Replace 17 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/demo_regression_detection.py": {
      "file_path": "/home/hariravichandran/AELP/demo_regression_detection.py",
      "line_number": 185,
      "line_content": "print(\"=\"*80)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "8",
      "suggested_fix": "Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/run_full_demo_llm.py": {
      "file_path": "/home/hariravichandran/AELP/run_full_demo_llm.py",
      "line_number": 548,
      "line_content": "print(\"   Demo will fall back to mock personas.\\n\")",
      "violation_type": "forbidden_mock",
      "hardcoded_value": "mock",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/check_training_quality.py": {
      "file_path": "/home/hariravichandran/AELP/check_training_quality.py",
      "line_number": 118,
      "line_content": "return {'weights_updating': 'unknown', 'num_parameters': 0}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'weights_updating': 'unknown', 'num_parameters': 0}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/multi_channel_orchestrator.py": {
      "file_path": "/home/hariravichandran/AELP/multi_channel_orchestrator.py",
      "line_number": 420,
      "line_content": "touchpoint_type = TouchpointType.CLICK  # Simplified",
      "violation_type": "forbidden_simplified",
      "hardcoded_value": "Simplified",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/example_model_versioning.py": {
      "file_path": "/home/hariravichandran/AELP/example_model_versioning.py",
      "line_number": 53,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/criteo_data_summary.py": {
      "file_path": "/home/hariravichandran/AELP/criteo_data_summary.py",
      "line_number": 281,
      "line_content": "print(\"7. \ud83d\udd04 Configure monitoring and analytics dashboards\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "7",
      "suggested_fix": "Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/run_fixed_training.py": {
      "file_path": "/home/hariravichandran/AELP/run_fixed_training.py",
      "line_number": 73,
      "line_content": "max_steps = 500  # Shorter episodes",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_steps = 500",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/gaelp_production_monitor.py": {
      "file_path": "/home/hariravichandran/AELP/gaelp_production_monitor.py",
      "line_number": 665,
      "line_content": "parser.add_argument('--port', type=int, default=5000,",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/updated_training_example.py": {
      "file_path": "/home/hariravichandran/AELP/updated_training_example.py",
      "line_number": 483,
      "line_content": "print(\"\\n\u26a0\ufe0f Using fallback simulation (RecSim bridge not available)\")",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/deepmind_features.py": {
      "file_path": "/home/hariravichandran/AELP/deepmind_features.py",
      "line_number": 761,
      "line_content": "return {'weights': np.random.randn(100)}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'weights': np.random.randn(100)}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/start_production_training.py": {
      "file_path": "/home/hariravichandran/AELP/start_production_training.py",
      "line_number": 145,
      "line_content": "logger.info(\"=\"*70)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "7",
      "suggested_fix": "Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/visualize_attribution.py": {
      "file_path": "/home/hariravichandran/AELP/visualize_attribution.py",
      "line_number": 221,
      "line_content": "print(\"=\" * 60)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/google_ads_production_manager.py": {
      "file_path": "/home/hariravichandran/AELP/google_ads_production_manager.py",
      "line_number": 740,
      "line_content": "max_cpc_bid_micros=12_000_000,  # $12.00 max CPC for competitor keywords",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_cpc_bid_micros=12",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/competitive_intelligence.py": {
      "file_path": "/home/hariravichandran/AELP/competitive_intelligence.py",
      "line_number": 241,
      "line_content": "return {'status': 'no_data'}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'status': 'no_data'}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/monitor_training.py": {
      "file_path": "/home/hariravichandran/AELP/monitor_training.py",
      "line_number": 392,
      "line_content": "time.sleep(10)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "10",
      "suggested_fix": "Replace 10 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/fixed_auction_system.py": {
      "file_path": "/home/hariravichandran/AELP/fixed_auction_system.py",
      "line_number": 206,
      "line_content": "return {'error': 'No auctions run yet'}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'error': 'No auctions run yet'}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/gaelp_explainability_summary.py": {
      "file_path": "/home/hariravichandran/AELP/gaelp_explainability_summary.py",
      "line_number": 248,
      "line_content": "return [0.1] * 50",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return [0.1]",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/verify_trajectory_returns.py": {
      "file_path": "/home/hariravichandran/AELP/verify_trajectory_returns.py",
      "line_number": 264,
      "line_content": "logger.info(\"  \u2713 N-step returns (adaptive n=5-10)\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "10",
      "suggested_fix": "Replace 10 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/launch_dashboard.py": {
      "file_path": "/home/hariravichandran/AELP/launch_dashboard.py",
      "line_number": 53,
      "line_content": "print(\"=\" * 50)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/GAELP_2025_ULTIMATE.py": {
      "file_path": "/home/hariravichandran/AELP/GAELP_2025_ULTIMATE.py",
      "line_number": 1009,
      "line_content": "return {'credit': 1.0}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'credit': 1.0}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/aura_ios_campaign_system.py": {
      "file_path": "/home/hariravichandran/AELP/aura_ios_campaign_system.py",
      "line_number": 730,
      "line_content": "print(\"-\" * 50)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/setup_google_ads_production.py": {
      "file_path": "/home/hariravichandran/AELP/setup_google_ads_production.py",
      "line_number": 68,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/examples/delayed_reward_demo.py": {
      "file_path": "/home/hariravichandran/AELP/examples/delayed_reward_demo.py",
      "line_number": 289,
      "line_content": "min_replay_samples=10,",
      "violation_type": "hardcoded_min",
      "hardcoded_value": "min_replay_samples=10",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/ppo_agent.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/rl_agents/ppo_agent.py",
      "line_number": 220,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/budget_pacing_verification.py": {
      "file_path": "/home/hariravichandran/AELP/budget_pacing_verification.py",
      "line_number": 328,
      "line_content": "if success_rate >= 0.8:",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "8",
      "suggested_fix": "Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/bid_explainability_system.py": {
      "file_path": "/home/hariravichandran/AELP/bid_explainability_system.py",
      "line_number": 999,
      "line_content": "return [0.1, 0.2, 0.3, 0.4, 0.5]",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return [0.1, 0.2, 0.3, 0.4, 0.5]",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/aura_demo.py": {
      "file_path": "/home/hariravichandran/AELP/aura_demo.py",
      "line_number": 483,
      "line_content": "console.print(f\"   ROI: {((best_segment[1]['revenue']-best_segment[1]['spend'])/max(best_segment[1]['spend'],1)*100):.1f}%\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "100",
      "suggested_fix": "Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/behavioral_health_dashboard.py": {
      "file_path": "/home/hariravichandran/AELP/behavioral_health_dashboard.py",
      "line_number": 176,
      "line_content": "self.time_series['crisis_parents'].append(0)  # TODO: Get from persistent user data",
      "violation_type": "unfinished_code",
      "hardcoded_value": "TODO",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/competitive_intel.py": {
      "file_path": "/home/hariravichandran/AELP/competitive_intel.py",
      "line_number": 541,
      "line_content": "return {\"error\": \"No auction data available\"}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {\"error\": \"No auction data available\"}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/run_fortified_quiet.py": {
      "file_path": "/home/hariravichandran/AELP/run_fortified_quiet.py",
      "line_number": 40,
      "line_content": "print(\"=\"*70 + \"\\n\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "7",
      "suggested_fix": "Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/delayed_reward_integration_example.py": {
      "file_path": "/home/hariravichandran/AELP/delayed_reward_integration_example.py",
      "line_number": 24,
      "line_content": "\"\"\"Mock RL Agent to demonstrate delayed reward integration\"\"\"",
      "violation_type": "forbidden_mock",
      "hardcoded_value": "Mock",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/gaelp_gym_env.py": {
      "file_path": "/home/hariravichandran/AELP/gaelp_gym_env.py",
      "line_number": 323,
      "line_content": "env = GAELPGymEnv(max_budget=1000.0, max_steps=50, render_mode=\"human\")",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_steps=50",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/training_orchestrator/episode_manager.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/episode_manager.py",
      "line_number": 77,
      "line_content": "safety_violations: List[str] = field(default_factory=list)",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_factory",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/dqn_agent.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/rl_agents/dqn_agent.py",
      "line_number": 325,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/realistic_dashboard.py": {
      "file_path": "/home/hariravichandran/AELP/realistic_dashboard.py",
      "line_number": 393,
      "line_content": "app.run(host='0.0.0.0', debug=True, port=5000)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/example_training_run.py": {
      "file_path": "/home/hariravichandran/AELP/example_training_run.py",
      "line_number": 207,
      "line_content": "return {}, reward, done, info",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/validate_criteo_ctr_model.py": {
      "file_path": "/home/hariravichandran/AELP/validate_criteo_ctr_model.py",
      "line_number": 36,
      "line_content": "'Logistic Regression': LogisticRegression(random_state=42, class_weight='balanced', max_iter=1000)",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_iter=1000",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/parallel_training_accelerator.py": {
      "file_path": "/home/hariravichandran/AELP/parallel_training_accelerator.py",
      "line_number": 332,
      "line_content": "channels = ['google', 'facebook', 'tiktok', 'bing']",
      "violation_type": "hardcoded_channels",
      "hardcoded_value": "channels = ['google', 'facebook', 'tiktok', 'bing']",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/action_space.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/rl_agents/action_space.py",
      "line_number": 286,
      "line_content": "'balanced_optimization': ActionSpaceManager({'default_budget_multiplier': 1.0}),",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_budget_multiplier",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/realistic_aura_simulation.py": {
      "file_path": "/home/hariravichandran/AELP/realistic_aura_simulation.py",
      "line_number": 285,
      "line_content": "self.preferred_channels = [Channel.SOCIAL, Channel.DISPLAY]",
      "violation_type": "hardcoded_channels",
      "hardcoded_value": "channels = [Channel.SOCIAL, Channel.DISPLAY]",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/competitive_auction_integration_fixed.py": {
      "file_path": "/home/hariravichandran/AELP/competitive_auction_integration_fixed.py",
      "line_number": 420,
      "line_content": "if 0.15 <= auction_perf['win_rate'] <= 0.35:",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "15",
      "suggested_fix": "Replace 15 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/llm_integration_setup.py": {
      "file_path": "/home/hariravichandran/AELP/llm_integration_setup.py",
      "line_number": 132,
      "line_content": "print(f\"   \u2022 Fallback provider: {config.fallback_provider}\")",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "Fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/train_aura_agent.py": {
      "file_path": "/home/hariravichandran/AELP/train_aura_agent.py",
      "line_number": 335,
      "line_content": "history = await trainer.train(num_episodes=50)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/creative_integration.py": {
      "file_path": "/home/hariravichandran/AELP/creative_integration.py",
      "line_number": 98,
      "line_content": "UserSegment.RETARGETING  # Default fallback",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/demo_user_journey_database.py": {
      "file_path": "/home/hariravichandran/AELP/demo_user_journey_database.py",
      "line_number": 206,
      "line_content": "return [mobile_touchpoint, desktop_touchpoint]",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return [mobile_touchpoint, desktop_touchpoint]",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/identity_resolver.py": {
      "file_path": "/home/hariravichandran/AELP/identity_resolver.py",
      "line_number": 735,
      "line_content": "max_similarity = 0.0",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_similarity = 0",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/monitor_fortified_training.py": {
      "file_path": "/home/hariravichandran/AELP/monitor_fortified_training.py",
      "line_number": 366,
      "line_content": "time.sleep(5)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/fix_patterns_structure.py": {
      "file_path": "/home/hariravichandran/AELP/fix_patterns_structure.py",
      "line_number": 57,
      "line_content": "cvr = fixed_channels[key].get('cvr', fixed_channels[key].get('cvr_percent', 0) / 100)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "100",
      "suggested_fix": "Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/tests/utils/validators.py": {
      "file_path": "/home/hariravichandran/AELP/tests/utils/validators.py",
      "line_number": 582,
      "line_content": "if daily_budget > current_daily * 10:",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "10",
      "suggested_fix": "Replace 10 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/reward_engineering.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/rl_agents/reward_engineering.py",
      "line_number": 474,
      "line_content": "\"component_history\": {k: v[-100:] for k, v in self.component_history.items()},",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "100",
      "suggested_fix": "Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/sac_agent.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/rl_agents/sac_agent.py",
      "line_number": 179,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/verify_ab_testing_framework.py": {
      "file_path": "/home/hariravichandran/AELP/verify_ab_testing_framework.py",
      "line_number": 451,
      "line_content": "logger.info(\"-\" * 60)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/dynamic_segment_discovery.py": {
      "file_path": "/home/hariravichandran/AELP/dynamic_segment_discovery.py",
      "line_number": 222,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/auction-gym/src/BidderAllocation.py": {
      "file_path": "/home/hariravichandran/AELP/auction-gym/src/BidderAllocation.py",
      "line_number": 39,
      "line_content": "lr = 2e-3",
      "violation_type": "hardcoded_lr",
      "hardcoded_value": "lr = 2",
      "suggested_fix": "Replace with self.optimizer_config.get('learning_rate')"
    },
    "/home/hariravichandran/AELP/training_orchestrator/curriculum.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/curriculum.py",
      "line_number": 54,
      "line_content": "performance_history: List[float] = field(default_factory=list)",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_factory",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/state_processor.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/rl_agents/state_processor.py",
      "line_number": 437,
      "line_content": "z_scores = np.abs((clipped_features - self.outlier_mean) / (self.outlier_std + 1e-8))",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "8",
      "suggested_fix": "Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/training_orchestrator/examples/journey_timeout_example.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/examples/journey_timeout_example.py",
      "line_number": 292,
      "line_content": "print(\"=\" * 50)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/fortified_rl_agent.py": {
      "file_path": "/home/hariravichandran/AELP/fortified_rl_agent.py",
      "line_number": 915,
      "line_content": "raise RuntimeError(\"Creative scoring system failed. Fix creative analysis or data. No fallback selections allowed.\")",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/monitor_online_learning.py": {
      "file_path": "/home/hariravichandran/AELP/monitor_online_learning.py",
      "line_number": 410,
      "line_content": "return {\"error\": \"No metrics data available\"}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {\"error\": \"No metrics data available\"}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/fortified_environment.py": {
      "file_path": "/home/hariravichandran/AELP/fortified_environment.py",
      "line_number": 244,
      "line_content": "return {k: v/total for k, v in counts.items()} if total > 0 else {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {k: v/total for k, v in counts.items()} if total > 0 else {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/convergence_monitoring_integration_demo.py": {
      "file_path": "/home/hariravichandran/AELP/convergence_monitoring_integration_demo.py",
      "line_number": 333,
      "line_content": "print(\"\\nNo fallback monitoring allowed - this is the production system!\")",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/realistic_traffic_simulator.py": {
      "file_path": "/home/hariravichandran/AELP/realistic_traffic_simulator.py",
      "line_number": 76,
      "line_content": "pages_viewed: List[str] = field(default_factory=list)",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_factory",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/agent-manager/kubernetes/scheduler.py": {
      "file_path": "/home/hariravichandran/AELP/agent-manager/kubernetes/scheduler.py",
      "line_number": 51,
      "line_content": "return []",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return []",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/safety_framework/deploy_production.py": {
      "file_path": "/home/hariravichandran/AELP/safety_framework/deploy_production.py",
      "line_number": 419,
      "line_content": "await asyncio.sleep(60)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/cross_account_attribution_demo.py": {
      "file_path": "/home/hariravichandran/AELP/cross_account_attribution_demo.py",
      "line_number": 509,
      "line_content": "print(\"=\" * 60)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/verify_all_components.py": {
      "file_path": "/home/hariravichandran/AELP/verify_all_components.py",
      "line_number": 423,
      "line_content": "bid = 3.5  # Simplified",
      "violation_type": "forbidden_simplified",
      "hardcoded_value": "Simplified",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/gaelp_parameter_manager.py": {
      "file_path": "/home/hariravichandran/AELP/gaelp_parameter_manager.py",
      "line_number": 525,
      "line_content": "raise RuntimeError(\"Hourly patterns are REQUIRED from discovered data for budget distribution. No fallback distributions allowed.\")",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/auction-gym/src/Models.py": {
      "file_path": "/home/hariravichandran/AELP/auction-gym/src/Models.py",
      "line_number": 114,
      "line_content": "lr = 1e-3",
      "violation_type": "hardcoded_lr",
      "hardcoded_value": "lr = 1",
      "suggested_fix": "Replace with self.optimizer_config.get('learning_rate')"
    },
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/environment_wrappers.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/rl_agents/environment_wrappers.py",
      "line_number": 238,
      "line_content": "\"\"\"Get base CTR using Criteo model or fallback to static calculations.\"\"\"",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/agent_factory.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/rl_agents/agent_factory.py",
      "line_number": 63,
      "line_content": "ensemble_weights: list = field(default_factory=lambda: [0.6, 0.4])",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_factory",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/success_criteria_dashboard_integration.py": {
      "file_path": "/home/hariravichandran/AELP/success_criteria_dashboard_integration.py",
      "line_number": 644,
      "line_content": "setInterval(loadInitialData, 30000);",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/google_ads_integration.py": {
      "file_path": "/home/hariravichandran/AELP/google_ads_integration.py",
      "line_number": 237,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/google_ads_gaelp_integration.py": {
      "file_path": "/home/hariravichandran/AELP/google_ads_gaelp_integration.py",
      "line_number": 480,
      "line_content": "return {'status': 'no_campaigns'}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'status': 'no_campaigns'}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/verify_production_checkpoint_strict.py": {
      "file_path": "/home/hariravichandran/AELP/verify_production_checkpoint_strict.py",
      "line_number": 302,
      "line_content": "return {'action': 1}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'action': 1}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/channel_effectiveness_model.py": {
      "file_path": "/home/hariravichandran/AELP/channel_effectiveness_model.py",
      "line_number": 33,
      "line_content": "device_performance: Dict[str, Dict[str, float]] = field(default_factory=dict)",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_factory",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/updated_simulation_example.py": {
      "file_path": "/home/hariravichandran/AELP/updated_simulation_example.py",
      "line_number": 279,
      "line_content": "print(f\"Fallback auction result: {auction_result}\")",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "Fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/auction-gym/src/Auction.py": {
      "file_path": "/home/hariravichandran/AELP/auction-gym/src/Auction.py",
      "line_number": 264,
      "line_content": "return {\"error\": f\"Failed to estimate response: {e}\"}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {\"error\": f\"Failed to estimate response: {e}\"}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/training_orchestrator/delayed_conversion_system.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/delayed_conversion_system.py",
      "line_number": 1106,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/verified_training_wrapper.py": {
      "file_path": "/home/hariravichandran/AELP/verified_training_wrapper.py",
      "line_number": 565,
      "line_content": "episode_metrics = verified_agent.verified_train_episode(env, episode, max_steps=50)",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_steps=50",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/persona_factory.py": {
      "file_path": "/home/hariravichandran/AELP/persona_factory.py",
      "line_number": 455,
      "line_content": "\"age_range\": (65, 80),",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "8",
      "suggested_fix": "Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/audit_dashboard_realism.py": {
      "file_path": "/home/hariravichandran/AELP/audit_dashboard_realism.py",
      "line_number": 95,
      "line_content": "print(\"=\"*60)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/analyze_rl_learnings.py": {
      "file_path": "/home/hariravichandran/AELP/analyze_rl_learnings.py",
      "line_number": 169,
      "line_content": "return [\"carousel_professionals\", \"morning_optimization\", \"video_youth\"]",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return [\"carousel_professionals\", \"morning_optimization\", \"video_youth\"]",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/discovery_engine_broken.py": {
      "file_path": "/home/hariravichandran/AELP/discovery_engine_broken.py",
      "line_number": 64,
      "line_content": "return {'rows': []}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'rows': []}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/simple_behavioral_health_creative_generator.py": {
      "file_path": "/home/hariravichandran/AELP/simple_behavioral_health_creative_generator.py",
      "line_number": 464,
      "line_content": "return []",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return []",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/demo_online_learning_system.py": {
      "file_path": "/home/hariravichandran/AELP/demo_online_learning_system.py",
      "line_number": 262,
      "line_content": "channels = [\"google\", \"facebook\", \"tiktok\"]",
      "violation_type": "hardcoded_channels",
      "hardcoded_value": "channels = [\"google\", \"facebook\", \"tiktok\"]",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/bidding_orchestrator.py": {
      "file_path": "/home/hariravichandran/AELP/bidding_orchestrator.py",
      "line_number": 361,
      "line_content": "print(\"=\" * 60)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/aura_webhook_endpoint.py": {
      "file_path": "/home/hariravichandran/AELP/aura_webhook_endpoint.py",
      "line_number": 49,
      "line_content": "executor = ThreadPoolExecutor(max_workers=4)",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_workers=4",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/dynamic_segment_integration.py": {
      "file_path": "/home/hariravichandran/AELP/dynamic_segment_integration.py",
      "line_number": 206,
      "line_content": "raise RuntimeError(f\"Segment '{segment_id}' not found in discovered segments. No fallback values allowed.\")",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/shadow_mode_manager.py": {
      "file_path": "/home/hariravichandran/AELP/shadow_mode_manager.py",
      "line_number": 752,
      "line_content": "min_sample_size=200,",
      "violation_type": "hardcoded_min",
      "hardcoded_value": "min_sample_size=200",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/fortified_training_loop.py": {
      "file_path": "/home/hariravichandran/AELP/fortified_training_loop.py",
      "line_number": 408,
      "line_content": "'checkpoint_interval': 100",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "100",
      "suggested_fix": "Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/capture_training_output.py": {
      "file_path": "/home/hariravichandran/AELP/capture_training_output.py",
      "line_number": 50,
      "line_content": "process.wait(timeout=5)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/run_fixed_dashboard.py": {
      "file_path": "/home/hariravichandran/AELP/run_fixed_dashboard.py",
      "line_number": 110,
      "line_content": "'--server.port', '8501',",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "8",
      "suggested_fix": "Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/demo_budget_pacer.py": {
      "file_path": "/home/hariravichandran/AELP/demo_budget_pacer.py",
      "line_number": 166,
      "line_content": "channels = [ChannelType.GOOGLE_ADS, ChannelType.FACEBOOK_ADS, ChannelType.TIKTOK_ADS]",
      "violation_type": "hardcoded_channels",
      "hardcoded_value": "channels = [ChannelType.GOOGLE_ADS, ChannelType.FACEBOOK_ADS, ChannelType.TIKTOK_ADS]",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/training_orchestrator/core.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/core.py",
      "line_number": 671,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/training_orchestrator/online_learner.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/online_learner.py",
      "line_number": 963,
      "line_content": "reward = np.random.normal(0.5, 0.2)  # Mock reward",
      "violation_type": "forbidden_mock",
      "hardcoded_value": "Mock",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/regression_detector.py": {
      "file_path": "/home/hariravichandran/AELP/regression_detector.py",
      "line_number": 103,
      "line_content": "historical_context: Dict[str, Any] = field(default_factory=dict)",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_factory",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/safety_system.py": {
      "file_path": "/home/hariravichandran/AELP/safety_system.py",
      "line_number": 682,
      "line_content": "minimum_roi_threshold=0.15  # 15% minimum ROI",
      "violation_type": "hardcoded_threshold",
      "hardcoded_value": "threshold=0",
      "suggested_fix": "Replace with self.performance_thresholds.get_threshold(metric_name)"
    },
    "/home/hariravichandran/AELP/auction_gym_integration_fixed.py": {
      "file_path": "/home/hariravichandran/AELP/auction_gym_integration_fixed.py",
      "line_number": 578,
      "line_content": "if win_rate < 0.05 or win_rate > 0.50:  # Outside realistic bounds",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/explanation_dashboard.py": {
      "file_path": "/home/hariravichandran/AELP/explanation_dashboard.py",
      "line_number": 874,
      "line_content": "return {'error': 'Agent not available for counterfactual analysis'}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'error': 'Agent not available for counterfactual analysis'}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/llm_persona_service.py": {
      "file_path": "/home/hariravichandran/AELP/llm_persona_service.py",
      "line_number": 684,
      "line_content": "\"provider_used\": \"fallback\"",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/agent-manager/core/models.py": {
      "file_path": "/home/hariravichandran/AELP/agent-manager/core/models.py",
      "line_number": 244,
      "line_content": "name: str = Field(..., min_length=1, max_length=255)",
      "violation_type": "hardcoded_min",
      "hardcoded_value": "min_length=1",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/ga4_integration.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_integration.py",
      "line_number": 278,
      "line_content": "competitive_channels = ['Paid Search', 'Paid Shopping', 'Paid Social', 'Display']",
      "violation_type": "hardcoded_channels",
      "hardcoded_value": "channels = ['Paid Search', 'Paid Shopping', 'Paid Social', 'Display']",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/importance_sampler.py": {
      "file_path": "/home/hariravichandran/AELP/importance_sampler.py",
      "line_number": 275,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/gaelp_regression_integration.py": {
      "file_path": "/home/hariravichandran/AELP/gaelp_regression_integration.py",
      "line_number": 136,
      "line_content": "self.regression_detector.statistical_detector.update_baseline(MetricType.REWARD, default_rewards)",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_rewards",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/competitive_auction_integration.py": {
      "file_path": "/home/hariravichandran/AELP/competitive_auction_integration.py",
      "line_number": 529,
      "line_content": "return {\"risk_level\": \"unknown\", \"error\": str(e)}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {\"risk_level\": \"unknown\", \"error\": str(e)}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/creative_content_library.py": {
      "file_path": "/home/hariravichandran/AELP/creative_content_library.py",
      "line_number": 469,
      "line_content": "results[\"performance_lift\"] = (winner.roas / baseline_roas - 1) * 100 if baseline_roas > 0 else 0",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "100",
      "suggested_fix": "Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/gaelp_integration.py": {
      "file_path": "/home/hariravichandran/AELP/gaelp_integration.py",
      "line_number": 117,
      "line_content": "return default_config",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_config",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/competitor_intelligence_integration.py": {
      "file_path": "/home/hariravichandran/AELP/competitor_intelligence_integration.py",
      "line_number": 36,
      "line_content": "keywords: List[str] = field(default_factory=list)",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_factory",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/fix_critical_hardcoding.py": {
      "file_path": "/home/hariravichandran/AELP/fix_critical_hardcoding.py",
      "line_number": 169,
      "line_content": "r'self\\.max_steps = 1000  # Standard episode length',",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_steps = 1000",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/training_orchestrator/journey_timeout.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/journey_timeout.py",
      "line_number": 1296,
      "line_content": "default_timeout_days=14,",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_timeout_days",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/attribution_models.py": {
      "file_path": "/home/hariravichandran/AELP/attribution_models.py",
      "line_number": 373,
      "line_content": "raise RuntimeError(\"DataDrivenAttribution model failed to generate valid scores. Retrain model or fix training data. No fallback attribution allowed.\")",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/enhanced_simulator_fixed.py": {
      "file_path": "/home/hariravichandran/AELP/enhanced_simulator_fixed.py",
      "line_number": 759,
      "line_content": "env = FixedGAELPEnvironment(max_budget=1000.0, max_steps=500)",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_steps=500",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/production_checkpoint_manager.py": {
      "file_path": "/home/hariravichandran/AELP/production_checkpoint_manager.py",
      "line_number": 1476,
      "line_content": "return {'action': 0, 'confidence': 0.8}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'action': 0, 'confidence': 0.8}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/install_recsim.py": {
      "file_path": "/home/hariravichandran/AELP/install_recsim.py",
      "line_number": 126,
      "line_content": "context={'hour': 14, 'device': 'mobile'}",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "14",
      "suggested_fix": "Replace 14 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/realistic_competitor_inference.py": {
      "file_path": "/home/hariravichandran/AELP/realistic_competitor_inference.py",
      "line_number": 219,
      "line_content": "print(\"=\" * 50)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/campaign_visualizer.py": {
      "file_path": "/home/hariravichandran/AELP/campaign_visualizer.py",
      "line_number": 266,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/agent-manager/api/main.py": {
      "file_path": "/home/hariravichandran/AELP/agent-manager/api/main.py",
      "line_number": 407,
      "line_content": "return {\"status\": \"healthy\", \"service\": \"agent-manager\"}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {\"status\": \"healthy\", \"service\": \"agent-manager\"}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/safety_framework/operational_safety.py": {
      "file_path": "/home/hariravichandran/AELP/safety_framework/operational_safety.py",
      "line_number": 962,
      "line_content": "return {'error': str(e)}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'error': str(e)}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/standalone_online_learning_demo.py": {
      "file_path": "/home/hariravichandran/AELP/standalone_online_learning_demo.py",
      "line_number": 843,
      "line_content": "system = OnlineLearningSystem(max_daily_spend=2000.0)",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_daily_spend=2000",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/comprehensive_behavioral_health_creative_generator.py": {
      "file_path": "/home/hariravichandran/AELP/comprehensive_behavioral_health_creative_generator.py",
      "line_number": 1141,
      "line_content": "print(f\"   No hardcoded templates or fallback content used\")",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/auction_gym_integration.py": {
      "file_path": "/home/hariravichandran/AELP/auction_gym_integration.py",
      "line_number": 270,
      "line_content": "print(\"\u2705 AuctionGym integration loaded - NO SIMPLIFIED MECHANICS!\")",
      "violation_type": "forbidden_simplified",
      "hardcoded_value": "SIMPLIFIED",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/run_console_monitor.py": {
      "file_path": "/home/hariravichandran/AELP/run_console_monitor.py",
      "line_number": 323,
      "line_content": "\"\"\"Create a mock agent for demonstration\"\"\"",
      "violation_type": "forbidden_mock",
      "hardcoded_value": "mock",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/safety_framework/production_integration.py": {
      "file_path": "/home/hariravichandran/AELP/safety_framework/production_integration.py",
      "line_number": 150,
      "line_content": "timestamp: datetime = field(default_factory=datetime.utcnow)",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_factory",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/gaelp_persistent_integration.py": {
      "file_path": "/home/hariravichandran/AELP/gaelp_persistent_integration.py",
      "line_number": 346,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/launch_shadow_mode.py": {
      "file_path": "/home/hariravichandran/AELP/launch_shadow_mode.py",
      "line_number": 193,
      "line_content": "min_sample_size=1000,",
      "violation_type": "hardcoded_min",
      "hardcoded_value": "min_sample_size=1000",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/discovered_parameter_config.py": {
      "file_path": "/home/hariravichandran/AELP/discovered_parameter_config.py",
      "line_number": 353,
      "line_content": "return [min(512, complexity * 4), min(256, complexity * 2)]",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return [min(512, complexity * 4), min(256, complexity * 2)]",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/cleanup_remaining_fallbacks.py": {
      "file_path": "/home/hariravichandran/AELP/cleanup_remaining_fallbacks.py",
      "line_number": 93,
      "line_content": "print(\"\\n\u26a0\ufe0f No fallback references found to clean\")",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/production_ab_testing_integration.py": {
      "file_path": "/home/hariravichandran/AELP/production_ab_testing_integration.py",
      "line_number": 774,
      "line_content": "min_observations_per_variant=500,",
      "violation_type": "hardcoded_min",
      "hardcoded_value": "min_observations_per_variant=500",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/launch_production_online_learning.py": {
      "file_path": "/home/hariravichandran/AELP/launch_production_online_learning.py",
      "line_number": 252,
      "line_content": "'avg_bid': 1.0  # Mock",
      "violation_type": "forbidden_mock",
      "hardcoded_value": "Mock",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/production_ad_account_manager.py": {
      "file_path": "/home/hariravichandran/AELP/production_ad_account_manager.py",
      "line_number": 1061,
      "line_content": "print(\"=\"*80)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "8",
      "suggested_fix": "Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/explainability_demo.py": {
      "file_path": "/home/hariravichandran/AELP/explainability_demo.py",
      "line_number": 404,
      "line_content": "print(\"-\" * 40)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "4",
      "suggested_fix": "Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/shadow_mode_demo.py": {
      "file_path": "/home/hariravichandran/AELP/shadow_mode_demo.py",
      "line_number": 420,
      "line_content": "return [convert_types(item) for item in obj]",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return [convert_types(item) for item in obj]",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/fortified_rl_agent_production.py": {
      "file_path": "/home/hariravichandran/AELP/fortified_rl_agent_production.py",
      "line_number": 695,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/safety_framework/budget_controls.py": {
      "file_path": "/home/hariravichandran/AELP/safety_framework/budget_controls.py",
      "line_number": 398,
      "line_content": "return [v for v in self.violations if v.campaign_id == campaign_id]",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return [v for v in self.violations if v.campaign_id == campaign_id]",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/gaelp_success_criteria_monitor.py": {
      "file_path": "/home/hariravichandran/AELP/gaelp_success_criteria_monitor.py",
      "line_number": 914,
      "line_content": "return {\"status\": \"no_data\", \"health_score\": 0}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {\"status\": \"no_data\", \"health_score\": 0}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/journey_state.py": {
      "file_path": "/home/hariravichandran/AELP/journey_state.py",
      "line_number": 329,
      "line_content": "signals_config = default_signals",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_signals",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/check_gaelp_learning.py": {
      "file_path": "/home/hariravichandran/AELP/check_gaelp_learning.py",
      "line_number": 579,
      "line_content": "print(\"NO FALLBACKS. NO MOCK LEARNING. REAL VERIFICATION ONLY.\")",
      "violation_type": "forbidden_mock",
      "hardcoded_value": "MOCK",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/recsim_user_model.py": {
      "file_path": "/home/hariravichandran/AELP/recsim_user_model.py",
      "line_number": 449,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/behavioral_health_persona_factory.py": {
      "file_path": "/home/hariravichandran/AELP/behavioral_health_persona_factory.py",
      "line_number": 96,
      "line_content": "competitors_researched: List[str] = field(default_factory=list)",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_factory",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/competitor_web_intelligence.py": {
      "file_path": "/home/hariravichandran/AELP/competitor_web_intelligence.py",
      "line_number": 325,
      "line_content": "return {\"error\": \"No competitor profiles available\"}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {\"error\": \"No competitor profiles available\"}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/final_competitive_intelligence.py": {
      "file_path": "/home/hariravichandran/AELP/final_competitive_intelligence.py",
      "line_number": 543,
      "line_content": "print(f\"\ud83d\udcb0 Estimated Monthly Budget: $19,500\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "5",
      "suggested_fix": "Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/safety_framework/safety_orchestrator.py": {
      "file_path": "/home/hariravichandran/AELP/safety_framework/safety_orchestrator.py",
      "line_number": 735,
      "line_content": "return {'error': str(e)}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'error': str(e)}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/training_orchestrator/phases.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/phases.py",
      "line_number": 134,
      "line_content": "max_episodes=1000,  # Ongoing operation",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_episodes=1000",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/integrated_training.py": {
      "file_path": "/home/hariravichandran/AELP/integrated_training.py",
      "line_number": 97,
      "line_content": "max_steps_per_episode=100,",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_steps_per_episode=100",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/advanced_ab_testing_enhancements.py": {
      "file_path": "/home/hariravichandran/AELP/advanced_ab_testing_enhancements.py",
      "line_number": 727,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/journey_tracking_solution.py": {
      "file_path": "/home/hariravichandran/AELP/journey_tracking_solution.py",
      "line_number": 411,
      "line_content": "print(\"=\" * 60)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/social_media_scanner.py": {
      "file_path": "/home/hariravichandran/AELP/social_media_scanner.py",
      "line_number": 1019,
      "line_content": "<div style=\"text-align: center; color: #666; padding: 2rem;\">",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/criteo_data_loader.py": {
      "file_path": "/home/hariravichandran/AELP/criteo_data_loader.py",
      "line_number": 310,
      "line_content": "'recommended_batch_size': 64",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/agent-manager/core/services.py": {
      "file_path": "/home/hariravichandran/AELP/agent-manager/core/services.py",
      "line_number": 268,
      "line_content": "return [self._job_to_response(job) for job in jobs]",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return [self._job_to_response(job) for job in jobs]",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/agent-manager/monitoring/metrics.py": {
      "file_path": "/home/hariravichandran/AELP/agent-manager/monitoring/metrics.py",
      "line_number": 240,
      "line_content": "self.notification_channels = []",
      "violation_type": "hardcoded_channels",
      "hardcoded_value": "channels = []",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/safety_framework/emergency_controls.py": {
      "file_path": "/home/hariravichandran/AELP/safety_framework/emergency_controls.py",
      "line_number": 763,
      "line_content": "return [AlertChannel.EMAIL, AlertChannel.SLACK, AlertChannel.SMS]",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return [AlertChannel.EMAIL, AlertChannel.SLACK, AlertChannel.SMS]",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/creative_effectiveness_model.py": {
      "file_path": "/home/hariravichandran/AELP/creative_effectiveness_model.py",
      "line_number": 35,
      "line_content": "segment_performance: Dict[str, Dict[str, float]] = field(default_factory=dict)",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_factory",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/ga4_trial_vs_paid_extractor.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_trial_vs_paid_extractor.py",
      "line_number": 256,
      "line_content": "print(\"  4. Campaign segmentation critical for optimization\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "4",
      "suggested_fix": "Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/budget_safety_monitor.py": {
      "file_path": "/home/hariravichandran/AELP/budget_safety_monitor.py",
      "line_number": 459,
      "line_content": "threshold=1.0,",
      "violation_type": "hardcoded_threshold",
      "hardcoded_value": "threshold=1",
      "suggested_fix": "Replace with self.performance_thresholds.get_threshold(metric_name)"
    },
    "/home/hariravichandran/AELP/journey_aware_rl_agent.py": {
      "file_path": "/home/hariravichandran/AELP/journey_aware_rl_agent.py",
      "line_number": 595,
      "line_content": "last_3_channels = []",
      "violation_type": "hardcoded_channels",
      "hardcoded_value": "channels = []",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/fortified_environment_no_hardcoding.py": {
      "file_path": "/home/hariravichandran/AELP/fortified_environment_no_hardcoding.py",
      "line_number": 721,
      "line_content": "return {'fixes_applied': False, 'reason': 'No quality issues to fix'}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'fixes_applied': False, 'reason': 'No quality issues to fix'}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/budget_pacer_integration.py": {
      "file_path": "/home/hariravichandran/AELP/budget_pacer_integration.py",
      "line_number": 278,
      "line_content": "return {\"error\": str(e)}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {\"error\": str(e)}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/safety_framework/performance_safety.py": {
      "file_path": "/home/hariravichandran/AELP/safety_framework/performance_safety.py",
      "line_number": 699,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/statistical_ab_testing_framework.py": {
      "file_path": "/home/hariravichandran/AELP/statistical_ab_testing_framework.py",
      "line_number": 1267,
      "line_content": "return {'error': 'Test not found'}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'error': 'Test not found'}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/auction-gym/src/Bidder.py": {
      "file_path": "/home/hariravichandran/AELP/auction-gym/src/Bidder.py",
      "line_number": 578,
      "line_content": "scheduler = torch.optim.lr_scheduler.ReduceLROnPlateau(optimizer, 'min', patience=100, min_lr=1e-8, factor=0.2, threshold=5e-3, verbose=True)",
      "violation_type": "hardcoded_lr",
      "hardcoded_value": "lr=1",
      "suggested_fix": "Replace with self.optimizer_config.get('learning_rate')"
    },
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/networks.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/rl_agents/networks.py",
      "line_number": 390,
      "line_content": "-(math.log(10000.0) / d_model))",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "10000",
      "suggested_fix": "Replace 10000 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/budget_safety_controller.py": {
      "file_path": "/home/hariravichandran/AELP/budget_safety_controller.py",
      "line_number": 1458,
      "line_content": "max_hourly_velocity_increase=0.50",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_hourly_velocity_increase=0",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/agent-manager/main.py": {
      "file_path": "/home/hariravichandran/AELP/agent-manager/main.py",
      "line_number": 126,
      "line_content": "await asyncio.sleep(300)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/shadow_mode_environment.py": {
      "file_path": "/home/hariravichandran/AELP/shadow_mode_environment.py",
      "line_number": 420,
      "line_content": "behavior_model = self.user_behavior_models.get(segment_name, self.user_behavior_models.get('default_user', {}))",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_user",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/safety_framework/production_budget_controls.py": {
      "file_path": "/home/hariravichandran/AELP/safety_framework/production_budget_controls.py",
      "line_number": 672,
      "line_content": "return {'success': False, 'error': f\"Payment processing error: {str(e)}\"}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'success': False, 'error': f\"Payment processing error: {str(e)}\"}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/dashboard.py": {
      "file_path": "/home/hariravichandran/AELP/dashboard.py",
      "line_number": 125,
      "line_content": "df['ctr_rolling'] = df['actual_ctr'].rolling(window=window_size, min_periods=1).mean()",
      "violation_type": "hardcoded_min",
      "hardcoded_value": "min_periods=1",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/dynamic_discovery.py": {
      "file_path": "/home/hariravichandran/AELP/dynamic_discovery.py",
      "line_number": 36,
      "line_content": "statistics: Dict[str, Dict[str, float]] = field(default_factory=dict)",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_factory",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/auction-gym/src/main.py": {
      "file_path": "/home/hariravichandran/AELP/auction-gym/src/main.py",
      "line_number": 298,
      "line_content": "min_measure, max_measure = 0.0, 0.0",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_measure = 0",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/recsim_auction_bridge.py": {
      "file_path": "/home/hariravichandran/AELP/recsim_auction_bridge.py",
      "line_number": 787,
      "line_content": "num_queries=3,",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/learning_tracker.py": {
      "file_path": "/home/hariravichandran/AELP/learning_tracker.py",
      "line_number": 131,
      "line_content": "return {\"status\": \"No campaigns to analyze\"}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {\"status\": \"No campaigns to analyze\"}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/wandb_tracking.py": {
      "file_path": "/home/hariravichandran/AELP/wandb_tracking.py",
      "line_number": 416,
      "line_content": "return {k: v for k, v in self.__dict__.items() if not k.startswith('_')}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {k: v for k, v in self.__dict__.items() if not k.startswith('_')}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/model_versioning.py": {
      "file_path": "/home/hariravichandran/AELP/model_versioning.py",
      "line_number": 964,
      "line_content": "\"training_episodes\": 1000",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "1000",
      "suggested_fix": "Replace 1000 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/budget_optimizer.py": {
      "file_path": "/home/hariravichandran/AELP/budget_optimizer.py",
      "line_number": 1185,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/run_google_ads_production.py": {
      "file_path": "/home/hariravichandran/AELP/run_google_ads_production.py",
      "line_number": 120,
      "line_content": "return {'status': 'not_initialized'}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'status': 'not_initialized'}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/segment_discovery.py": {
      "file_path": "/home/hariravichandran/AELP/segment_discovery.py",
      "line_number": 1306,
      "line_content": "engine = SegmentDiscoveryEngine(min_cluster_size=20, max_clusters=15)",
      "violation_type": "hardcoded_min",
      "hardcoded_value": "min_cluster_size=20",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/enhanced_journey_tracking.py": {
      "file_path": "/home/hariravichandran/AELP/enhanced_journey_tracking.py",
      "line_number": 297,
      "line_content": "return []",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return []",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/training_orchestrator/performance_monitor.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/performance_monitor.py",
      "line_number": 675,
      "line_content": "return {\"phase\": phase.value, \"no_data\": True}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {\"phase\": phase.value, \"no_data\": True}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/integrated_behavioral_simulator.py": {
      "file_path": "/home/hariravichandran/AELP/integrated_behavioral_simulator.py",
      "line_number": 258,
      "line_content": "return {k: v/total for k, v in adjusted.items()}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {k: v/total for k, v in adjusted.items()}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/training_orchestrator/production_adapter.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/production_adapter.py",
      "line_number": 153,
      "line_content": "list(self.storage_client.list_buckets(max_results=1))",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_results=1",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/safety_framework/agent_behavior_safety.py": {
      "file_path": "/home/hariravichandran/AELP/safety_framework/agent_behavior_safety.py",
      "line_number": 900,
      "line_content": "return {'error': str(e)}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'error': str(e)}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/safety_framework/data_safety.py": {
      "file_path": "/home/hariravichandran/AELP/safety_framework/data_safety.py",
      "line_number": 863,
      "line_content": "return {'error': str(e)}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'error': str(e)}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/pipeline_integration.py": {
      "file_path": "/home/hariravichandran/AELP/pipeline_integration.py",
      "line_number": 355,
      "line_content": "print(\"=\" * 80)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "8",
      "suggested_fix": "Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/training_orchestrator/safety_monitor.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/safety_monitor.py",
      "line_number": 155,
      "line_content": "anomaly_detection_threshold=2.5",
      "violation_type": "hardcoded_threshold",
      "hardcoded_value": "threshold=2",
      "suggested_fix": "Replace with self.performance_thresholds.get_threshold(metric_name)"
    },
    "/home/hariravichandran/AELP/performance_cli.py": {
      "file_path": "/home/hariravichandran/AELP/performance_cli.py",
      "line_number": 315,
      "line_content": "rolling_roas = df['actual_roas'].rolling(window=window_size, min_periods=1).mean()",
      "violation_type": "hardcoded_min",
      "hardcoded_value": "min_periods=1",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/ga4_live_extractor.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_live_extractor.py",
      "line_number": 161,
      "line_content": "logger.info(\"=\"*60)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/training_orchestrator/delayed_reward_system.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/delayed_reward_system.py",
      "line_number": 1055,
      "line_content": "return {'error': str(e)}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'error': str(e)}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/verify_sequence_modeling.py": {
      "file_path": "/home/hariravichandran/AELP/verify_sequence_modeling.py",
      "line_number": 246,
      "line_content": "print(\"\u2705 No fallback implementations found in main RL agent\")",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/verify_scanner_launch.py": {
      "file_path": "/home/hariravichandran/AELP/verify_scanner_launch.py",
      "line_number": 285,
      "line_content": "print(\"=\" * 40)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "4",
      "suggested_fix": "Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/training_orchestrator/production_example.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/production_example.py",
      "line_number": 6,
      "line_content": "real production services instead of demo/mock services.",
      "violation_type": "forbidden_mock",
      "hardcoded_value": "mock",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/parameter_discovery_manager.py": {
      "file_path": "/home/hariravichandran/AELP/parameter_discovery_manager.py",
      "line_number": 386,
      "line_content": "return self.parameters.quality_score_ranges.get(competitor, 0.7)  # Emergency fallback only",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/discovery_engine.py": {
      "file_path": "/home/hariravichandran/AELP/discovery_engine.py",
      "line_number": 543,
      "line_content": "return {'rows': rows} if rows else None",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'rows': rows}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/data_pipeline.py": {
      "file_path": "/home/hariravichandran/AELP/data_pipeline.py",
      "line_number": 398,
      "line_content": "self.executor = ThreadPoolExecutor(max_workers=4)",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_workers=4",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/budget_pacer.py": {
      "file_path": "/home/hariravichandran/AELP/budget_pacer.py",
      "line_number": 836,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/explainable_rl_agent.py": {
      "file_path": "/home/hariravichandran/AELP/explainable_rl_agent.py",
      "line_number": 400,
      "line_content": "return {'error': 'No recent decisions to analyze'}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'error': 'No recent decisions to analyze'}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/gaelp_master_integration_simple.py": {
      "file_path": "/home/hariravichandran/AELP/gaelp_master_integration_simple.py",
      "line_number": 796,
      "line_content": "print(\"Components that couldn't be imported used fallback implementations.\")",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/verify_hardcoding_elimination.py": {
      "file_path": "/home/hariravichandran/AELP/verify_hardcoding_elimination.py",
      "line_number": 182,
      "line_content": "print(\"- GA4 balance/thrive: 3.2% CVR\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/safety_framework/content_safety.py": {
      "file_path": "/home/hariravichandran/AELP/safety_framework/content_safety.py",
      "line_number": 67,
      "line_content": "timestamp: datetime = field(default_factory=datetime.utcnow)",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_factory",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/user_journey_database.py": {
      "file_path": "/home/hariravichandran/AELP/user_journey_database.py",
      "line_number": 1310,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/creative_selector.py": {
      "file_path": "/home/hariravichandran/AELP/creative_selector.py",
      "line_number": 348,
      "line_content": "return list(self.creatives.values())[0]  # Fallback",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "Fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/conversion_tracking_pixels.py": {
      "file_path": "/home/hariravichandran/AELP/conversion_tracking_pixels.py",
      "line_number": 507,
      "line_content": "return {\"status\": \"tracked\"}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {\"status\": \"tracked\"}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/NO_FALLBACKS.py": {
      "file_path": "/home/hariravichandran/AELP/NO_FALLBACKS.py",
      "line_number": 84,
      "line_content": "\"\"\"Raised when fallback code is detected\"\"\"",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/fortified_rl_agent_no_hardcoding.py": {
      "file_path": "/home/hariravichandran/AELP/fortified_rl_agent_no_hardcoding.py",
      "line_number": 5454,
      "line_content": "return {'status': 'no_trajectories'}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'status': 'no_trajectories'}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/offline_rl_trainer.py": {
      "file_path": "/home/hariravichandran/AELP/offline_rl_trainer.py",
      "line_number": 613,
      "line_content": "simulator_results = test_with_enhanced_simulator(trainer, n_episodes=10)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "10",
      "suggested_fix": "Replace 10 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/component_logger.py": {
      "file_path": "/home/hariravichandran/AELP/component_logger.py",
      "line_number": 113,
      "line_content": "return []",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return []",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/verify_regression_integration.py": {
      "file_path": "/home/hariravichandran/AELP/verify_regression_integration.py",
      "line_number": 685,
      "line_content": "print(\"\u2705 No fallback code detected\")",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/NO_FALLBACKS_SMART.py": {
      "file_path": "/home/hariravichandran/AELP/NO_FALLBACKS_SMART.py",
      "line_number": 260,
      "line_content": "print(\"2. Remove Mock classes from production code\")",
      "violation_type": "forbidden_mock",
      "hardcoded_value": "Mock",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/ga4_mcp_extractor.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_mcp_extractor.py",
      "line_number": 104,
      "line_content": "return {'product': 'unknown', 'type': 'unknown', 'name': campaign_name}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'product': 'unknown', 'type': 'unknown', 'name': campaign_name}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/evaluation_framework.py": {
      "file_path": "/home/hariravichandran/AELP/evaluation_framework.py",
      "line_number": 1218,
      "line_content": "return [self._make_json_serializable(item) for item in obj]",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return [self._make_json_serializable(item) for item in obj]",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/training_orchestrator/checkpoint_manager.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/checkpoint_manager.py",
      "line_number": 229,
      "line_content": "return {'total_episodes': 0, 'best_roas': 0, 'avg_roas': 0}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'total_episodes': 0, 'best_roas': 0, 'avg_roas': 0}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/shadow_mode_testing.py": {
      "file_path": "/home/hariravichandran/AELP/shadow_mode_testing.py",
      "line_number": 772,
      "line_content": "segments = ['researching_parent', 'concerned_parent']",
      "violation_type": "hardcoded_segments",
      "hardcoded_value": "segments = ['researching_parent', 'concerned_parent']",
      "suggested_fix": "Replace with self.segment_discovery.get_discovered_segments()"
    },
    "/home/hariravichandran/AELP/verify_google_ads_integration.py": {
      "file_path": "/home/hariravichandran/AELP/verify_google_ads_integration.py",
      "line_number": 351,
      "line_content": "print(\"\u2705 No fallback code detected\")",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/audit_trail.py": {
      "file_path": "/home/hariravichandran/AELP/audit_trail.py",
      "line_number": 1074,
      "line_content": "return [0.1, 0.2, 0.3, 0.4, 0.5]",
      "violation_type": "hardcoded_list",
      "hardcoded_value": "return [0.1, 0.2, 0.3, 0.4, 0.5]",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/conversion_lag_model.py": {
      "file_path": "/home/hariravichandran/AELP/conversion_lag_model.py",
      "line_number": 572,
      "line_content": "window_impact = model.predict_attribution_window_impact(sample_journeys, [7, 14, 21, 30, 45])",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "14",
      "suggested_fix": "Replace 14 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/keyword_gap_analyzer.py": {
      "file_path": "/home/hariravichandran/AELP/keyword_gap_analyzer.py",
      "line_number": 396,
      "line_content": "return {\"error\": \"No keyword opportunities analyzed\"}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {\"error\": \"No keyword opportunities analyzed\"}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/agent-manager/kubernetes/client.py": {
      "file_path": "/home/hariravichandran/AELP/agent-manager/kubernetes/client.py",
      "line_number": 349,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/ab_testing_integration.py": {
      "file_path": "/home/hariravichandran/AELP/ab_testing_integration.py",
      "line_number": 609,
      "line_content": "worst_segments = []",
      "violation_type": "hardcoded_segments",
      "hardcoded_value": "segments = []",
      "suggested_fix": "Replace with self.segment_discovery.get_discovered_segments()"
    },
    "/home/hariravichandran/AELP/safety_framework/production_content_safety.py": {
      "file_path": "/home/hariravichandran/AELP/safety_framework/production_content_safety.py",
      "line_number": 201,
      "line_content": "self.executor = ThreadPoolExecutor(max_workers=20)",
      "violation_type": "hardcoded_max",
      "hardcoded_value": "max_workers=20",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/ga4_real_extractor.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_real_extractor.py",
      "line_number": 277,
      "line_content": "logger.info(\"=\"*60)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/creative_content_analyzer.py": {
      "file_path": "/home/hariravichandran/AELP/creative_content_analyzer.py",
      "line_number": 695,
      "line_content": "return {'error': 'One or both creatives not found'}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'error': 'One or both creatives not found'}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/verify_pipeline.py": {
      "file_path": "/home/hariravichandran/AELP/verify_pipeline.py",
      "line_number": 369,
      "line_content": "(\"No Fallback Code\", verify_no_fallbacks),",
      "violation_type": "forbidden_fallback",
      "hardcoded_value": "Fallback",
      "suggested_fix": "Remove fallback, implement proper discovery mechanism"
    },
    "/home/hariravichandran/AELP/training_orchestrator/cli.py": {
      "file_path": "/home/hariravichandran/AELP/training_orchestrator/cli.py",
      "line_number": 234,
      "line_content": "print(\"   4. See example_training_run.py for reference\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "4",
      "suggested_fix": "Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/comprehensive_realism_audit.py": {
      "file_path": "/home/hariravichandran/AELP/comprehensive_realism_audit.py",
      "line_number": 315,
      "line_content": "print(\"=\"*60)",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "6",
      "suggested_fix": "Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    },
    "/home/hariravichandran/AELP/safety_framework/production_monitoring.py": {
      "file_path": "/home/hariravichandran/AELP/safety_framework/production_monitoring.py",
      "line_number": 851,
      "line_content": "for rule in default_rules:",
      "violation_type": "hardcoded_default",
      "hardcoded_value": "default_rules",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/integrate_production_checkpoint_manager.py": {
      "file_path": "/home/hariravichandran/AELP/integrate_production_checkpoint_manager.py",
      "line_number": 457,
      "line_content": "return {'action': 0, 'confidence': 0.8}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'action': 0, 'confidence': 0.8}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/cross_account_attributor_simple.py": {
      "file_path": "/home/hariravichandran/AELP/cross_account_attributor_simple.py",
      "line_number": 520,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/cross_account_attributor.py": {
      "file_path": "/home/hariravichandran/AELP/cross_account_attributor.py",
      "line_number": 613,
      "line_content": "return {}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/safety_framework/integration.py": {
      "file_path": "/home/hariravichandran/AELP/safety_framework/integration.py",
      "line_number": 406,
      "line_content": "return {'allowed': True, 'message': 'API call validated'}",
      "violation_type": "hardcoded_dict",
      "hardcoded_value": "return {'allowed': True, 'message': 'API call validated'}",
      "suggested_fix": "Replace with dynamically discovered value"
    },
    "/home/hariravichandran/AELP/ga4_comprehensive_extractor.py": {
      "file_path": "/home/hariravichandran/AELP/ga4_comprehensive_extractor.py",
      "line_number": 479,
      "line_content": "print(\"3. Use extracted data to train GAELP with real patterns\")",
      "violation_type": "hardcoded_number",
      "hardcoded_value": "3",
      "suggested_fix": "Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    }
  },
  "suggested_fixes": {
    "/home/hariravichandran/AELP/fix_dashboard_component_connections.py": [
      "Line 3: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 6: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 283: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 283: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace with dynamically discovered value",
      "Line 85: Replace with dynamically discovered value",
      "Line 107: Replace with dynamically discovered value",
      "Line 181: Replace with self.segment_discovery.get_discovered_segments()"
    ],
    "/home/hariravichandran/AELP/fix_complete_integration.py": [
      "Line 3: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 6: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 18: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 19: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 20: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace with dynamically discovered value",
      "Line 86: Replace with dynamically discovered value",
      "Line 93: Replace with dynamically discovered value",
      "Line 94: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/quick_persistence_demo.py": [
      "Line 3: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 18: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 20: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/affiliate_pattern_analyzer.py": [
      "Line 3: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 6: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 9: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 133 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 251: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 251: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 368: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 369: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 373: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 376: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 376: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 387: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 397: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 409: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 421: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 467: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 488: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 518: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 521: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 521: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 539: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 539: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 539: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 547: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 557: Replace 15000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 558: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 566: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 577: Replace 12000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 585: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 595: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 596: Replace 15000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 684: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 716: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 744: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 744: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 745: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 746: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 746: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 748: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 749: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 750: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 751: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 753: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 754: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 755: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 756: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 763: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 764: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 776: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 783: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 793: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 798: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 807: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 819: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 820: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 820: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace with dynamically discovered value",
      "Line 53: Replace with dynamically discovered value",
      "Line 104: Replace with dynamically discovered value",
      "Line 226: Replace with dynamically discovered value",
      "Line 620: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/gaelp_live_dashboard_enhanced.py": [
      "Line 3: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 382: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 563: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 606: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 607: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 608: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 610: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 611: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 612: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 613: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 614: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 615: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 701: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 718: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 725: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 757: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 765: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 765: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 777: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 823: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 823: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 833: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 844: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 862: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 901: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 904: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 904: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 907: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 907: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 907: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 916: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 917: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 920: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 920: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 923: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 923: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 923: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 963: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 977: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 982: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 983: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 989: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 999: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 999: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1065: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1244: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1244: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1296: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1297: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1300: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1303: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1387: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1395: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1404: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1413: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1413: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1431: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1433: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1438: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1460: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1460: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1468: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1469: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1470: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1471: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1472: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1474: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1475: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1480: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1481: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1483: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1519: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1528: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1528: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1550: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1554: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1555: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1560: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1560: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1560: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1560: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1566: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1576: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1577: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1577: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1578: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1578: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1579: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1579: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1580: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1583: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1583: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1583: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1583: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1587: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1592: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1593: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1593: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1598: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1599: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1599: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1624: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1627: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1682: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1682: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1682: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1682: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1691: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1691: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1693: Replace 0008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1693: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1695: Replace 012 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1697: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1697: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1701: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1701: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1701: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1704: Replace 0001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1704: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1704: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1704: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1709: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1709: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1710: Replace 012 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1711: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1711: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1712: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1713: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1729: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1755: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1755: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1825: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1833: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1906: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1906: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1910: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1917: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1917: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1936: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1940: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2093: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2098: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2111: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2124: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2214: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2218: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2222: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2223: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2225: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2233: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2234: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2240: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2270: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2277: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2297: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2308: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2323: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2351: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2351: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2351: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2353: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2388: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2399: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2413: Replace 119 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2413: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2414: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2426: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2428: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2440: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2451: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2461: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2461: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2462: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2462: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2463: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2463: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2466: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2466: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2467: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2467: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2468: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2468: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2472: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2517: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2532: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2544: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2584: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2596: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2597: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2600: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2601: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2602: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2604: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2613: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2620: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2622: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2627: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2627: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2629: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2629: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2647: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2665: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2676: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2682: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2737: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2743: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2749: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2768: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2768: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2768: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2769: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2769: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2769: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2771: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2771: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2771: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2801: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2801: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2818: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2821: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2848: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2857: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2858: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2859: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2860: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2861: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2873: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2873: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2897: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2897: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2904: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2906: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2912: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3031: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3069: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3070: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3071: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3095: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3096: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3097: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3099: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 688: Replace with dynamically discovered value",
      "Line 718: Replace with self.discovered_patterns['exploration']['epsilon']",
      "Line 1358: Replace with dynamically discovered value",
      "Line 2519: Replace with dynamically discovered value",
      "Line 2644: Replace with self.segment_discovery.get_discovered_segments()",
      "Line 2648: Replace with dynamically discovered value",
      "Line 2710: Replace with self.segment_discovery.get_discovered_segments()"
    ],
    "/home/hariravichandran/AELP/fix_master_auction.py": [
      "Line 4: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 02 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/verify_todo_completion.py": [
      "Line 4: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 20: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 301: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 345: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 350: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 409: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 411: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 418: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 418: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 418: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 419: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 419: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 419: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 442: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3: Replace with dynamically discovered value",
      "Line 4: Replace with dynamically discovered value",
      "Line 15: Replace with dynamically discovered value",
      "Line 31: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/gaelp_dynamic_budget_optimizer.py": [
      "Line 4: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 289: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 296: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 301: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 360: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 412: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 431: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 432: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 433: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 434: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 442: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 446: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 469: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 579: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 579: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 622: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 630: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 633: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 656: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 678: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 678: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 682: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 683: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 707: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 708: Replace 15000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 709: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 712: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 712: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 713: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 714: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 723: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 725: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 727: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 728: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 729: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 730: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 742: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 749: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 750: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Remove fallback, implement proper discovery mechanism",
      "Line 389: Remove fallback, implement proper discovery mechanism",
      "Line 390: Remove fallback, implement proper discovery mechanism",
      "Line 644: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/performance_driven_budget_optimizer.py": [
      "Line 4: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 7: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 9: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 168 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 251: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 315: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 344: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 345: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 476: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 505: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 510: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 525: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 528: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 565: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 582: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 583: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 584: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 587: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 588: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 595: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 596: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 597: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 598: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 599: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 601: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 602: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 603: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 604: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 605: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 606: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 608: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 614: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 614: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 614: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 615: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 622: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 624: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 624: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 626: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 626: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 628: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 628: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 630: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 639: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 641: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 643: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 654: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 657: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 664: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 670: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 671: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 671: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 673: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 675: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 718: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 719: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 127: Replace with dynamically discovered value",
      "Line 243: Replace with dynamically discovered value",
      "Line 251: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 470: Remove fallback, implement proper discovery mechanism",
      "Line 571: Replace with dynamically discovered value",
      "Line 576: Remove fallback, implement proper discovery mechanism",
      "Line 577: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/display_bot_filter.py": [
      "Line 4: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 9: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 294: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 150000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 355: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 365: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 373: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 374: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 376: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 382: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 383: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 390: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 394: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 396: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 398: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 399: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 405: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 406: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 407: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 408: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 419: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 420: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 421: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 426: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 430: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 431: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 463: Replace 150000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 463: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 464: Replace 150000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 510: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 548: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 550: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 553: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 554: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 555: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 555: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 447: Replace with dynamically discovered value",
      "Line 448: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/display_channel_fixer.py": [
      "Line 4: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 7: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 9: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 150000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 150000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 127 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 150000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 150000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 150000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 01 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/display_channel_diagnostic.py": [
      "Line 4: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 17: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 150000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 149500 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 120000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 150000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 149500 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 120000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 150000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 149500 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 120000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 294: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 373: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 383: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 388: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 394: Replace 148 with self.patterns.get('parameter_name', discovered_value)",
      "Line 394: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 394: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 398: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 400: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 434: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 454: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 454: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 455: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 456: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 473: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace with dynamically discovered value",
      "Line 115: Replace with dynamically discovered value",
      "Line 170: Remove fallback, implement proper discovery mechanism",
      "Line 170: Replace with dynamically discovered value",
      "Line 195: Remove fallback, implement proper discovery mechanism",
      "Line 195: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/behavioral_health_headline_generator.py": [
      "Line 4: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 4: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 1234567890 with self.patterns.get('parameter_name', discovered_value)",
      "Line 399: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 423: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 441: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 452: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 459: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 460: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 461: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 462: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 479: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 583: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 585: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 605: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 605: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 606: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 606: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 629: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 640: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 649: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 652: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 670: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 670: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 680: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 782: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 783: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 783: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 800: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 802: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 804: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace with dynamically discovered value",
      "Line 322: Replace with dynamically discovered value",
      "Line 332: Replace with dynamically discovered value",
      "Line 350: Replace with dynamically discovered value",
      "Line 461: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/gaelp_complete_integration.py": [
      "Line 4: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 345: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 150000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 392: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 192 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 485: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 490: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 492: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 497: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 523: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 545: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 594: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 595: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 596: Replace 012 with self.patterns.get('parameter_name', discovered_value)",
      "Line 597: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 602: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 603: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 604: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 634: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 698: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 698: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 701: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 704: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 710: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 734: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 751: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 762: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 764: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 782: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 794: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 796: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 814: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 823: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 828: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 829: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 829: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 481: Replace with dynamically discovered value",
      "Line 574: Replace with dynamically discovered value",
      "Line 638: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/launch_parallel_training.py": [
      "Line 4: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/display_channel_diagnostic_fixed.py": [
      "Line 4: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 17: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 150000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 149500 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 120000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 283: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 148 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/full_dashboard.py": [
      "Line 4: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 315: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 387: Replace 018 with self.patterns.get('parameter_name', discovered_value)",
      "Line 388: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 393: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 400: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 402: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 018 with self.patterns.get('parameter_name', discovered_value)",
      "Line 404: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 452: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 453: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 455: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 456: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 474: Replace 199 with self.patterns.get('parameter_name', discovered_value)",
      "Line 475: Replace 199 with self.patterns.get('parameter_name', discovered_value)",
      "Line 516: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 520: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 523: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 524: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 527: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 534: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 552: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 620: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 625: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 674: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 676: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 677: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 678: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 679: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 679: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 679: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 685: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace with self.segment_discovery.get_discovered_segments()",
      "Line 348: Replace with dynamically discovered value",
      "Line 365: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/gaelp_production_orchestrator.py": [
      "Line 4: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 563: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 564: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 588: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 589: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 590: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 591: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 592: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 741: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 749: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 825: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 840: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 978: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 997: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1006: Replace 199 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1064: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1071: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1078: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1082: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1082: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1137: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1193: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1193: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1334: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1343: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1345: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1345: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1478: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1579: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1635: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1641: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1653: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1715: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1754: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1754: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1795: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1825: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1825: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1885: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1886: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1897: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1900: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1938: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1981: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2131: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2132: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2132: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2138: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2139: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2293: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2298: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2320: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2347: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2348: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2523: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace with dynamically discovered value",
      "Line 562: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 564: Replace with dynamically discovered value",
      "Line 1045: Remove fallback, implement proper discovery mechanism",
      "Line 1476: Replace with dynamically discovered value",
      "Line 1476: Replace with dynamically discovered value",
      "Line 2159: Replace with dynamically discovered value",
      "Line 2424: Replace with dynamically discovered value",
      "Line 2467: Replace with dynamically discovered value",
      "Line 2468: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/crisis_parent_training_demo.py": [
      "Line 5: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace with dynamically discovered value",
      "Line 94: Replace with dynamically discovered value",
      "Line 239: Replace with self.optimizer_config.get('learning_rate')"
    ],
    "/home/hariravichandran/AELP/affiliate_content_replicator.py": [
      "Line 5: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 9: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 15000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 288: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 288: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 362: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 392: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 392: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 410: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 412: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 455: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 457: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 461: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 463: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 464: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 467: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 468: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 469: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 470: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 540: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 541: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 580: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 587: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 590: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 591: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 592: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 592: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 593: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 593: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 595: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 596: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 627: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 637: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 639: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 641: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/user_journey_tracker.py": [
      "Line 5: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 6: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 644: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 673: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 695: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 947: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 979: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 995: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 996: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 998: Replace 1200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1010: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1011: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1012: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1015: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1021: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1021: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1022: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace with dynamically discovered value",
      "Line 93: Replace with dynamically discovered value",
      "Line 132: Replace with dynamically discovered value",
      "Line 132: Replace with dynamically discovered value",
      "Line 145: Replace with dynamically discovered value",
      "Line 145: Replace with dynamically discovered value",
      "Line 152: Replace with dynamically discovered value",
      "Line 152: Replace with dynamically discovered value",
      "Line 157: Replace with dynamically discovered value",
      "Line 157: Replace with dynamically discovered value",
      "Line 517: Replace with dynamically discovered value",
      "Line 522: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/run_real_rl_demo.py": [
      "Line 5: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 294: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 294: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 357: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 376: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 376: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 382: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 390: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 394: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 394: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 394: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 395: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 399: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 404: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 405: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 408: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 408: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 410: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 420: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 426: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 432: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 432: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 434: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 434: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 438: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 444: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 446: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 446: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 451: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 531: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 532: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 532: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 535: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 535: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 536: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 536: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 537: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 562: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 579: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 594: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 624: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 634: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 640: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 641: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 644: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 649: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 650: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 660: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 661: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 695: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 697: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 712: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 714: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 718: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 722: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 723: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 724: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 738: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 739: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 740: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 744: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 748: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 750: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 753: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 754: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 774: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 806: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 808: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace with dynamically discovered value",
      "Line 449: Replace with dynamically discovered value",
      "Line 451: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/check_competitor_bids.py": [
      "Line 5: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 6: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 6: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 7: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 7: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 9: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 9: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 9: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 9: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 19: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/importance_sampling_trainer.py": [
      "Line 5: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 368: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 369: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 402: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 1000 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/fix_dashboard_storage_integration.py": [
      "Line 6: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/demo_realistic_persistent_journeys.py": [
      "Line 6: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/fix_dashboard_sections.py": [
      "Line 6: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 7: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 17: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 175 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace with self.segment_discovery.get_discovered_segments()"
    ],
    "/home/hariravichandran/AELP/fix_all_issues.py": [
      "Line 6: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 055 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 085 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 045 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 125 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 085 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 065 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/monte_carlo_simulator.py": [
      "Line 6: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 451: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 467: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 488: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 522: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 525: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 528: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 528: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 613: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 630: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 633: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 634: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 640: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 640: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 647: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 648: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 654: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 678: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 679: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 687: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 688: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 689: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 690: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 691: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 692: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 693: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 694: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 695: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 696: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 722: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 723: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 723: Replace 15000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 725: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 727: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 727: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 728: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 728: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 729: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 729: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 742: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 744: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 746: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 746: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 751: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 753: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 753: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 755: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 805: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 808: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 854: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 856: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1078: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1079: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1079: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1080: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1081: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1097: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1098: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1121: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace with dynamically discovered value",
      "Line 148: Replace with dynamically discovered value",
      "Line 159: Replace with dynamically discovered value",
      "Line 159: Replace with dynamically discovered value",
      "Line 407: Replace with dynamically discovered value",
      "Line 563: Replace with dynamically discovered value",
      "Line 570: Replace with dynamically discovered value",
      "Line 578: Replace with dynamically discovered value",
      "Line 587: Replace with dynamically discovered value",
      "Line 887: Replace with dynamically discovered value",
      "Line 1085: Replace with dynamically discovered value",
      "Line 1088: Replace with dynamically discovered value",
      "Line 1088: Replace with dynamically discovered value",
      "Line 1098: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/validate_monte_carlo.py": [
      "Line 6: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 7: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 7: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 9: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 1500 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/fix_continuous_learning.py": [
      "Line 6: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Remove fallback, implement proper discovery mechanism",
      "Line 93: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/demo_monte_carlo.py": [
      "Line 6: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 9: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 251: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/segment_discovery_analysis.py": [
      "Line 6: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 17: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 19: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/production_readiness_validation_report.py": [
      "Line 6: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 1500 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 1200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 7: Replace with dynamically discovered value",
      "Line 174: Replace with self.performance_thresholds.get_threshold(metric_name)"
    ],
    "/home/hariravichandran/AELP/criteo_response_model.py": [
      "Line 6: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 074 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 396: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 396: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 400: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 496: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 499: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 511: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 513: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 536: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 558: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 574: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 578: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 579: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 584: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 584: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 586: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 586: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 629: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 629: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 637: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 638: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 642: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 643: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 644: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 647: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 648: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 652: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 713: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 726: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 731: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 732: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 733: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 744: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 748: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 750: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 764: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 764: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 811: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 829: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace with dynamically discovered value",
      "Line 41: Replace with dynamically discovered value",
      "Line 58: Replace with dynamically discovered value",
      "Line 58: Replace with dynamically discovered value",
      "Line 115: Replace with dynamically discovered value",
      "Line 115: Replace with dynamically discovered value",
      "Line 116: Replace with dynamically discovered value",
      "Line 116: Replace with dynamically discovered value",
      "Line 121: Replace with dynamically discovered value",
      "Line 121: Replace with dynamically discovered value",
      "Line 221: Replace with dynamically discovered value",
      "Line 227: Replace with dynamically discovered value",
      "Line 235: Replace with self.optimizer_config.get('learning_rate')",
      "Line 236: Replace with dynamically discovered value",
      "Line 237: Replace with dynamically discovered value",
      "Line 238: Replace with dynamically discovered value",
      "Line 660: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/analyze_reward_system.py": [
      "Line 6: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 17: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 12 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/emergency_controls.py": [
      "Line 7: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 390: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 410: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 431: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 435: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 448: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 448: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 450: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 450: Replace 156 with self.patterns.get('parameter_name', discovered_value)",
      "Line 455: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 455: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 457: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 457: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 462: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 472: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 561: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 628: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 630: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 710: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 711: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 718: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 719: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 849: Replace 1200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 849: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 849: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 852: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 852: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 856: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace with dynamically discovered value",
      "Line 79: Replace with dynamically discovered value",
      "Line 203: Replace with dynamically discovered value",
      "Line 203: Replace with dynamically discovered value",
      "Line 218: Replace with dynamically discovered value",
      "Line 218: Replace with dynamically discovered value",
      "Line 292: Replace with self.performance_thresholds.get_threshold(metric_name)"
    ],
    "/home/hariravichandran/AELP/aura_real_data_analysis.py": [
      "Line 7: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 7: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 9: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 251: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 109 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 339: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 339: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 345: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace with dynamically discovered value",
      "Line 33: Replace with dynamically discovered value",
      "Line 352: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/fix_conversions_properly.py": [
      "Line 7: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/revert_to_discovered_conversions.py": [
      "Line 7: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 18: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 19: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 20: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/setup.py": [
      "Line 7: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/setup_production_ads.py": [
      "Line 7: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 496: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 498: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 521: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 550: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 551: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 553: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 553: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 556: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 578: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 590: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 629: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 642: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 644: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 721: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 723: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 748: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 749: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 750: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 766: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 838: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 839: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 839: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 839: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 886: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 887: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 888: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 900: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 900: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 901: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 901: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 901: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 902: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 920: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 921: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 930: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 938: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace with dynamically discovered value",
      "Line 122: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/analyze_balance_marketing_failure.py": [
      "Line 7: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 11203 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 0014 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 0092 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 1461 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 0075 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 0031 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 0051 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/integrated_performance_budget_optimizer.py": [
      "Line 7: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 17: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 18: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 052 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 040 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 0248 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 014 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 0084 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 185 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 0027 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 125 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 00067 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 000022 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 289: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 289: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 289: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 421: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 426: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 474: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 474: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 489: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 493: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 496: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 497: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 498: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 501: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 502: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 514: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 515: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 516: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 517: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 519: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 520: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 521: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 522: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 559: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 561: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 562: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 563: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 564: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 566: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 599: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 607: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 611: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 637: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 639: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 640: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 644: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 685: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 689: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 693: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 706: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 709: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 715: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 716: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 716: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 716: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 716: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 716: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 717: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 724: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 732: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 732: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 732: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 732: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 732: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 734: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 735: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 735: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 735: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 735: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 762: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 763: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 777: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 793: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 793: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 794: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 796: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 796: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace with dynamically discovered value",
      "Line 326: Replace with dynamically discovered value",
      "Line 349: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 443: Replace with dynamically discovered value",
      "Line 553: Remove fallback, implement proper discovery mechanism",
      "Line 654: Replace with dynamically discovered value",
      "Line 700: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/conversion_lag_integration_example.py": [
      "Line 8: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 296: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 296: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 356: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 360: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 432: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/competitive_auction_summary.py": [
      "Line 8: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/july_ga4_mapping_final.py": [
      "Line 8: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 18: Replace 111 with self.patterns.get('parameter_name', discovered_value)",
      "Line 19: Replace 1101 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/enhanced_behavioral_creative_generator.py": [
      "Line 8: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 8: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 1234567890 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 350: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 404: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 405: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 405: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 406: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 406: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 406: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 407: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 407: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 408: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 408: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 409: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 409: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 410: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 410: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 410: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 411: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 412: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 423: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 425: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 425: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 425: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 426: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 426: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 430: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 431: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 441: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 441: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 442: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 443: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 443: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 444: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 444: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 444: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 445: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 445: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 446: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 446: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 447: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 447: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 448: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 448: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 448: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 449: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 450: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 461: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 462: Replace 1200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 542: Replace 1234567890 with self.patterns.get('parameter_name', discovered_value)",
      "Line 596: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 618: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 624: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 627: Replace 002 with self.patterns.get('parameter_name', discovered_value)",
      "Line 630: Replace 004 with self.patterns.get('parameter_name', discovered_value)",
      "Line 633: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 633: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 634: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 638: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 638: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 642: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 643: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 665: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 666: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 667: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 668: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 674: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 753: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 753: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 850: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 852: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace with dynamically discovered value",
      "Line 462: Replace with dynamically discovered value",
      "Line 707: Replace with self.segment_discovery.get_discovered_segments()"
    ],
    "/home/hariravichandran/AELP/july_ga4_tracking_analysis.py": [
      "Line 8: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 1882395 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 1166 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/final_evaluation_validation.py": [
      "Line 8: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 1500 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 1500 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 11250 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 1500 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 1500 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 11250 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/real_competitor_analysis.py": [
      "Line 8: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 9: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 1200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 420: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 434: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 436: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 438: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 587: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 646: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace with dynamically discovered value",
      "Line 49: Replace with dynamically discovered value",
      "Line 53: Replace with dynamically discovered value",
      "Line 53: Replace with dynamically discovered value",
      "Line 54: Replace with dynamically discovered value",
      "Line 54: Replace with dynamically discovered value",
      "Line 55: Replace with dynamically discovered value",
      "Line 55: Replace with dynamically discovered value",
      "Line 102: Replace with dynamically discovered value",
      "Line 373: Replace with dynamically discovered value",
      "Line 407: Replace with dynamically discovered value",
      "Line 517: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/analyze_trial_vs_paid.py": [
      "Line 8: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 9: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 9: Replace 1018 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 177 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 14 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/ethical_advertising_system.py": [
      "Line 9: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 407: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 443: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 448: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 468: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 468: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 469: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 469: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 542: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 623: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 624: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 630: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 635: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 635: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 655: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 685: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 704: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 705: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 706: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 706: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 707: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 707: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 720: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 767: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 827: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 828: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 924: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 937: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 983: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 984: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 992: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1075: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1078: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1086: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1300: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1300: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1303: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1303: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1326: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1327: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1327: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1328: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1328: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1329: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1329: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace with dynamically discovered value",
      "Line 113: Replace with dynamically discovered value",
      "Line 289: Replace with dynamically discovered value",
      "Line 722: Replace with dynamically discovered value",
      "Line 729: Replace with dynamically discovered value",
      "Line 776: Replace with dynamically discovered value",
      "Line 874: Replace with dynamically discovered value",
      "Line 981: Replace with dynamically discovered value",
      "Line 981: Replace with dynamically discovered value",
      "Line 1004: Replace with dynamically discovered value",
      "Line 1004: Replace with dynamically discovered value",
      "Line 1009: Replace with dynamically discovered value",
      "Line 1009: Replace with dynamically discovered value",
      "Line 1011: Replace with dynamically discovered value",
      "Line 1011: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/gaelp_explainable_production.py": [
      "Line 9: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 423: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 430: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 447: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 462: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 489: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 493: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 494: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 506: Replace 055 with self.patterns.get('parameter_name', discovered_value)",
      "Line 507: Replace 032 with self.patterns.get('parameter_name', discovered_value)",
      "Line 508: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 510: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 517: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 518: Replace 018 with self.patterns.get('parameter_name', discovered_value)",
      "Line 519: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 521: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 522: Replace 1500 with self.patterns.get('parameter_name', discovered_value)",
      "Line 523: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 528: Replace 038 with self.patterns.get('parameter_name', discovered_value)",
      "Line 529: Replace 041 with self.patterns.get('parameter_name', discovered_value)",
      "Line 530: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 532: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 533: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 534: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 539: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 558: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 565: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 572: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Remove fallback, implement proper discovery mechanism",
      "Line 207: Remove fallback, implement proper discovery mechanism",
      "Line 212: Replace with dynamically discovered value",
      "Line 248: Replace with dynamically discovered value",
      "Line 248: Replace with dynamically discovered value",
      "Line 267: Replace with dynamically discovered value",
      "Line 283: Replace with dynamically discovered value",
      "Line 446: Replace with dynamically discovered value",
      "Line 447: Replace with dynamically discovered value",
      "Line 453: Replace with dynamically discovered value",
      "Line 493: Replace with dynamically discovered value",
      "Line 494: Replace with dynamically discovered value",
      "Line 496: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/display_behavioral_health_creatives.py": [
      "Line 9: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 306: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 452: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 454: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 457: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 458: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 459: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 460: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 460: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 460: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/check_learning.py": [
      "Line 9: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/criteo_ga4_integration_analysis.py": [
      "Line 9: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 17: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 17: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 18: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 127 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 10 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/persistent_user_database.py": [
      "Line 9: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 9: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 565: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 567: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 570: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 674: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 691: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 778: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 779: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 784: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 785: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 787: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 788: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 790: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 791: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 793: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 794: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 806: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 807: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 809: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 812: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 816: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1084: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1084: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1186: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1187: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace with dynamically discovered value",
      "Line 236: Replace with dynamically discovered value",
      "Line 699: Replace with dynamically discovered value",
      "Line 1155: Replace with dynamically discovered value",
      "Line 1160: Replace with dynamically discovered value",
      "Line 1165: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/budget_safety_system.py": [
      "Line 9: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 374: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 407: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 409: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 451: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 478: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 501: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 700: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 701: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 702: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 706: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 707: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 715: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 717: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 718: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 743: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 746: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 766: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 827: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 827: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 827: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 829: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 829: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 829: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 833: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 835: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 962: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace with dynamically discovered value",
      "Line 66: Replace with dynamically discovered value",
      "Line 67: Replace with dynamically discovered value",
      "Line 67: Replace with dynamically discovered value",
      "Line 82: Replace with dynamically discovered value",
      "Line 82: Replace with dynamically discovered value",
      "Line 96: Replace with dynamically discovered value",
      "Line 96: Replace with dynamically discovered value",
      "Line 112: Replace with dynamically discovered value",
      "Line 112: Replace with dynamically discovered value",
      "Line 257: Replace with dynamically discovered value",
      "Line 257: Replace with dynamically discovered value",
      "Line 257: Replace with dynamically discovered value",
      "Line 257: Replace with dynamically discovered value",
      "Line 260: Replace with dynamically discovered value",
      "Line 260: Replace with dynamically discovered value",
      "Line 266: Replace with dynamically discovered value",
      "Line 266: Replace with dynamically discovered value",
      "Line 270: Replace with dynamically discovered value",
      "Line 270: Replace with dynamically discovered value",
      "Line 276: Replace with dynamically discovered value",
      "Line 276: Replace with dynamically discovered value",
      "Line 280: Replace with dynamically discovered value",
      "Line 280: Replace with dynamically discovered value",
      "Line 286: Replace with dynamically discovered value",
      "Line 286: Replace with dynamically discovered value",
      "Line 697: Replace with dynamically discovered value",
      "Line 697: Replace with dynamically discovered value",
      "Line 699: Replace with dynamically discovered value",
      "Line 699: Replace with dynamically discovered value",
      "Line 727: Replace with dynamically discovered value",
      "Line 727: Replace with dynamically discovered value",
      "Line 732: Replace with dynamically discovered value",
      "Line 732: Replace with dynamically discovered value",
      "Line 734: Replace with dynamically discovered value",
      "Line 734: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/verify_double_dqn_implementation.py": [
      "Line 9: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Remove fallback, implement proper discovery mechanism",
      "Line 101: Replace with dynamically discovered value",
      "Line 101: Replace with dynamically discovered value",
      "Line 101: Replace with dynamically discovered value",
      "Line 117: Remove fallback, implement proper discovery mechanism",
      "Line 201: Remove fallback, implement proper discovery mechanism",
      "Line 202: Remove fallback, implement proper discovery mechanism",
      "Line 203: Remove fallback, implement proper discovery mechanism",
      "Line 204: Remove fallback, implement proper discovery mechanism",
      "Line 205: Remove fallback, implement proper discovery mechanism",
      "Line 205: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/production_online_learner.py": [
      "Line 9: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 399: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 399: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 456: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 513: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 527: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 595: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 596: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 602: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 602: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 603: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 603: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 604: Replace 0001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 615: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 710: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 721: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 739: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 744: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 744: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 751: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 752: Replace 168 with self.patterns.get('parameter_name', discovered_value)",
      "Line 756: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 756: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 756: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 759: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 763: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 776: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 786: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 790: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 826: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 836: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 851: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 891: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 892: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 893: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 900: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 923: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 977: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 981: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 983: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 984: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 989: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 995: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1024: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1055: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1062: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1074: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1074: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1133: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1177: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1245: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1249: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1250: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1250: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1278: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1297: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1301: Replace 1800 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1301: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1356: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1378: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1378: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace with dynamically discovered value",
      "Line 84: Replace with dynamically discovered value",
      "Line 84: Replace with dynamically discovered value",
      "Line 94: Replace with dynamically discovered value",
      "Line 94: Replace with dynamically discovered value",
      "Line 285: Replace with dynamically discovered value",
      "Line 368: Replace with dynamically discovered value",
      "Line 375: Replace with dynamically discovered value",
      "Line 628: Replace with dynamically discovered value",
      "Line 637: Replace with dynamically discovered value",
      "Line 656: Replace with dynamically discovered value",
      "Line 663: Replace with dynamically discovered value",
      "Line 667: Replace with dynamically discovered value",
      "Line 781: Replace with dynamically discovered value",
      "Line 787: Replace with dynamically discovered value",
      "Line 791: Replace with dynamically discovered value",
      "Line 796: Replace with dynamically discovered value",
      "Line 798: Replace with dynamically discovered value",
      "Line 891: Replace with dynamically discovered value",
      "Line 897: Replace with dynamically discovered value",
      "Line 917: Replace with dynamically discovered value",
      "Line 923: Replace with dynamically discovered value",
      "Line 984: Replace with dynamically discovered value",
      "Line 1004: Replace with dynamically discovered value",
      "Line 1062: Replace with dynamically discovered value",
      "Line 1062: Replace with dynamically discovered value",
      "Line 1065: Replace with dynamically discovered value",
      "Line 1065: Replace with dynamically discovered value",
      "Line 1076: Replace with dynamically discovered value",
      "Line 1076: Replace with dynamically discovered value",
      "Line 1376: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/gaelp_safety_framework.py": [
      "Line 9: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 110 with self.patterns.get('parameter_name', discovered_value)",
      "Line 409: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 410: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 411: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 412: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 436: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 449: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 450: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 456: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 478: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 479: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 536: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 545: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 554: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 618: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 619: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 620: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 658: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 695: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 696: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 697: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 697: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 698: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 698: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 724: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 788: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 793: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 840: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 841: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 841: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 842: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 842: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 843: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 844: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 900: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 910: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 914: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 916: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 918: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 926: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 928: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 930: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 973: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 974: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 975: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 978: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 979: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 980: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 983: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 984: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 985: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1079: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1079: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1083: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1090: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1090: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1094: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1101: Replace 1800 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1101: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1105: Replace 1800 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1117: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1121: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1360: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1370: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1377: Replace 12345 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace with dynamically discovered value",
      "Line 94: Replace with dynamically discovered value",
      "Line 785: Replace with dynamically discovered value",
      "Line 970: Replace with dynamically discovered value",
      "Line 970: Replace with dynamically discovered value",
      "Line 1005: Replace with dynamically discovered value",
      "Line 1005: Replace with dynamically discovered value",
      "Line 1011: Replace with dynamically discovered value",
      "Line 1011: Replace with dynamically discovered value",
      "Line 1013: Replace with dynamically discovered value",
      "Line 1013: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/gaelp_safety_integration.py": [
      "Line 9: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 350: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 539: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 671: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 699: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 700: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 702: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 702: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 705: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 705: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 727: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 729: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace with dynamically discovered value",
      "Line 107: Replace with dynamically discovered value",
      "Line 129: Replace with dynamically discovered value",
      "Line 129: Replace with dynamically discovered value",
      "Line 132: Replace with dynamically discovered value",
      "Line 132: Replace with dynamically discovered value",
      "Line 136: Replace with dynamically discovered value",
      "Line 136: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/final_verification.py": [
      "Line 9: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 19: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Remove fallback, implement proper discovery mechanism",
      "Line 45: Replace with dynamically discovered value",
      "Line 61: Replace with dynamically discovered value",
      "Line 61: Replace with dynamically discovered value",
      "Line 62: Remove fallback, implement proper discovery mechanism",
      "Line 62: Remove fallback, implement proper discovery mechanism",
      "Line 67: Replace with dynamically discovered value",
      "Line 79: Remove fallback, implement proper discovery mechanism",
      "Line 93: Remove fallback, implement proper discovery mechanism",
      "Line 93: Remove fallback, implement proper discovery mechanism",
      "Line 97: Remove fallback, implement proper discovery mechanism",
      "Line 122: Remove fallback, implement proper discovery mechanism",
      "Line 130: Remove fallback, implement proper discovery mechanism",
      "Line 191: Remove fallback, implement proper discovery mechanism",
      "Line 191: Replace with dynamically discovered value",
      "Line 191: Replace with dynamically discovered value",
      "Line 191: Replace with dynamically discovered value",
      "Line 210: Remove fallback, implement proper discovery mechanism",
      "Line 211: Replace with dynamically discovered value",
      "Line 215: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/grounding_data_analysis.py": [
      "Line 9: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 18: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 20: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 177 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 15 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/get_google_ads_data.py": [
      "Line 9: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 18: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 1200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 1400 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace with dynamically discovered value",
      "Line 67: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/reward_validation_system.py": [
      "Line 9: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 382: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 395: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 438: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 490: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 495: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 497: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 499: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 506: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 508: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 515: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 517: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 538: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 538: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 572: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 590: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 591: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 593: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 596: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 597: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 598: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 602: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 609: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 664: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 664: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 667: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 696: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 775: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 778: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 826: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 913: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 923: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 588: Replace with dynamically discovered value",
      "Line 588: Replace with dynamically discovered value",
      "Line 617: Replace with dynamically discovered value",
      "Line 617: Replace with dynamically discovered value",
      "Line 622: Replace with dynamically discovered value",
      "Line 622: Replace with dynamically discovered value",
      "Line 624: Replace with dynamically discovered value",
      "Line 624: Replace with dynamically discovered value",
      "Line 829: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/gaelp_master_integration.py": [
      "Line 9: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 10: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 17: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 18: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 20: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 360: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 360: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 393: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 393: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 398: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 398: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 407: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 407: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 430: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 430: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 438: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 450: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 450: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 453: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 455: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 468: Replace 0001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 469: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 470: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 479: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 480: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 481: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 487: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 488: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 492: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 502: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 503: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 504: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 505: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 508: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 514: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 514: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 536: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 537: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 557: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 598: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 599: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 600: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 601: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 602: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 604: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 604: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 606: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 612: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 612: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 615: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 638: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 659: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 665: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 676: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 682: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 688: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 703: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 704: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 706: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 707: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 708: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 709: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 710: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 711: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 712: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 714: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 715: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 716: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 717: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 718: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 719: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 810: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 812: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 861: Replace 192 with self.patterns.get('parameter_name', discovered_value)",
      "Line 861: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 862: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 862: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 912: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 914: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 914: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 914: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 914: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 915: Replace 192 with self.patterns.get('parameter_name', discovered_value)",
      "Line 915: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 949: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 949: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 952: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 953: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 968: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 968: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 968: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 968: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 969: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 969: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 969: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 969: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 971: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 972: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 973: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 988: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1000: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1136: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1140: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1168: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1168: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1170: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1170: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1172: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1186: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1208: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1216: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1227: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1227: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1227: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1227: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1227: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1241: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1250: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1267: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1271: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1272: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1275: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1279: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1280: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1315: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1343: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1343: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1349: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1354: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1356: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1362: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1377: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1378: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1443: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1465: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1465: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1485: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1485: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1495: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1523: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1523: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1535: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1539: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1539: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1539: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1539: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1539: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1539: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1542: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1547: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1577: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1581: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1622: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1623: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1626: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1641: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1665: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1665: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1668: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1683: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1683: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1766: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1767: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1775: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1776: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1800: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1801: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1819: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1916: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1919: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1968: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1968: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1970: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1970: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1993: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1993: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1999: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2011: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2011: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2011: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2011: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2056: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2060: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2063: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2063: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2070: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2117: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2117: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2117: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2117: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2120: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2123: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2123: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2173: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2181: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2182: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2183: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2187: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2188: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2191: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2192: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2212: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2255: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2257: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2257: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2257: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2264: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2318: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2334: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2361: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2372: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2390: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2391: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2401: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2405: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2422: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2488: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2492: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2500: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2563: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2566: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2570: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2571: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2592: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2594: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2610: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2612: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2688: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2690: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace with dynamically discovered value",
      "Line 122: Replace with dynamically discovered value",
      "Line 158: Replace with dynamically discovered value",
      "Line 215: Replace with dynamically discovered value",
      "Line 215: Replace with dynamically discovered value",
      "Line 279: Replace with dynamically discovered value",
      "Line 409: Replace with dynamically discovered value",
      "Line 409: Replace with dynamically discovered value",
      "Line 456: Replace with dynamically discovered value",
      "Line 1072: Replace with dynamically discovered value",
      "Line 1262: Replace with dynamically discovered value",
      "Line 1301: Replace with dynamically discovered value",
      "Line 1403: Replace with dynamically discovered value",
      "Line 1708: Remove fallback, implement proper discovery mechanism",
      "Line 1718: Remove fallback, implement proper discovery mechanism",
      "Line 1896: Replace with dynamically discovered value",
      "Line 1925: Replace with dynamically discovered value",
      "Line 1945: Replace with dynamically discovered value",
      "Line 2045: Replace with dynamically discovered value",
      "Line 2277: Replace with dynamically discovered value",
      "Line 2452: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/run_agent_training.py": [
      "Line 10: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 18: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 19: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 10 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/trace_competition.py": [
      "Line 10: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 18: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 10 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/fetch_comprehensive_ga4_data.py": [
      "Line 10: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/competitor_agents.py": [
      "Line 10: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 144 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 129 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 144 with self.patterns.get('parameter_name', discovered_value)",
      "Line 369: Replace 144 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 373: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 390: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 391: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 392: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 402: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 438: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 454: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 457: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 465: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 510: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 515: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 540: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 541: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 541: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 543: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 544: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 544: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 561: Replace 129 with self.patterns.get('parameter_name', discovered_value)",
      "Line 564: Replace 129 with self.patterns.get('parameter_name', discovered_value)",
      "Line 569: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 570: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 571: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 571: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 571: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 571: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 573: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 574: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 579: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 580: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 585: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 598: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 598: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 605: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 621: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 622: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 630: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 632: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 632: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 632: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 632: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 638: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 639: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 640: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 653: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 655: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 663: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 664: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 677: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 682: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 686: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 707: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 723: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 726: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 727: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 727: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 730: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 731: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 757: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 759: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 787: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 790: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 791: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 793: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 797: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 803: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 804: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 805: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 806: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 807: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 808: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 808: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 809: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 809: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 810: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 810: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 811: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 812: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 813: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 813: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 814: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 814: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 830: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 830: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 838: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 840: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 849: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 850: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 851: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 857: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 857: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 887: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 897: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 897: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 898: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 899: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 899: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 900: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 900: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 923: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 938: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1115: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1115: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1116: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1152: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1178: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1184: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1184: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1185: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1185: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1189: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace with self.optimizer_config.get('learning_rate')",
      "Line 247: Replace with self.discovered_patterns['exploration']['epsilon']",
      "Line 385: Replace with self.optimizer_config.get('learning_rate')",
      "Line 392: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 870: Replace with dynamically discovered value",
      "Line 985: Replace with dynamically discovered value",
      "Line 1066: Replace with dynamically discovered value",
      "Line 1068: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/check_google_ads_access.py": [
      "Line 10: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/remove_hardcoded_segments.py": [
      "Line 10: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/diagnose_gaelp_issues.py": [
      "Line 10: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/trace_missing_features.py": [
      "Line 10: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/fix_training_system.py": [
      "Line 10: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 20: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 20: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 251: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace with self.discovered_patterns['exploration']['epsilon']",
      "Line 152: Replace with self.optimizer_config.get('learning_rate')",
      "Line 166: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/examples/online_learning_demo.py": [
      "Line 10: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 15000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 404: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 404: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 404: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 405: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 469: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 509: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 513: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 526: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 528: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 553: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 561: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 568: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 579: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Remove fallback, implement proper discovery mechanism",
      "Line 173: Replace with self.optimizer_config.get('learning_rate')",
      "Line 191: Replace with dynamically discovered value",
      "Line 194: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 195: Replace with dynamically discovered value",
      "Line 202: Replace with dynamically discovered value",
      "Line 286: Replace with dynamically discovered value",
      "Line 300: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/validate_complete_ab_framework.py": [
      "Line 11: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 396: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 411: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 412: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 451: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 461: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 462: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 475: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 482: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 514: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 541: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 542: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 568: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 594: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 594: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 595: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 595: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 603: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 603: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 621: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 631: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 632: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 640: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 640: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 646: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 653: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 677: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 679: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 712: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace with dynamically discovered value",
      "Line 62: Replace with dynamically discovered value",
      "Line 327: Replace with dynamically discovered value",
      "Line 328: Replace with dynamically discovered value",
      "Line 541: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/cross_device_demo.py": [
      "Line 11: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 192 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 145 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 192 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 101 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 192 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 118 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 118 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 33: Replace with dynamically discovered value",
      "Line 34: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 35: Replace with self.performance_thresholds.get_threshold(metric_name)"
    ],
    "/home/hariravichandran/AELP/simple_learning_test.py": [
      "Line 11: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 296: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 356: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 357: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 374: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 382: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 391: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 408: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 410: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 476: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 486: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 486: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 487: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 524: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 533: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 536: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace with self.optimizer_config.get('learning_rate')",
      "Line 82: Replace with self.optimizer_config.get('learning_rate')",
      "Line 535: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/reward_explanation.py": [
      "Line 11: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 20: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/run_fortified_filtered.py": [
      "Line 11: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 17: Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/convert_ga4_to_criteo.py": [
      "Line 11: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 002 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/simplified_mcp_connectors.py": [
      "Line 11: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 296: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 687: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace with dynamically discovered value",
      "Line 122: Replace with dynamically discovered value",
      "Line 194: Replace with dynamically discovered value",
      "Line 292: Replace with dynamically discovered value",
      "Line 384: Replace with dynamically discovered value",
      "Line 639: Replace with dynamically discovered value",
      "Line 642: Replace with dynamically discovered value",
      "Line 651: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/explore_ga4_data.py": [
      "Line 11: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/attribution_system.py": [
      "Line 11: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 589: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 605: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 609: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 618: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 718: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 869: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 976: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1012: Replace 192 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1012: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1012: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1033: Replace 192 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1033: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1033: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1044: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1050: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1057: Replace 192 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1057: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1057: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1067: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1081: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1083: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1109: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1121: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1122: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1123: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1126: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1134: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1136: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 853: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/analyze_august_data.py": [
      "Line 11: Replace 177 with self.patterns.get('parameter_name', discovered_value)",
      "Line 11: Replace 17698 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 1055 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 1468 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 1018 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 109302 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 114034 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 07 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/clean_learning_verifier.py": [
      "Line 11: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 411: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 531: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 533: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 571: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 582: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 585: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/validate_success_criteria.py": [
      "Line 11: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 435: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 460: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 527: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 527: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 533: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 533: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 548: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 550: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 587: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/mcp_connectors.py": [
      "Line 12: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace with dynamically discovered value",
      "Line 393: Replace with dynamically discovered value",
      "Line 509: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/run_training.py": [
      "Line 12: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/check_parental_controls_platforms.py": [
      "Line 12: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/verify_auction_fix.py": [
      "Line 12: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 9 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/demo_recsim_auction_bridge.py": [
      "Line 12: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 18: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace with self.segment_discovery.get_discovered_segments()"
    ],
    "/home/hariravichandran/AELP/ab_testing_production_example.py": [
      "Line 12: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 373: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 383: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 383: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 409: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 421: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 423: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 433: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 434: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 436: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 441: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 441: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 445: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 449: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 451: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 462: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 463: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 477: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 478: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 479: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 485: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 486: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 487: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 488: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 551: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 556: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 556: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 563: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 570: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 580: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 581: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 589: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 598: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 599: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 651: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 668: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 683: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 691: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace with self.segment_discovery.get_discovered_segments()",
      "Line 328: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/ga4_creative_content_analysis.py": [
      "Line 12: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 110 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 289: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 296: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 004 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/fetch_ga4_ctr_data.py": [
      "Line 12: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/trace_conversions.py": [
      "Line 12: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 012 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 022 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 9: Replace with self.segment_discovery.get_discovered_segments()"
    ],
    "/home/hariravichandran/AELP/auction-gym/src/Agent.py": [
      "Line 12: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/simple_verification.py": [
      "Line 13: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 15 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/verify_auction_mechanics.py": [
      "Line 13: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/analyze_balance_campaigns.py": [
      "Line 13: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 17: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/final_competitive_demo.py": [
      "Line 13: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/run_production_training.py": [
      "Line 13: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 17: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 350: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 360: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 368: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 391: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 393: Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/ga4_complete_pc_analysis.py": [
      "Line 13: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/ga4_hierarchy_investigation.py": [
      "Line 13: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/ga4_pc_campaign_performance.py": [
      "Line 13: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 294: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 382: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/diagnose_balance_failure.py": [
      "Line 13: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 17: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/ga4_vs_actual_analysis.py": [
      "Line 13: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 112 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 1134 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 112 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/ga4_balance_investigation.py": [
      "Line 13: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/ga4_real_conversion_extraction.py": [
      "Line 13: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 13: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 387: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 408: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 468: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 469: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 486: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 493: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 493: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 509: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 585: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 590: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 608: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 625: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 653: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 664: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 690: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 693: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 709: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 711: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 4: Replace with dynamically discovered value",
      "Line 692: Replace with dynamically discovered value",
      "Line 721: Replace with dynamically discovered value",
      "Line 722: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/fix_dashboard_metrics.py": [
      "Line 14: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/final_validation_test.py": [
      "Line 14: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace with dynamically discovered value",
      "Line 16: Replace with dynamically discovered value",
      "Line 31: Replace with dynamically discovered value",
      "Line 31: Replace with dynamically discovered value",
      "Line 68: Replace with dynamically discovered value",
      "Line 68: Replace with dynamically discovered value",
      "Line 99: Replace with dynamically discovered value",
      "Line 99: Replace with dynamically discovered value",
      "Line 132: Replace with dynamically discovered value",
      "Line 132: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/show_cac.py": [
      "Line 14: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 20: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/comprehensive_ga4_map.py": [
      "Line 14: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 19: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace with self.segment_discovery.get_discovered_segments()"
    ],
    "/home/hariravichandran/AELP/quick_demo.py": [
      "Line 14: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/verify_budget_integration.py": [
      "Line 15: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/visual_progress.py": [
      "Line 15: Replace 033 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 033 with self.patterns.get('parameter_name', discovered_value)",
      "Line 17: Replace 033 with self.patterns.get('parameter_name', discovered_value)",
      "Line 18: Replace 033 with self.patterns.get('parameter_name', discovered_value)",
      "Line 19: Replace 033 with self.patterns.get('parameter_name', discovered_value)",
      "Line 20: Replace 033 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 033 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 033 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 033 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 033 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 033 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 033 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 033 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 033 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 033 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 368: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 397: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 397: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 398: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 398: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 409: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 435: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 441: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 460: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 460: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 460: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 461: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 461: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 461: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 462: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 462: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 462: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 484: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 500: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 503: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 504: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 504: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 505: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 505: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 507: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 508: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 509: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 511: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 511: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 515: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/check_rl_learning.py": [
      "Line 15: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 19: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/verify_bigquery_data.py": [
      "Line 15: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 17: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/explore_ga4_campaigns.py": [
      "Line 15: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 17: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 20: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/ga4_oauth_headless.py": [
      "Line 15: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 20: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/fetch_ga4_direct.py": [
      "Line 15: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 17: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 20: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/launch_social_scanner.py": [
      "Line 15: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/compliant_marketing_agent.py": [
      "Line 15: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 055 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 042 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 028 with self.patterns.get('parameter_name', discovered_value)",
      "Line 294: Replace 032 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 362: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 388: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 407: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace with self.optimizer_config.get('learning_rate')",
      "Line 207: Replace with self.discovered_patterns['exploration']['epsilon']"
    ],
    "/home/hariravichandran/AELP/agent-manager/config/settings.py": [
      "Line 15: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 1440 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 10485760 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace with dynamically discovered value",
      "Line 43: Replace with dynamically discovered value",
      "Line 44: Replace with dynamically discovered value",
      "Line 44: Replace with dynamically discovered value",
      "Line 45: Replace with dynamically discovered value",
      "Line 45: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/safety_framework/config.py": [
      "Line 15: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 18: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 20: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace with dynamically discovered value",
      "Line 15: Replace with dynamically discovered value",
      "Line 16: Replace with dynamically discovered value",
      "Line 16: Replace with dynamically discovered value",
      "Line 17: Replace with dynamically discovered value",
      "Line 17: Replace with dynamically discovered value",
      "Line 31: Replace with dynamically discovered value",
      "Line 31: Replace with dynamically discovered value",
      "Line 32: Replace with dynamically discovered value",
      "Line 32: Replace with dynamically discovered value",
      "Line 55: Replace with dynamically discovered value",
      "Line 55: Replace with dynamically discovered value",
      "Line 66: Replace with dynamically discovered value",
      "Line 66: Replace with dynamically discovered value",
      "Line 86: Replace with dynamically discovered value",
      "Line 86: Replace with dynamically discovered value",
      "Line 87: Replace with dynamically discovered value",
      "Line 87: Replace with dynamically discovered value",
      "Line 97: Replace with dynamically discovered value",
      "Line 97: Replace with dynamically discovered value",
      "Line 98: Replace with dynamically discovered value",
      "Line 98: Replace with dynamically discovered value",
      "Line 99: Replace with dynamically discovered value",
      "Line 99: Replace with dynamically discovered value",
      "Line 100: Replace with dynamically discovered value",
      "Line 100: Replace with dynamically discovered value",
      "Line 101: Replace with dynamically discovered value",
      "Line 101: Replace with dynamically discovered value",
      "Line 102: Replace with dynamically discovered value",
      "Line 102: Replace with dynamically discovered value",
      "Line 103: Replace with dynamically discovered value",
      "Line 103: Replace with dynamically discovered value",
      "Line 129: Replace with dynamically discovered value",
      "Line 129: Replace with dynamically discovered value",
      "Line 130: Replace with dynamically discovered value",
      "Line 130: Replace with dynamically discovered value",
      "Line 131: Replace with dynamically discovered value",
      "Line 131: Replace with dynamically discovered value",
      "Line 180: Replace with dynamically discovered value",
      "Line 180: Replace with dynamically discovered value",
      "Line 181: Replace with dynamically discovered value",
      "Line 181: Replace with dynamically discovered value",
      "Line 182: Replace with dynamically discovered value",
      "Line 182: Replace with dynamically discovered value",
      "Line 183: Replace with dynamically discovered value",
      "Line 203: Replace with dynamically discovered value",
      "Line 203: Replace with dynamically discovered value",
      "Line 204: Replace with dynamically discovered value",
      "Line 204: Replace with dynamically discovered value",
      "Line 205: Replace with dynamically discovered value",
      "Line 205: Replace with dynamically discovered value",
      "Line 206: Replace with dynamically discovered value",
      "Line 226: Replace with dynamically discovered value",
      "Line 226: Replace with dynamically discovered value",
      "Line 227: Replace with dynamically discovered value",
      "Line 227: Replace with dynamically discovered value",
      "Line 228: Replace with dynamically discovered value",
      "Line 228: Replace with dynamically discovered value",
      "Line 229: Replace with dynamically discovered value",
      "Line 260: Replace with dynamically discovered value",
      "Line 260: Replace with dynamically discovered value",
      "Line 261: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 275: Replace with dynamically discovered value",
      "Line 275: Replace with dynamically discovered value",
      "Line 278: Replace with dynamically discovered value",
      "Line 278: Replace with dynamically discovered value",
      "Line 278: Replace with dynamically discovered value",
      "Line 278: Replace with dynamically discovered value",
      "Line 281: Replace with dynamically discovered value",
      "Line 281: Replace with dynamically discovered value",
      "Line 281: Replace with dynamically discovered value",
      "Line 281: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/capture_fortified_training.py": [
      "Line 16: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/check_actual_learning.py": [
      "Line 16: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 18: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/validate_creative_integration.py": [
      "Line 16: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/get_real_cpc_from_ga4.py": [
      "Line 16: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 18: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 251: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/demo_realtime_pipeline.py": [
      "Line 16: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 18: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 19: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/quick_start_production_ads.py": [
      "Line 16: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 301: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/quick_auction_test.py": [
      "Line 16: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 20: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 199 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/debug_criteo.py": [
      "Line 16: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/agent-manager/core/database.py": [
      "Line 16: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/fetch_ga4_simulation_data.py": [
      "Line 17: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 19: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/debug_auction.py": [
      "Line 17: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/debug_auction_single.py": [
      "Line 17: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 19: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 199 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/final_persistence_validation.py": [
      "Line 17: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 20: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/verify_ios_only_targeting.py": [
      "Line 17: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 19: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/verify_ios_only_targeting_fixed.py": [
      "Line 17: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 19: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/train_criteo_with_ga4.py": [
      "Line 17: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 19: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace with self.optimizer_config.get('learning_rate')",
      "Line 76: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/ga4_actual_traffic_analysis.py": [
      "Line 17: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 19: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 150000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/ga4_oauth_with_your_client.py": [
      "Line 17: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/verify_no_fallbacks.py": [
      "Line 17: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 19: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Remove fallback, implement proper discovery mechanism",
      "Line 31: Replace with dynamically discovered value",
      "Line 31: Replace with dynamically discovered value",
      "Line 31: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/budget_pacer_summary.py": [
      "Line 19: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 301: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/simple_budget_pacer_test.py": [
      "Line 19: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/diagnose_learning.py": [
      "Line 19: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace with dynamically discovered value",
      "Line 149: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/create_remaining_agents.py": [
      "Line 19: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 306: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 412: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 423: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace with dynamically discovered value",
      "Line 122: Remove fallback, implement proper discovery mechanism",
      "Line 134: Replace with dynamically discovered value",
      "Line 225: Replace with dynamically discovered value",
      "Line 329: Remove fallback, implement proper discovery mechanism",
      "Line 329: Replace with dynamically discovered value",
      "Line 329: Replace with dynamically discovered value",
      "Line 329: Replace with dynamically discovered value",
      "Line 331: Remove fallback, implement proper discovery mechanism",
      "Line 350: Remove fallback, implement proper discovery mechanism",
      "Line 362: Replace with dynamically discovered value",
      "Line 362: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/temporal_integration_example.py": [
      "Line 19: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 20: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 10 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/behavioral_health_creative_showcase.py": [
      "Line 19: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/trace_simulation_flow.py": [
      "Line 20: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/run_simple.py": [
      "Line 20: Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/agent-manager/api/auth.py": [
      "Line 20: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace with dynamically discovered value",
      "Line 133: Replace with dynamically discovered value",
      "Line 137: Replace with dynamically discovered value",
      "Line 148: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/config.py": [
      "Line 20: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 306: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 390: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 395: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 402: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace with dynamically discovered value",
      "Line 50: Replace with dynamically discovered value",
      "Line 98: Replace with dynamically discovered value",
      "Line 98: Replace with dynamically discovered value",
      "Line 99: Replace with dynamically discovered value",
      "Line 99: Replace with dynamically discovered value",
      "Line 100: Replace with dynamically discovered value",
      "Line 100: Replace with dynamically discovered value",
      "Line 101: Replace with dynamically discovered value",
      "Line 101: Replace with dynamically discovered value",
      "Line 102: Replace with dynamically discovered value",
      "Line 102: Replace with dynamically discovered value",
      "Line 103: Replace with dynamically discovered value",
      "Line 103: Replace with dynamically discovered value",
      "Line 104: Replace with dynamically discovered value",
      "Line 104: Replace with dynamically discovered value",
      "Line 144: Replace with dynamically discovered value",
      "Line 196: Replace with dynamically discovered value",
      "Line 206: Replace with dynamically discovered value",
      "Line 413: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/prioritized_replay_demo.py": [
      "Line 21: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 294: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 296: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/shadow_mode_state.py": [
      "Line 21: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 339: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 415: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 435: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace with dynamically discovered value",
      "Line 83: Replace with dynamically discovered value",
      "Line 103: Replace with dynamically discovered value",
      "Line 103: Replace with dynamically discovered value",
      "Line 106: Replace with dynamically discovered value",
      "Line 106: Replace with dynamically discovered value",
      "Line 107: Replace with dynamically discovered value",
      "Line 107: Replace with dynamically discovered value",
      "Line 108: Replace with dynamically discovered value",
      "Line 108: Replace with dynamically discovered value",
      "Line 346: Replace with dynamically discovered value",
      "Line 436: Replace with self.segment_discovery.get_discovered_segments()"
    ],
    "/home/hariravichandran/AELP/transformer_world_model_full.py": [
      "Line 21: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 0001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 368: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 431: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 431: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 443: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 444: Replace 101 with self.patterns.get('parameter_name', discovered_value)",
      "Line 445: Replace 102 with self.patterns.get('parameter_name', discovered_value)",
      "Line 445: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 446: Replace 103 with self.patterns.get('parameter_name', discovered_value)",
      "Line 447: Replace 104 with self.patterns.get('parameter_name', discovered_value)",
      "Line 448: Replace 105 with self.patterns.get('parameter_name', discovered_value)",
      "Line 449: Replace 106 with self.patterns.get('parameter_name', discovered_value)",
      "Line 450: Replace 107 with self.patterns.get('parameter_name', discovered_value)",
      "Line 464: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 467: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 479: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 483: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 483: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 484: Replace 101 with self.patterns.get('parameter_name', discovered_value)",
      "Line 485: Replace 102 with self.patterns.get('parameter_name', discovered_value)",
      "Line 514: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 518: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 519: Replace 105 with self.patterns.get('parameter_name', discovered_value)",
      "Line 540: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 540: Replace with self.optimizer_config.get('learning_rate')"
    ],
    "/home/hariravichandran/AELP/demo_competitive_auctions.py": [
      "Line 21: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/ga4_oauth_simple.py": [
      "Line 21: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/aura_demo_simple.py": [
      "Line 21: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 12 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/update_patterns_with_real_cvr.py": [
      "Line 21: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/aura_campaign_simulator_updated.py": [
      "Line 21: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 144 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 045 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 288: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 306: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 306: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 419: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 419: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 421: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 421: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 423: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 441: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 442: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 443: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 444: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 445: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 453: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 455: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 456: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 457: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 458: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 459: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 464: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 466: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 467: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 468: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 469: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 471: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 472: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 479: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 480: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 481: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 482: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 483: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 484: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 490: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 494: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 501: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 503: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 538: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 543: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 547: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Remove fallback, implement proper discovery mechanism",
      "Line 401: Replace with self.segment_discovery.get_discovered_segments()"
    ],
    "/home/hariravichandran/AELP/analyze_learning.py": [
      "Line 21: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace with self.segment_discovery.get_discovered_segments()"
    ],
    "/home/hariravichandran/AELP/fill_buffer_and_train.py": [
      "Line 21: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/offline_rl_demo.py": [
      "Line 21: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/transformer_world_model.py": [
      "Line 22: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 365: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 420: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 461: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace with dynamically discovered value",
      "Line 96: Replace with dynamically discovered value",
      "Line 350: Replace with dynamically discovered value",
      "Line 352: Replace with dynamically discovered value",
      "Line 354: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/ga4_oauth_x11.py": [
      "Line 22: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/trigger_event_system.py": [
      "Line 22: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 296: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 296: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 315: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 356: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 387: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 431: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 431: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 472: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 481: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 481: Replace 168 with self.patterns.get('parameter_name', discovered_value)",
      "Line 492: Replace 10000 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/run_gaelp_system.py": [
      "Line 22: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/ga4_oauth_browser.py": [
      "Line 22: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/fully_realistic_simulation.py": [
      "Line 22: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 0032 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 0024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 0478 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 0032 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 0024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 0164 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 0091 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 0014 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 11203 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 0092 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 0075 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 1461 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 0195 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 0294 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 123 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 0264 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 0008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 0411 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 0411 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 0244 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 002 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 0744 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 002 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 147 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 012 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 010 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 412: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 421: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 425: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 446: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 447: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 448: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 448: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 454: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 454: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 457: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 461: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 461: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 466: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 466: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 469: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 484: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 501: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 513: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 515: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 516: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 522: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 525: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 525: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 528: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 530: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 533: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 534: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 539: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 559: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 561: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace with dynamically discovered value",
      "Line 322: Replace with self.optimizer_config.get('learning_rate')",
      "Line 323: Replace with self.discovered_patterns['exploration']['epsilon']"
    ],
    "/home/hariravichandran/AELP/competitor_tracker.py": [
      "Line 22: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 15000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 15000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 12000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 12000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace with dynamically discovered value",
      "Line 33: Replace with dynamically discovered value",
      "Line 34: Replace with dynamically discovered value",
      "Line 34: Replace with dynamically discovered value",
      "Line 35: Replace with dynamically discovered value",
      "Line 35: Replace with dynamically discovered value",
      "Line 301: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/ga4_oauth_manual.py": [
      "Line 22: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/ga4_oauth_connect.py": [
      "Line 22: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/gaelp_gymnasium_demo.py": [
      "Line 23: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 306: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace with dynamically discovered value",
      "Line 26: Replace with dynamically discovered value",
      "Line 78: Replace with dynamically discovered value",
      "Line 78: Replace with dynamically discovered value",
      "Line 132: Replace with dynamically discovered value",
      "Line 132: Replace with dynamically discovered value",
      "Line 143: Replace with dynamically discovered value",
      "Line 143: Replace with dynamically discovered value",
      "Line 198: Replace with dynamically discovered value",
      "Line 198: Replace with dynamically discovered value",
      "Line 215: Replace with dynamically discovered value",
      "Line 215: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/simple_encoder_test.py": [
      "Line 23: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 1640995200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 1640908800 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 1640951200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 1640994000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/final_budget_optimization_demo.py": [
      "Line 23: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 160 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/ga4_oauth_playwright.py": [
      "Line 23: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/monitor_fortified_insights.py": [
      "Line 23: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 376: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 454: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/hybrid_llm_rl_integration.py": [
      "Line 23: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 355: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 360: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 374: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 411: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 449: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace with dynamically discovered value",
      "Line 270: Replace with dynamically discovered value",
      "Line 508: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/monitor_fortified_enhanced.py": [
      "Line 23: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 350: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 350: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 350: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 357: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 402: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 315: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/trace_store_experience.py": [
      "Line 23: Replace 1906 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 1906 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 1907 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 1973 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/realistic_simulation_model.py": [
      "Line 23: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 009 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 012 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 003 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 006 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 199 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 07 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 09 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 07 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 339: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 339: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 339: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 339: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 339: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 339: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 394: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/behavior_clustering.py": [
      "Line 24: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace with dynamically discovered value",
      "Line 85: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/demo_budget_safety.py": [
      "Line 24: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace with dynamically discovered value",
      "Line 32: Replace with dynamically discovered value",
      "Line 80: Replace with dynamically discovered value",
      "Line 81: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 82: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 83: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 90: Replace with dynamically discovered value",
      "Line 97: Replace with dynamically discovered value",
      "Line 98: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 99: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 100: Replace with self.performance_thresholds.get_threshold(metric_name)"
    ],
    "/home/hariravichandran/AELP/extract_ga4_august.py": [
      "Line 24: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/ga4_oauth_gcloud.py": [
      "Line 24: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/debug_competitor_bids.py": [
      "Line 24: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/tests/conftest.py": [
      "Line 24: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 0003 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 0003 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 1500 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 123456789 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 301: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 123 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 315: Replace 10000000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 376: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 390: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 391: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace with dynamically discovered value",
      "Line 112: Replace with dynamically discovered value",
      "Line 123: Replace with dynamically discovered value",
      "Line 124: Replace with dynamically discovered value",
      "Line 125: Replace with dynamically discovered value",
      "Line 126: Replace with dynamically discovered value",
      "Line 127: Replace with dynamically discovered value",
      "Line 192: Replace with dynamically discovered value",
      "Line 209: Replace with dynamically discovered value",
      "Line 225: Replace with dynamically discovered value",
      "Line 251: Replace with dynamically discovered value",
      "Line 264: Replace with dynamically discovered value",
      "Line 290: Replace with dynamically discovered value",
      "Line 423: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/base_agent.py": [
      "Line 24: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 315: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace with dynamically discovered value",
      "Line 26: Replace with dynamically discovered value",
      "Line 315: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/intelligent_marketing_agent.py": [
      "Line 25: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 045 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 062 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 028 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 032 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 018 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 012 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 038 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 055 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 041 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 003 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 003 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 288: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 344: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 356: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 373: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 399: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 0032 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 426: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 430: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 442: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 442: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 442: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace with self.optimizer_config.get('learning_rate')"
    ],
    "/home/hariravichandran/AELP/run_fortified_clean.py": [
      "Line 25: Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/realistic_rl_agent.py": [
      "Line 25: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 0001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 294: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 399: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 402: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 402: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 404: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 405: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 407: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 409: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 425: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/fetch_real_data.py": [
      "Line 25: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 021 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 018 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/demo_emergency_integration.py": [
      "Line 25: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 1250 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 125 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace with dynamically discovered value",
      "Line 45: Replace with dynamically discovered value",
      "Line 51: Replace with dynamically discovered value",
      "Line 57: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/persistent_user_database_batched.py": [
      "Line 25: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/verify_fortified_working.py": [
      "Line 25: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/fix_json_and_lock.py": [
      "Line 25: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 150000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 150000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 120000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/gaelp_google_ads_bridge.py": [
      "Line 25: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 301: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 451: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 453: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 472: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 474: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 480: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 499: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 501: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/demo_journey_encoder_integration.py": [
      "Line 25: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 045 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 289: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 345: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 362: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/ga4_oauth_setup.py": [
      "Line 25: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/monte_carlo_integration.py": [
      "Line 25: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 283: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 288: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 289: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 288: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/showcase_monte_carlo.py": [
      "Line 25: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 1200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/verify_attribution_requirements.py": [
      "Line 25: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 251: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/ga4_oauth_hari.py": [
      "Line 25: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/clean_journey_agent.py": [
      "Line 26: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 296: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 301: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 344: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace with dynamically discovered value",
      "Line 286: Replace with dynamically discovered value",
      "Line 290: Replace with dynamically discovered value",
      "Line 344: Replace with self.optimizer_config.get('learning_rate')"
    ],
    "/home/hariravichandran/AELP/email_nurture_system.py": [
      "Line 26: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 345: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 355: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 397: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 406: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 419: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 423: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 459: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 459: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 462: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 472: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 478: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 482: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 501: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 502: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 536: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 674: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 681: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 575: Remove fallback, implement proper discovery mechanism",
      "Line 576: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/run_full_demo.py": [
      "Line 26: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 15000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 345: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 356: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 373: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 382: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 383: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 388: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 398: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 399: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 400: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 404: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 408: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 410: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 419: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3: Replace with dynamically discovered value",
      "Line 6: Replace with dynamically discovered value",
      "Line 21: Replace with dynamically discovered value",
      "Line 167: Replace with dynamically discovered value",
      "Line 229: Replace with dynamically discovered value",
      "Line 231: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/verify_gradient_stabilization_integration.py": [
      "Line 26: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 382: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace with self.optimizer_config.get('learning_rate')",
      "Line 147: Replace with self.optimizer_config.get('learning_rate')",
      "Line 201: Replace with self.optimizer_config.get('learning_rate')",
      "Line 265: Replace with self.optimizer_config.get('learning_rate')"
    ],
    "/home/hariravichandran/AELP/ios_targeting_system.py": [
      "Line 26: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 289: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 357: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 432: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 501: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 503: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 565: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 571: Replace 045 with self.patterns.get('parameter_name', discovered_value)",
      "Line 571: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 586: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 587: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 588: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 588: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 599: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 599: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 621: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 622: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 623: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 709: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 712: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 726: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 743: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 767: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 770: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 774: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/realistic_master_integration.py": [
      "Line 26: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 0001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 296: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace with dynamically discovered value",
      "Line 39: Replace with self.optimizer_config.get('learning_rate')"
    ],
    "/home/hariravichandran/AELP/simple_monte_carlo_demo.py": [
      "Line 27: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/aura_campaign_simulator.py": [
      "Line 27: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 144 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 251: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 294: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 296: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 344: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 345: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 355: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 357: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 360: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 365: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 368: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 369: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 373: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 382: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 383: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 390: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 394: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace with self.segment_discovery.get_discovered_segments()"
    ],
    "/home/hariravichandran/AELP/emergency_monitor.py": [
      "Line 27: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/rl_training_demo.py": [
      "Line 27: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace with dynamically discovered value",
      "Line 57: Replace with dynamically discovered value",
      "Line 93: Replace with dynamically discovered value",
      "Line 93: Replace with dynamically discovered value",
      "Line 101: Replace with self.optimizer_config.get('learning_rate')",
      "Line 129: Replace with dynamically discovered value",
      "Line 129: Replace with dynamically discovered value",
      "Line 185: Replace with dynamically discovered value",
      "Line 185: Replace with dynamically discovered value",
      "Line 192: Replace with dynamically discovered value",
      "Line 192: Replace with dynamically discovered value",
      "Line 229: Replace with dynamically discovered value",
      "Line 229: Replace with dynamically discovered value",
      "Line 245: Replace with dynamically discovered value",
      "Line 245: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/gaelp_live_dashboard.py": [
      "Line 27: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 1001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 1001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 045 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 018 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 032 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 357: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 357: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 012 with self.patterns.get('parameter_name', discovered_value)",
      "Line 360: Replace 022 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 382: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 382: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 426: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 433: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 443: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 457: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 477: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 479: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 557: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 559: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 560: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 573: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace with self.segment_discovery.get_discovered_segments()",
      "Line 183: Replace with dynamically discovered value",
      "Line 187: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/demo_social_scanner.py": [
      "Line 27: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 1200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 123 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/ga4_parental_controls_analysis.py": [
      "Line 27: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 110 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 306: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 339: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 350: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 355: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 01 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/demo_wandb_integration.py": [
      "Line 27: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 12000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace with self.optimizer_config.get('learning_rate')",
      "Line 46: Replace with dynamically discovered value",
      "Line 51: Replace with self.discovered_patterns['exploration']['epsilon']"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/rl_agent_proper.py": [
      "Line 27: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 0001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 388: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 390: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 412: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 445: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 449: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 461: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 461: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 495: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 502: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 502: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 509: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 527: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 529: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 532: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 535: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 536: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 555: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 559: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 560: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 560: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 560: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 560: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 563: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 565: Replace 01 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/ga4_oauth_proper.py": [
      "Line 28: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 283: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 344: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 350: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 362: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/marketing_game_visualization.py": [
      "Line 28: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 294: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 355: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 356: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 357: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 374: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 376: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 391: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 393: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 394: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 395: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 396: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 398: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 419: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 421: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 432: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 434: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 441: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 448: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 450: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace with self.segment_discovery.get_discovered_segments()",
      "Line 25: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/run_recsim_demo.py": [
      "Line 28: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Remove fallback, implement proper discovery mechanism",
      "Line 166: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/debug_memory.py": [
      "Line 28: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 13 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/monitor_production_quality.py": [
      "Line 28: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 1440 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 454: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 456: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 470: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 470: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace with dynamically discovered value",
      "Line 155: Replace with dynamically discovered value",
      "Line 362: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/bigquery_batch_writer.py": [
      "Line 28: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 10 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/replay_buffer.py": [
      "Line 28: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 411: Replace 128 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/infrastructure_reality_check.py": [
      "Line 29: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 360: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 382: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 383: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3: Replace with dynamically discovered value",
      "Line 26: Replace with dynamically discovered value",
      "Line 49: Replace with dynamically discovered value",
      "Line 56: Replace with dynamically discovered value",
      "Line 63: Replace with dynamically discovered value",
      "Line 129: Replace with dynamically discovered value",
      "Line 262: Replace with dynamically discovered value",
      "Line 280: Replace with dynamically discovered value",
      "Line 309: Replace with dynamically discovered value",
      "Line 397: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/realistic_fixed_environment.py": [
      "Line 29: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 009 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 012 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 004 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 350: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 360: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 360: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 382: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 396: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 398: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 435: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 435: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 456: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 469: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 518: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 524: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 530: Replace 199 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace with dynamically discovered value",
      "Line 75: Replace with dynamically discovered value",
      "Line 77: Replace with dynamically discovered value",
      "Line 77: Replace with dynamically discovered value",
      "Line 82: Replace with dynamically discovered value",
      "Line 82: Replace with dynamically discovered value",
      "Line 382: Replace with self.performance_thresholds.get_threshold(metric_name)"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/rl_agent_robust.py": [
      "Line 29: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 288: Replace 0001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 289: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 484: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 487: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 491: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 494: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 495: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 500: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 519: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 519: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 559: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 619: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 636: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 638: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 641: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 644: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 645: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 646: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 647: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 665: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 669: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 670: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 670: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 670: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 670: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 677: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 677: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 700: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 707: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 707: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 737: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 741: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 764: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 766: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 833: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace with dynamically discovered value",
      "Line 30: Replace with dynamically discovered value",
      "Line 31: Replace with dynamically discovered value",
      "Line 32: Replace with dynamically discovered value",
      "Line 33: Replace with dynamically discovered value",
      "Line 33: Replace with self.discovered_patterns['exploration']['epsilon']",
      "Line 34: Replace with dynamically discovered value",
      "Line 222: Replace with dynamically discovered value",
      "Line 222: Replace with dynamically discovered value",
      "Line 341: Replace with self.performance_thresholds.get_threshold(metric_name)"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/journey_state_encoder.py": [
      "Line 29: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 487: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 506: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 513: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 513: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 549: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 555: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 557: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 558: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 561: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 563: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 564: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 591: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 593: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 597: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 597: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 605: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 606: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 606: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 606: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 606: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 613: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 614: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 614: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 614: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 614: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 621: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 622: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 622: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 622: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 634: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 668: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 669: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 700: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 702: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 706: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 708: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 709: Replace 1640995200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 715: Replace 1640908800 with self.patterns.get('parameter_name', discovered_value)",
      "Line 721: Replace 1640951200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 726: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 727: Replace 1640994000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 735: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 739: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 739: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 739: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 740: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 740: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 740: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 740: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 742: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 743: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 744: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 747: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 752: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 753: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 752: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/importance_sampling_integration.py": [
      "Line 29: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 355: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 412: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 415: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 418: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 420: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 420: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 423: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 445: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 445: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 446: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/temporal_effects.py": [
      "Line 30: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 368: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 368: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 368: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 369: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 10 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/shadow_mode_dashboard.py": [
      "Line 30: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 251: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 289: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 296: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 368: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 373: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 391: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 399: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 404: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 409: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 415: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 451: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 456: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 481: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 510: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 532: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 549: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 581: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/rl_agent_advanced.py": [
      "Line 30: Replace 0001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 421: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 426: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 470: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 471: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 531: Replace 0001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 551: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 570: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 809: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 815: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 816: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 824: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 846: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 880: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 881: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 882: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 883: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 884: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 886: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace with dynamically discovered value",
      "Line 60: Replace with dynamically discovered value",
      "Line 214: Replace with dynamically discovered value",
      "Line 334: Replace with dynamically discovered value",
      "Line 336: Replace with dynamically discovered value",
      "Line 531: Replace with self.optimizer_config.get('learning_rate')",
      "Line 620: Replace with dynamically discovered value",
      "Line 762: Replace with dynamically discovered value",
      "Line 815: Replace with dynamically discovered value",
      "Line 816: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/enhanced_simulator.py": [
      "Line 31: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 31: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 018 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 022 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 382: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 383: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 387: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 388: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 494: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 496: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 505: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 506: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 507: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 508: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 515: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 517: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 518: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 525: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 526: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 527: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 528: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 540: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 540: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 541: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 542: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 549: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 572: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 594: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 604: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 606: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 607: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 612: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 614: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 615: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 655: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Remove fallback, implement proper discovery mechanism",
      "Line 46: Remove fallback, implement proper discovery mechanism",
      "Line 52: Remove fallback, implement proper discovery mechanism",
      "Line 80: Remove fallback, implement proper discovery mechanism",
      "Line 81: Remove fallback, implement proper discovery mechanism",
      "Line 230: Replace with dynamically discovered value",
      "Line 409: Remove fallback, implement proper discovery mechanism",
      "Line 589: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/enhanced_simulator_creative_patch.py": [
      "Line 31: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 17 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/demo_regression_detection.py": [
      "Line 31: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 006 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 006 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/run_full_demo_llm.py": [
      "Line 31: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 15000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 392: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 410: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 412: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 415: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 432: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 441: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 443: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 466: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 468: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 472: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 476: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 477: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 478: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 479: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 479: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 483: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 493: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 494: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 495: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 499: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 503: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 505: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 508: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 509: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 514: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace with dynamically discovered value",
      "Line 91: Remove fallback, implement proper discovery mechanism",
      "Line 95: Remove fallback, implement proper discovery mechanism",
      "Line 127: Remove fallback, implement proper discovery mechanism",
      "Line 129: Remove fallback, implement proper discovery mechanism",
      "Line 143: Replace with dynamically discovered value",
      "Line 153: Replace with dynamically discovered value",
      "Line 183: Replace with dynamically discovered value",
      "Line 186: Replace with dynamically discovered value",
      "Line 190: Remove fallback, implement proper discovery mechanism",
      "Line 190: Replace with dynamically discovered value",
      "Line 221: Replace with dynamically discovered value",
      "Line 222: Remove fallback, implement proper discovery mechanism",
      "Line 223: Replace with dynamically discovered value",
      "Line 248: Replace with dynamically discovered value",
      "Line 250: Replace with dynamically discovered value",
      "Line 422: Remove fallback, implement proper discovery mechanism",
      "Line 548: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/check_training_quality.py": [
      "Line 31: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace with dynamically discovered value",
      "Line 118: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/multi_channel_orchestrator.py": [
      "Line 31: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 369: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 433: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 499: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 500: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 501: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 506: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 509: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 513: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 541: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 544: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 544: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 545: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace with dynamically discovered value",
      "Line 364: Replace with dynamically discovered value",
      "Line 420: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/example_model_versioning.py": [
      "Line 31: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 26: Replace with dynamically discovered value",
      "Line 31: Replace with dynamically discovered value",
      "Line 35: Replace with dynamically discovered value",
      "Line 53: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/criteo_data_summary.py": [
      "Line 31: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/run_fixed_training.py": [
      "Line 31: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace with self.discovered_patterns['exploration']['epsilon']",
      "Line 59: Replace with self.optimizer_config.get('learning_rate')",
      "Line 73: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/gaelp_production_monitor.py": [
      "Line 31: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 315: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 355: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 391: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 404: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 546: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 551: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 551: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 551: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 566: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 571: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 571: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 571: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 605: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 605: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 605: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 605: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 609: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 609: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 609: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 620: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 621: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 625: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 625: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 638: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 665: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/updated_training_example.py": [
      "Line 31: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 345: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 355: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 357: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 357: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 421: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 421: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 433: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 453: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 468: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 471: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 489: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 492: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 507: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 516: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace with dynamically discovered value",
      "Line 30: Replace with dynamically discovered value",
      "Line 31: Replace with self.optimizer_config.get('learning_rate')",
      "Line 41: Remove fallback, implement proper discovery mechanism",
      "Line 151: Replace with dynamically discovered value",
      "Line 202: Remove fallback, implement proper discovery mechanism",
      "Line 326: Replace with dynamically discovered value",
      "Line 327: Replace with dynamically discovered value",
      "Line 412: Replace with dynamically discovered value",
      "Line 483: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/deepmind_features.py": [
      "Line 32: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 294: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 301: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 356: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 365: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 452: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 487: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 561: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 573: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 635: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 648: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 659: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 661: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 673: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 677: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 678: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 679: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 686: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 689: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 692: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 697: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 699: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 724: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 726: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 754: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 756: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 761: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 770: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 773: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 775: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace with dynamically discovered value",
      "Line 551: Replace with dynamically discovered value",
      "Line 561: Replace with self.optimizer_config.get('learning_rate')",
      "Line 601: Replace with dynamically discovered value",
      "Line 761: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/start_production_training.py": [
      "Line 32: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/visualize_attribution.py": [
      "Line 32: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/google_ads_production_manager.py": [
      "Line 32: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 455: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 515: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 585: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 608: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 689: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 694: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 717: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 740: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 747: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 766: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 832: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 837: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 837: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 898: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 928: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 935: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 942: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 944: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 981: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 982: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 983: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 985: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 997: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 999: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5: Replace with dynamically discovered value",
      "Line 34: Replace with dynamically discovered value",
      "Line 34: Replace with dynamically discovered value",
      "Line 35: Replace with dynamically discovered value",
      "Line 35: Replace with dynamically discovered value",
      "Line 36: Replace with dynamically discovered value",
      "Line 36: Replace with dynamically discovered value",
      "Line 49: Replace with dynamically discovered value",
      "Line 49: Replace with dynamically discovered value",
      "Line 453: Replace with dynamically discovered value",
      "Line 667: Replace with dynamically discovered value",
      "Line 694: Replace with dynamically discovered value",
      "Line 717: Replace with dynamically discovered value",
      "Line 740: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/competitive_intelligence.py": [
      "Line 32: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace with dynamically discovered value",
      "Line 32: Replace with dynamically discovered value",
      "Line 33: Replace with dynamically discovered value",
      "Line 33: Replace with dynamically discovered value",
      "Line 38: Replace with dynamically discovered value",
      "Line 38: Replace with dynamically discovered value",
      "Line 39: Replace with dynamically discovered value",
      "Line 39: Replace with dynamically discovered value",
      "Line 55: Replace with dynamically discovered value",
      "Line 105: Replace with dynamically discovered value",
      "Line 241: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/monitor_training.py": [
      "Line 32: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 32: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 360: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 392: Replace 10 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/fixed_auction_system.py": [
      "Line 33: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 065 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 032 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 021 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 016 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 199 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/gaelp_explainability_summary.py": [
      "Line 33: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 045 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 028 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 055 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 315: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace with dynamically discovered value",
      "Line 175: Replace with dynamically discovered value",
      "Line 210: Replace with dynamically discovered value",
      "Line 248: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/verify_trajectory_returns.py": [
      "Line 33: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 10 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/launch_dashboard.py": [
      "Line 33: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/GAELP_2025_ULTIMATE.py": [
      "Line 33: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 301: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 339: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 410: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 415: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 446: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 446: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 460: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 467: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 468: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 469: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 509: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 515: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 517: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 521: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 523: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 563: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 563: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 565: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 573: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 592: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 627: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 634: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 692: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 740: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 740: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 789: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 804: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 815: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 817: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 819: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 860: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 864: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 865: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 876: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 896: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 905: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 910: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 912: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 917: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 919: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 945: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 947: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 947: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 949: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 958: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 976: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 994: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1000: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1002: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1053: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1055: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1057: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1068: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1082: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1100: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1124: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1124: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1126: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1140: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1140: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1142: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1155: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1155: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1157: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1181: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1233: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1238: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1240: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1248: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1274: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1283: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1283: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1294: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1297: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1297: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1316: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1318: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1320: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1320: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1322: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1322: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1324: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1326: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1346: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1370: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1396: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1413: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1415: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1432: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1444: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1446: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1446: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1448: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1461: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1463: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1463: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1465: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1477: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1478: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1491: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1510: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1527: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1528: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1603: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1611: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1611: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1611: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1611: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1611: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1620: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1624: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1664: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1683: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3: Replace with dynamically discovered value",
      "Line 230: Replace with dynamically discovered value",
      "Line 534: Replace with dynamically discovered value",
      "Line 541: Replace with dynamically discovered value",
      "Line 670: Replace with dynamically discovered value",
      "Line 757: Replace with dynamically discovered value",
      "Line 1009: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/aura_ios_campaign_system.py": [
      "Line 33: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 055 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 095 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 030 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 070 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 040 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 357: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 357: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 420: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 423: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 423: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 423: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 426: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 461: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 481: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 485: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 558: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 569: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 569: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 569: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 599: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 600: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 601: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 601: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 602: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 602: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 602: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 603: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 614: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 618: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 631: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 641: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 643: Replace 15000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 651: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 653: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 661: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 663: Replace 12000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 674: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 718: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 725: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 726: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 730: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/setup_google_ads_production.py": [
      "Line 33: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 1234567890 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace with dynamically discovered value",
      "Line 68: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/examples/delayed_reward_demo.py": [
      "Line 33: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 251: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 283: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 288: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 289: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Replace with dynamically discovered value",
      "Line 33: Replace with self.optimizer_config.get('learning_rate')",
      "Line 46: Replace with dynamically discovered value",
      "Line 56: Replace with dynamically discovered value",
      "Line 60: Replace with dynamically discovered value",
      "Line 263: Replace with dynamically discovered value",
      "Line 263: Replace with dynamically discovered value",
      "Line 289: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/ppo_agent.py": [
      "Line 33: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 634: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 640: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 651: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 651: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 653: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace with dynamically discovered value",
      "Line 220: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/budget_pacing_verification.py": [
      "Line 34: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 1200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 125 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 288: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 315: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/bid_explainability_system.py": [
      "Line 34: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 288: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 344: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 344: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 368: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 368: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 387: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 388: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 392: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 393: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 409: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 426: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 449: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 451: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 467: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 511: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 514: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 518: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 521: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 523: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 525: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 527: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 537: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 537: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 538: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 538: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 540: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 540: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 541: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 541: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 554: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 556: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 556: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 559: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 559: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 560: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 560: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 581: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 594: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 602: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 622: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 654: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 656: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 658: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 684: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 693: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 710: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 714: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 718: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 722: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 727: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 729: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 747: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 751: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 755: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 760: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 761: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 761: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 765: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 776: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 778: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 784: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 785: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 787: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 788: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 794: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 796: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 817: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 821: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 822: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 823: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 826: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 827: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 838: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 839: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 843: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 851: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 858: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 865: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 867: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 869: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 871: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 879: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 879: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 883: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 883: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 888: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 890: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 891: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 892: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 893: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 894: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 923: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 924: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 937: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 974: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 984: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 985: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 986: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 989: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 990: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 991: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 994: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 995: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1008: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1009: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1011: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1014: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1016: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace with dynamically discovered value",
      "Line 59: Replace with dynamically discovered value",
      "Line 485: Replace with dynamically discovered value",
      "Line 999: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/aura_demo.py": [
      "Line 34: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 406: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 431: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 434: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 454: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 456: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 458: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 483: Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/behavioral_health_dashboard.py": [
      "Line 34: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 393: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 478: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 523: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 523: Replace 130 with self.patterns.get('parameter_name', discovered_value)",
      "Line 530: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 530: Replace 185 with self.patterns.get('parameter_name', discovered_value)",
      "Line 530: Replace 129 with self.patterns.get('parameter_name', discovered_value)",
      "Line 537: Replace 158 with self.patterns.get('parameter_name', discovered_value)",
      "Line 537: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 650: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 706: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 708: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 710: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 710: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 714: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 715: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 717: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 34: Replace with dynamically discovered value",
      "Line 35: Replace with dynamically discovered value",
      "Line 176: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/competitive_intel.py": [
      "Line 34: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 382: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 388: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 391: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 392: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 412: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 418: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 438: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 452: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 475: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 491: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 493: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 521: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 521: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 521: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 521: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 521: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 526: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 532: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 532: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 534: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 534: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 545: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 576: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 576: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 585: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 606: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 616: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 617: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 618: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 629: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 630: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 631: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 652: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace with dynamically discovered value",
      "Line 43: Replace with dynamically discovered value",
      "Line 44: Replace with dynamically discovered value",
      "Line 44: Replace with dynamically discovered value",
      "Line 45: Replace with dynamically discovered value",
      "Line 45: Replace with dynamically discovered value",
      "Line 47: Replace with dynamically discovered value",
      "Line 47: Replace with dynamically discovered value",
      "Line 463: Replace with dynamically discovered value",
      "Line 541: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/run_fortified_quiet.py": [
      "Line 34: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 7 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/delayed_reward_integration_example.py": [
      "Line 34: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 306: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 24: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/gaelp_gym_env.py": [
      "Line 34: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace with dynamically discovered value",
      "Line 85: Replace with dynamically discovered value",
      "Line 87: Replace with dynamically discovered value",
      "Line 291: Replace with dynamically discovered value",
      "Line 323: Replace with dynamically discovered value",
      "Line 323: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/episode_manager.py": [
      "Line 34: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 33: Replace with dynamically discovered value",
      "Line 33: Replace with dynamically discovered value",
      "Line 59: Replace with dynamically discovered value",
      "Line 59: Replace with dynamically discovered value",
      "Line 72: Replace with dynamically discovered value",
      "Line 72: Replace with dynamically discovered value",
      "Line 73: Replace with dynamically discovered value",
      "Line 73: Replace with dynamically discovered value",
      "Line 74: Replace with dynamically discovered value",
      "Line 74: Replace with dynamically discovered value",
      "Line 75: Replace with dynamically discovered value",
      "Line 75: Replace with dynamically discovered value",
      "Line 77: Replace with dynamically discovered value",
      "Line 77: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/dqn_agent.py": [
      "Line 34: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 404: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace with self.discovered_patterns['exploration']['epsilon']",
      "Line 261: Replace with dynamically discovered value",
      "Line 320: Replace with dynamically discovered value",
      "Line 325: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/realistic_dashboard.py": [
      "Line 35: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 390: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 391: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 393: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/example_training_run.py": [
      "Line 35: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 22: Replace with dynamically discovered value",
      "Line 53: Replace with dynamically discovered value",
      "Line 118: Replace with dynamically discovered value",
      "Line 145: Replace with dynamically discovered value",
      "Line 161: Replace with dynamically discovered value",
      "Line 165: Replace with dynamically discovered value",
      "Line 182: Replace with dynamically discovered value",
      "Line 207: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/validate_criteo_ctr_model.py": [
      "Line 35: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/parallel_training_accelerator.py": [
      "Line 35: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 315: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace with dynamically discovered value",
      "Line 327: Replace with dynamically discovered value",
      "Line 328: Replace with dynamically discovered value",
      "Line 332: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/action_space.py": [
      "Line 35: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace with dynamically discovered value",
      "Line 284: Replace with dynamically discovered value",
      "Line 285: Replace with dynamically discovered value",
      "Line 285: Replace with dynamically discovered value",
      "Line 286: Replace with dynamically discovered value",
      "Line 286: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/realistic_aura_simulation.py": [
      "Line 36: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 144 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 129 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 198 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 144 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 193 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 129 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 1500 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 133 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 045 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 289: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 301: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 339: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 404: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 418: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 423: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 425: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 425: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 430: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 432: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 432: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 433: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 434: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 435: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 438: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 438: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 452: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 452: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 480: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 480: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 490: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 520: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 520: Replace 144 with self.patterns.get('parameter_name', discovered_value)",
      "Line 564: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 568: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 571: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 572: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 579: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 581: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 582: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 583: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 586: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 589: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 593: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 594: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 595: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 598: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 598: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 611: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 611: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 647: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 649: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 652: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 652: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 653: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 653: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 654: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 658: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 659: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 660: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 668: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 690: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 704: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace with dynamically discovered value",
      "Line 262: Replace with dynamically discovered value",
      "Line 267: Replace with dynamically discovered value",
      "Line 267: Replace with dynamically discovered value",
      "Line 268: Replace with dynamically discovered value",
      "Line 268: Replace with dynamically discovered value",
      "Line 276: Replace with dynamically discovered value",
      "Line 279: Replace with dynamically discovered value",
      "Line 282: Replace with dynamically discovered value",
      "Line 285: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/competitive_auction_integration_fixed.py": [
      "Line 36: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 288: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 399: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 400: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 420: Replace 15 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/llm_integration_setup.py": [
      "Line 36: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 383: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 396: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Remove fallback, implement proper discovery mechanism",
      "Line 100: Remove fallback, implement proper discovery mechanism",
      "Line 106: Remove fallback, implement proper discovery mechanism",
      "Line 114: Replace with dynamically discovered value",
      "Line 132: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/train_aura_agent.py": [
      "Line 36: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/creative_integration.py": [
      "Line 36: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 390: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 391: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 392: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 423: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 430: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 452: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/demo_user_journey_database.py": [
      "Line 37: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 315: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 387: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 392: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 393: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 398: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 399: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 405: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 409: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 411: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 442: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 454: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 455: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace with dynamically discovered value",
      "Line 134: Replace with dynamically discovered value",
      "Line 206: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/identity_resolver.py": [
      "Line 37: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 288: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 573: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 585: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 609: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 612: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 614: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 631: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 633: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 665: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 676: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 686: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 690: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 759: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 812: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 812: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 817: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 827: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 827: Replace 156 with self.patterns.get('parameter_name', discovered_value)",
      "Line 828: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 828: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 828: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 828: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 831: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 843: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 844: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 844: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 845: Replace 118 with self.patterns.get('parameter_name', discovered_value)",
      "Line 847: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace with dynamically discovered value",
      "Line 56: Replace with dynamically discovered value",
      "Line 57: Replace with dynamically discovered value",
      "Line 57: Replace with dynamically discovered value",
      "Line 58: Replace with dynamically discovered value",
      "Line 58: Replace with dynamically discovered value",
      "Line 59: Replace with dynamically discovered value",
      "Line 59: Replace with dynamically discovered value",
      "Line 60: Replace with dynamically discovered value",
      "Line 60: Replace with dynamically discovered value",
      "Line 63: Replace with dynamically discovered value",
      "Line 63: Replace with dynamically discovered value",
      "Line 64: Replace with dynamically discovered value",
      "Line 64: Replace with dynamically discovered value",
      "Line 65: Replace with dynamically discovered value",
      "Line 65: Replace with dynamically discovered value",
      "Line 69: Replace with dynamically discovered value",
      "Line 69: Replace with dynamically discovered value",
      "Line 82: Replace with dynamically discovered value",
      "Line 82: Replace with dynamically discovered value",
      "Line 91: Replace with dynamically discovered value",
      "Line 91: Replace with dynamically discovered value",
      "Line 92: Replace with dynamically discovered value",
      "Line 92: Replace with dynamically discovered value",
      "Line 93: Replace with dynamically discovered value",
      "Line 93: Replace with dynamically discovered value",
      "Line 94: Replace with dynamically discovered value",
      "Line 94: Replace with dynamically discovered value",
      "Line 113: Replace with dynamically discovered value",
      "Line 359: Replace with dynamically discovered value",
      "Line 735: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/monitor_fortified_training.py": [
      "Line 37: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/fix_patterns_structure.py": [
      "Line 37: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/tests/utils/validators.py": [
      "Line 37: Replace 00001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 38: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 288: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 466: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 479: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 492: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 492: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 494: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 539: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 544: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 544: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 545: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 545: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 545: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 575: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 578: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 582: Replace 10 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/reward_engineering.py": [
      "Line 37: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 391: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 392: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 430: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 436: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 473: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 474: Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/sac_agent.py": [
      "Line 37: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/verify_ab_testing_framework.py": [
      "Line 38: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 0005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 002 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 283: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 350: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 356: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 387: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 397: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 409: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 419: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 442: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 451: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/dynamic_segment_discovery.py": [
      "Line 38: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 296: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace with dynamically discovered value",
      "Line 89: Replace with dynamically discovered value",
      "Line 222: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/auction-gym/src/BidderAllocation.py": [
      "Line 38: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace with self.optimizer_config.get('learning_rate')"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/curriculum.py": [
      "Line 38: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 283: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 433: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 433: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 471: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 471: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 474: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 474: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 600: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 37: Replace with dynamically discovered value",
      "Line 37: Replace with dynamically discovered value",
      "Line 41: Replace with dynamically discovered value",
      "Line 41: Replace with dynamically discovered value",
      "Line 54: Replace with dynamically discovered value",
      "Line 54: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/state_processor.py": [
      "Line 38: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 355: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 356: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 362: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 419: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 421: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/examples/journey_timeout_example.py": [
      "Line 38: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 125 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/fortified_rl_agent.py": [
      "Line 39: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 433: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 436: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 438: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 443: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 451: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 457: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 458: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 461: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 514: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 514: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 539: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 543: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 543: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 550: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 554: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 562: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 566: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 583: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 584: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 584: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 602: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 603: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 614: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 614: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 617: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 617: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 618: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 620: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 624: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 630: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 633: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 636: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 637: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 712: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 787: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 787: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 787: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 787: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 787: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 790: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 790: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 790: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 790: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 790: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 795: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 798: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 829: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 853: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 856: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 856: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 859: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 859: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 862: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 867: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 870: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 874: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 880: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 889: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 889: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 908: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace with dynamically discovered value",
      "Line 40: Replace with dynamically discovered value",
      "Line 111: Replace with dynamically discovered value",
      "Line 111: Replace with dynamically discovered value",
      "Line 510: Replace with dynamically discovered value",
      "Line 915: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/monitor_online_learning.py": [
      "Line 39: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 251: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 296: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 345: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 002 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 368: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 368: Replace 003 with self.patterns.get('parameter_name', discovered_value)",
      "Line 368: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 396: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 402: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 404: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 404: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 431: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 451: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 452: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 477: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 505: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 528: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 532: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 532: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 539: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 540: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 541: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 545: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 547: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 549: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 556: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 556: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 569: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 575: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace with dynamically discovered value",
      "Line 372: Replace with dynamically discovered value",
      "Line 410: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/fortified_environment.py": [
      "Line 39: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 369: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 369: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 387: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 395: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 399: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 446: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 447: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 449: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 450: Replace 199 with self.patterns.get('parameter_name', discovered_value)",
      "Line 514: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 518: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 531: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 531: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 536: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 556: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 600: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 602: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 641: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 645: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 645: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 649: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 653: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 657: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 673: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 681: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 682: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 682: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 693: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/convergence_monitoring_integration_demo.py": [
      "Line 39: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 41: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 101 with self.patterns.get('parameter_name', discovered_value)",
      "Line 288: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 289: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace with dynamically discovered value",
      "Line 37: Replace with dynamically discovered value",
      "Line 61: Replace with dynamically discovered value",
      "Line 62: Replace with self.discovered_patterns['exploration']['epsilon']",
      "Line 65: Replace with dynamically discovered value",
      "Line 66: Replace with dynamically discovered value",
      "Line 67: Replace with dynamically discovered value",
      "Line 68: Replace with dynamically discovered value",
      "Line 210: Replace with dynamically discovered value",
      "Line 211: Replace with dynamically discovered value",
      "Line 221: Replace with dynamically discovered value",
      "Line 222: Replace with self.discovered_patterns['exploration']['epsilon']",
      "Line 225: Replace with dynamically discovered value",
      "Line 226: Replace with dynamically discovered value",
      "Line 227: Replace with dynamically discovered value",
      "Line 228: Replace with dynamically discovered value",
      "Line 333: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/realistic_traffic_simulator.py": [
      "Line 39: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 003 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 002 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 003 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 283: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 288: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 289: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 145 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 339: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 344: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 345: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 345: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 407: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 407: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 425: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 425: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 434: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 453: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 455: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 459: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 460: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 462: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 468: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 477: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 477: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 558: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 569: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 570: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 573: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 582: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 585: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 630: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 633: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 634: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 640: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace with dynamically discovered value",
      "Line 75: Replace with dynamically discovered value",
      "Line 76: Replace with dynamically discovered value",
      "Line 76: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/agent-manager/kubernetes/scheduler.py": [
      "Line 39: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 296: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 376: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 383: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 395: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 395: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace with dynamically discovered value",
      "Line 51: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/safety_framework/deploy_production.py": [
      "Line 39: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 419: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/cross_account_attribution_demo.py": [
      "Line 40: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 192 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 1234567890 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 1234567890 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 172 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 192 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 192 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 1800 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 360: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 418: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 419: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 420: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 430: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 432: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 452: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 506: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 509: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/verify_all_components.py": [
      "Line 41: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 192 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 192 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 383: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 395: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 395: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 395: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 402: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 402: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 423: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 433: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 435: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 469: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 471: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 472: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 473: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace with self.segment_discovery.get_discovered_segments()",
      "Line 423: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/gaelp_parameter_manager.py": [
      "Line 41: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 350: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 360: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 430: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 464: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 466: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 495: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 496: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 497: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 501: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 507: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 556: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 556: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 563: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 595: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Remove fallback, implement proper discovery mechanism",
      "Line 121: Remove fallback, implement proper discovery mechanism",
      "Line 122: Remove fallback, implement proper discovery mechanism",
      "Line 275: Replace with dynamically discovered value",
      "Line 276: Remove fallback, implement proper discovery mechanism",
      "Line 288: Replace with dynamically discovered value",
      "Line 289: Remove fallback, implement proper discovery mechanism",
      "Line 398: Remove fallback, implement proper discovery mechanism",
      "Line 445: Replace with dynamically discovered value",
      "Line 448: Remove fallback, implement proper discovery mechanism",
      "Line 525: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/auction-gym/src/Models.py": [
      "Line 41: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace with dynamically discovered value",
      "Line 104: Replace with dynamically discovered value",
      "Line 114: Replace with self.optimizer_config.get('learning_rate')"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/environment_wrappers.py": [
      "Line 41: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 168 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 168 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 032 with self.patterns.get('parameter_name', discovered_value)",
      "Line 301: Replace 028 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 018 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 045 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 028 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 306: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 038 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 042 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 040 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 022 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 020 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 028 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 012 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 018 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 345: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 345: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 356: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 362: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 368: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 374: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace with self.segment_discovery.get_discovered_segments()",
      "Line 238: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/agent_factory.py": [
      "Line 41: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 42: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace with dynamically discovered value",
      "Line 50: Replace with dynamically discovered value",
      "Line 54: Replace with dynamically discovered value",
      "Line 54: Replace with dynamically discovered value",
      "Line 57: Replace with dynamically discovered value",
      "Line 57: Replace with dynamically discovered value",
      "Line 58: Replace with dynamically discovered value",
      "Line 58: Replace with dynamically discovered value",
      "Line 59: Replace with dynamically discovered value",
      "Line 59: Replace with dynamically discovered value",
      "Line 62: Replace with dynamically discovered value",
      "Line 62: Replace with dynamically discovered value",
      "Line 63: Replace with dynamically discovered value",
      "Line 63: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/success_criteria_dashboard_integration.py": [
      "Line 42: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 306: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 436: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 479: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 575: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 595: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 612: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 614: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 636: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 639: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 643: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 644: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/google_ads_integration.py": [
      "Line 43: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 315: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 315: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace with dynamically discovered value",
      "Line 136: Replace with dynamically discovered value",
      "Line 147: Replace with dynamically discovered value",
      "Line 192: Replace with dynamically discovered value",
      "Line 206: Replace with dynamically discovered value",
      "Line 237: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/google_ads_gaelp_integration.py": [
      "Line 43: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 350: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 350: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 408: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 435: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 441: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 450: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 450: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 506: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 508: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 562: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 564: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace with self.optimizer_config.get('learning_rate')",
      "Line 99: Replace with dynamically discovered value",
      "Line 100: Replace with dynamically discovered value",
      "Line 104: Replace with dynamically discovered value",
      "Line 105: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 199: Replace with dynamically discovered value",
      "Line 480: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/verify_production_checkpoint_strict.py": [
      "Line 43: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 105 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 383: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 43: Replace with dynamically discovered value",
      "Line 65: Replace with dynamically discovered value",
      "Line 92: Remove fallback, implement proper discovery mechanism",
      "Line 103: Remove fallback, implement proper discovery mechanism",
      "Line 113: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 163: Replace with dynamically discovered value",
      "Line 203: Replace with dynamically discovered value",
      "Line 206: Replace with dynamically discovered value",
      "Line 215: Replace with dynamically discovered value",
      "Line 247: Replace with dynamically discovered value",
      "Line 277: Replace with dynamically discovered value",
      "Line 279: Replace with dynamically discovered value",
      "Line 300: Replace with dynamically discovered value",
      "Line 302: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/channel_effectiveness_model.py": [
      "Line 44: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 27: Replace with dynamically discovered value",
      "Line 27: Replace with dynamically discovered value",
      "Line 30: Replace with dynamically discovered value",
      "Line 30: Replace with dynamically discovered value",
      "Line 33: Replace with dynamically discovered value",
      "Line 33: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/updated_simulation_example.py": [
      "Line 44: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 283: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 30: Remove fallback, implement proper discovery mechanism",
      "Line 189: Remove fallback, implement proper discovery mechanism",
      "Line 241: Replace with dynamically discovered value",
      "Line 262: Remove fallback, implement proper discovery mechanism",
      "Line 279: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/auction-gym/src/Auction.py": [
      "Line 44: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace with dynamically discovered value",
      "Line 239: Replace with dynamically discovered value",
      "Line 250: Replace with dynamically discovered value",
      "Line 255: Replace with dynamically discovered value",
      "Line 264: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/delayed_conversion_system.py": [
      "Line 44: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 44: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 125 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 125 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 365: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 168 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 369: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 168 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 430: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 430: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 435: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 435: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 446: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 447: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 448: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 452: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 461: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 474: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 474: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 491: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 559: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 580: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 580: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 636: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 638: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 640: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1150: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace with dynamically discovered value",
      "Line 65: Replace with dynamically discovered value",
      "Line 178: Replace with dynamically discovered value",
      "Line 178: Replace with dynamically discovered value",
      "Line 179: Replace with dynamically discovered value",
      "Line 179: Replace with dynamically discovered value",
      "Line 189: Replace with dynamically discovered value",
      "Line 189: Replace with dynamically discovered value",
      "Line 190: Replace with dynamically discovered value",
      "Line 190: Replace with dynamically discovered value",
      "Line 200: Replace with dynamically discovered value",
      "Line 200: Replace with dynamically discovered value",
      "Line 201: Replace with dynamically discovered value",
      "Line 201: Replace with dynamically discovered value",
      "Line 211: Replace with dynamically discovered value",
      "Line 211: Replace with dynamically discovered value",
      "Line 212: Replace with dynamically discovered value",
      "Line 212: Replace with dynamically discovered value",
      "Line 275: Replace with dynamically discovered value",
      "Line 819: Replace with dynamically discovered value",
      "Line 830: Replace with dynamically discovered value",
      "Line 884: Replace with dynamically discovered value",
      "Line 904: Replace with dynamically discovered value",
      "Line 939: Replace with dynamically discovered value",
      "Line 979: Replace with dynamically discovered value",
      "Line 986: Replace with dynamically discovered value",
      "Line 991: Replace with dynamically discovered value",
      "Line 1020: Replace with dynamically discovered value",
      "Line 1079: Replace with dynamically discovered value",
      "Line 1084: Replace with dynamically discovered value",
      "Line 1098: Replace with dynamically discovered value",
      "Line 1102: Replace with dynamically discovered value",
      "Line 1106: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/verified_training_wrapper.py": [
      "Line 45: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 46: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 419: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 421: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 432: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 434: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 473: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 522: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 522: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 530: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 537: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 538: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 552: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 555: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 558: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 565: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 567: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace with dynamically discovered value",
      "Line 565: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/persona_factory.py": [
      "Line 45: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 289: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 301: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 365: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 365: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 369: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 387: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 387: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 388: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 418: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 446: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 455: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 455: Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/audit_dashboard_realism.py": [
      "Line 45: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/analyze_rl_learnings.py": [
      "Line 45: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 294: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 339: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 365: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 387: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 400: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 415: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace with dynamically discovered value",
      "Line 169: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/discovery_engine_broken.py": [
      "Line 46: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 251: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 283: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 419: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 448: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 468: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 474: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 499: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 512: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 556: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 612: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 701: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 749: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 751: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 763: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 764: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Replace with dynamically discovered value",
      "Line 23: Replace with dynamically discovered value",
      "Line 25: Replace with dynamically discovered value",
      "Line 25: Replace with dynamically discovered value",
      "Line 26: Replace with dynamically discovered value",
      "Line 26: Replace with dynamically discovered value",
      "Line 27: Replace with dynamically discovered value",
      "Line 27: Replace with dynamically discovered value",
      "Line 28: Replace with dynamically discovered value",
      "Line 28: Replace with dynamically discovered value",
      "Line 29: Replace with dynamically discovered value",
      "Line 29: Replace with dynamically discovered value",
      "Line 30: Replace with dynamically discovered value",
      "Line 30: Replace with dynamically discovered value",
      "Line 31: Replace with dynamically discovered value",
      "Line 31: Replace with dynamically discovered value",
      "Line 32: Replace with dynamically discovered value",
      "Line 32: Replace with dynamically discovered value",
      "Line 33: Replace with dynamically discovered value",
      "Line 33: Replace with dynamically discovered value",
      "Line 34: Replace with dynamically discovered value",
      "Line 34: Replace with dynamically discovered value",
      "Line 35: Replace with dynamically discovered value",
      "Line 35: Replace with dynamically discovered value",
      "Line 54: Replace with dynamically discovered value",
      "Line 59: Replace with dynamically discovered value",
      "Line 64: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/simple_behavioral_health_creative_generator.py": [
      "Line 46: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 368: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 368: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 445: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 446: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 457: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 463: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 485: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 496: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 541: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 542: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 591: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 609: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 609: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 609: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 609: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 609: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 609: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 609: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 609: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 610: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 610: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 610: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 610: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 610: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 610: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 610: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 610: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 610: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 621: Replace 1234567890 with self.patterns.get('parameter_name', discovered_value)",
      "Line 658: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 673: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 676: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 677: Replace 045 with self.patterns.get('parameter_name', discovered_value)",
      "Line 678: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 681: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 681: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 682: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 686: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 690: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 691: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 696: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 697: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 697: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 705: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 730: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 781: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 784: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 785: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 786: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 787: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 787: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 787: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 791: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 807: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 809: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 820: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3: Replace with dynamically discovered value",
      "Line 101: Replace with dynamically discovered value",
      "Line 414: Replace with dynamically discovered value",
      "Line 433: Replace with dynamically discovered value",
      "Line 446: Replace with dynamically discovered value",
      "Line 464: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/demo_online_learning_system.py": [
      "Line 47: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 251: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 251: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 306: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 306: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 339: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 1200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 356: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 383: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 406: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 406: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 406: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 406: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 406: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 406: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 407: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 410: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 412: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 412: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 431: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 436: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 452: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 459: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 47: Replace with dynamically discovered value",
      "Line 262: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/bidding_orchestrator.py": [
      "Line 49: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 283: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 289: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/aura_webhook_endpoint.py": [
      "Line 49: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 289: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 296: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 360: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 393: Replace 192 with self.patterns.get('parameter_name', discovered_value)",
      "Line 393: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 393: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 394: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 435: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 451: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 452: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 464: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 479: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 499: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 502: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 504: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 507: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 509: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 515: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 516: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 518: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 519: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 520: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 525: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/dynamic_segment_integration.py": [
      "Line 49: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Remove fallback, implement proper discovery mechanism",
      "Line 73: Remove fallback, implement proper discovery mechanism",
      "Line 74: Remove fallback, implement proper discovery mechanism",
      "Line 206: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/shadow_mode_manager.py": [
      "Line 49: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 50: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 433: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 572: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 572: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 574: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 575: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 576: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 578: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 579: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 587: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 587: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 636: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 636: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 659: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 716: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 717: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 719: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 720: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 728: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 729: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 731: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 732: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 739: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 740: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 741: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 742: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 743: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 750: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 751: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 769: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 771: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 787: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 789: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace with dynamically discovered value",
      "Line 750: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 752: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/fortified_training_loop.py": [
      "Line 50: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 339: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 405: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 406: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 408: Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/capture_training_output.py": [
      "Line 50: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/run_fixed_dashboard.py": [
      "Line 50: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/demo_budget_pacer.py": [
      "Line 50: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 1200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 1500 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 369: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 387: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 388: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 388: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 388: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 392: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 396: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 441: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 441: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 442: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 443: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 449: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 449: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 468: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 470: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/core.py": [
      "Line 50: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 51: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 301: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 383: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 392: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 433: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 45: Replace with dynamically discovered value",
      "Line 45: Replace with dynamically discovered value",
      "Line 46: Replace with dynamically discovered value",
      "Line 46: Replace with dynamically discovered value",
      "Line 47: Replace with dynamically discovered value",
      "Line 47: Replace with dynamically discovered value",
      "Line 89: Replace with dynamically discovered value",
      "Line 89: Replace with dynamically discovered value",
      "Line 131: Replace with dynamically discovered value",
      "Line 131: Replace with dynamically discovered value",
      "Line 168: Replace with dynamically discovered value",
      "Line 168: Replace with dynamically discovered value",
      "Line 593: Replace with dynamically discovered value",
      "Line 617: Replace with dynamically discovered value",
      "Line 627: Replace with dynamically discovered value",
      "Line 642: Replace with dynamically discovered value",
      "Line 655: Replace with dynamically discovered value",
      "Line 671: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/online_learner.py": [
      "Line 51: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 462: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 475: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 477: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 486: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 502: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 509: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 667: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 709: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 709: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 713: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 713: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 713: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 717: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 717: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 732: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 828: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 828: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 851: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 851: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 939: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 944: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 945: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 946: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 951: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 954: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 954: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 955: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 956: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 963: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 969: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Remove fallback, implement proper discovery mechanism",
      "Line 114: Replace with dynamically discovered value",
      "Line 114: Replace with dynamically discovered value",
      "Line 141: Replace with dynamically discovered value",
      "Line 141: Replace with dynamically discovered value",
      "Line 150: Replace with dynamically discovered value",
      "Line 150: Replace with dynamically discovered value",
      "Line 151: Replace with dynamically discovered value",
      "Line 151: Replace with dynamically discovered value",
      "Line 235: Replace with dynamically discovered value",
      "Line 526: Replace with dynamically discovered value",
      "Line 530: Replace with dynamically discovered value",
      "Line 540: Replace with dynamically discovered value",
      "Line 562: Replace with dynamically discovered value",
      "Line 603: Replace with dynamically discovered value",
      "Line 808: Remove fallback, implement proper discovery mechanism",
      "Line 945: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 946: Replace with dynamically discovered value",
      "Line 963: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/regression_detector.py": [
      "Line 52: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 542: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 543: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 551: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 552: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 553: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 556: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 556: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 558: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 558: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 836: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 836: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 836: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 836: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 863: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 882: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 882: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 886: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 896: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1014: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1014: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1018: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1018: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1026: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1026: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1026: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1034: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1034: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1054: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1054: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1067: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1088: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1091: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1095: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1138: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1140: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1145: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1152: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1152: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1154: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1191: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1195: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1207: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1207: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1212: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1301: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1332: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1334: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1352: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 15: Replace with dynamically discovered value",
      "Line 88: Replace with dynamically discovered value",
      "Line 88: Replace with dynamically discovered value",
      "Line 103: Replace with dynamically discovered value",
      "Line 103: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/safety_system.py": [
      "Line 52: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 168 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 456: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 680: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 681: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 682: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 682: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 694: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 706: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 707: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 721: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 721: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 725: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 725: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 598: Replace with dynamically discovered value",
      "Line 680: Replace with dynamically discovered value",
      "Line 681: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 682: Replace with self.performance_thresholds.get_threshold(metric_name)"
    ],
    "/home/hariravichandran/AELP/auction_gym_integration_fixed.py": [
      "Line 52: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 045 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 055 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 028 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 018 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 012 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 003 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 199 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 418: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 420: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 423: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 425: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 426: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 426: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 468: Replace 199 with self.patterns.get('parameter_name', discovered_value)",
      "Line 469: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 495: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 496: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 520: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 532: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 532: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 532: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 542: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 550: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 576: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 578: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 578: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/explanation_dashboard.py": [
      "Line 52: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 405: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 456: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 607: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 684: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 735: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 736: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 737: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 738: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 739: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 755: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 755: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 757: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 757: Replace 168 with self.patterns.get('parameter_name', discovered_value)",
      "Line 771: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 781: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 786: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 786: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 879: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 649: Replace with dynamically discovered value",
      "Line 702: Replace with dynamically discovered value",
      "Line 710: Replace with dynamically discovered value",
      "Line 726: Replace with dynamically discovered value",
      "Line 851: Replace with dynamically discovered value",
      "Line 863: Replace with dynamically discovered value",
      "Line 874: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/llm_persona_service.py": [
      "Line 52: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 432: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 519: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 519: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 536: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 557: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 564: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 571: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 576: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 584: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 613: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 619: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 650: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 654: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 655: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 667: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 669: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 671: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 673: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 682: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 722: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 822: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 824: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 830: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 832: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 838: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 840: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 869: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 873: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 878: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 878: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 878: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3: Replace with dynamically discovered value",
      "Line 48: Replace with dynamically discovered value",
      "Line 48: Replace with dynamically discovered value",
      "Line 49: Replace with dynamically discovered value",
      "Line 49: Replace with dynamically discovered value",
      "Line 50: Replace with dynamically discovered value",
      "Line 50: Replace with dynamically discovered value",
      "Line 61: Replace with dynamically discovered value",
      "Line 61: Replace with dynamically discovered value",
      "Line 62: Replace with dynamically discovered value",
      "Line 62: Replace with dynamically discovered value",
      "Line 63: Replace with dynamically discovered value",
      "Line 63: Replace with dynamically discovered value",
      "Line 77: Replace with dynamically discovered value",
      "Line 77: Replace with dynamically discovered value",
      "Line 440: Remove fallback, implement proper discovery mechanism",
      "Line 465: Remove fallback, implement proper discovery mechanism",
      "Line 680: Remove fallback, implement proper discovery mechanism",
      "Line 684: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/agent-manager/core/models.py": [
      "Line 52: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace with dynamically discovered value",
      "Line 184: Replace with dynamically discovered value",
      "Line 187: Replace with dynamically discovered value",
      "Line 218: Replace with dynamically discovered value",
      "Line 218: Replace with dynamically discovered value",
      "Line 244: Replace with dynamically discovered value",
      "Line 244: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/ga4_integration.py": [
      "Line 53: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 355: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 360: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 362: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/importance_sampler.py": [
      "Line 53: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 430: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 434: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 441: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 443: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 454: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/gaelp_regression_integration.py": [
      "Line 53: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 030 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 028 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 032 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 471: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 503: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 503: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 528: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 616: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 755: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 757: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 776: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 14: Replace with dynamically discovered value",
      "Line 128: Replace with dynamically discovered value",
      "Line 128: Replace with dynamically discovered value",
      "Line 129: Replace with dynamically discovered value",
      "Line 129: Replace with dynamically discovered value",
      "Line 130: Replace with dynamically discovered value",
      "Line 130: Replace with dynamically discovered value",
      "Line 131: Replace with dynamically discovered value",
      "Line 131: Replace with dynamically discovered value",
      "Line 133: Replace with dynamically discovered value",
      "Line 133: Replace with dynamically discovered value",
      "Line 135: Replace with dynamically discovered value",
      "Line 135: Replace with dynamically discovered value",
      "Line 136: Replace with dynamically discovered value",
      "Line 136: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/competitive_auction_integration.py": [
      "Line 54: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 55: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 251: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 344: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 391: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 406: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 430: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 494: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 497: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 511: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 612: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 612: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 640: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 647: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 647: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 649: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 677: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 684: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 694: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 695: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace with dynamically discovered value",
      "Line 455: Replace with dynamically discovered value",
      "Line 464: Replace with dynamically discovered value",
      "Line 480: Replace with dynamically discovered value",
      "Line 529: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/creative_content_library.py": [
      "Line 54: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 356: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 442: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 469: Replace 100 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/gaelp_integration.py": [
      "Line 55: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 426: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 470: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 482: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 485: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 486: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 489: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 493: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace with dynamically discovered value",
      "Line 95: Replace with dynamically discovered value",
      "Line 115: Replace with dynamically discovered value",
      "Line 115: Replace with dynamically discovered value",
      "Line 117: Replace with dynamically discovered value",
      "Line 117: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/competitor_intelligence_integration.py": [
      "Line 55: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 1200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 376: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 392: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 402: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 402: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 404: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 1200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 430: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 447: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 496: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 36: Replace with dynamically discovered value",
      "Line 36: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/fix_critical_hardcoding.py": [
      "Line 55: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace with dynamically discovered value",
      "Line 114: Replace with dynamically discovered value",
      "Line 169: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/journey_timeout.py": [
      "Line 55: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 56: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 344: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 345: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 702: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 728: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 808: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 935: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 940: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 947: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 947: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 967: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 968: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 969: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 997: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 998: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 999: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1260: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1296: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1297: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1298: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1312: Replace 123 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1313: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1318: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1329: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1335: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace with dynamically discovered value",
      "Line 49: Replace with dynamically discovered value",
      "Line 55: Replace with dynamically discovered value",
      "Line 55: Replace with dynamically discovered value",
      "Line 71: Replace with dynamically discovered value",
      "Line 71: Replace with dynamically discovered value",
      "Line 132: Replace with dynamically discovered value",
      "Line 132: Replace with dynamically discovered value",
      "Line 190: Replace with dynamically discovered value",
      "Line 190: Replace with dynamically discovered value",
      "Line 196: Replace with dynamically discovered value",
      "Line 196: Replace with dynamically discovered value",
      "Line 698: Replace with dynamically discovered value",
      "Line 698: Replace with dynamically discovered value",
      "Line 702: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 708: Replace with dynamically discovered value",
      "Line 708: Replace with dynamically discovered value",
      "Line 721: Replace with dynamically discovered value",
      "Line 721: Replace with dynamically discovered value",
      "Line 778: Replace with dynamically discovered value",
      "Line 855: Replace with dynamically discovered value",
      "Line 926: Replace with dynamically discovered value",
      "Line 1278: Replace with dynamically discovered value",
      "Line 1278: Replace with dynamically discovered value",
      "Line 1296: Replace with dynamically discovered value",
      "Line 1296: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/attribution_models.py": [
      "Line 56: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 502: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 516: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 520: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 522: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 525: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 525: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 525: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 533: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 618: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 654: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 751: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace with dynamically discovered value",
      "Line 192: Replace with dynamically discovered value",
      "Line 234: Replace with dynamically discovered value",
      "Line 239: Replace with dynamically discovered value",
      "Line 326: Replace with dynamically discovered value",
      "Line 340: Remove fallback, implement proper discovery mechanism",
      "Line 344: Remove fallback, implement proper discovery mechanism",
      "Line 373: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/enhanced_simulator_fixed.py": [
      "Line 56: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 344: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 404: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 022 with self.patterns.get('parameter_name', discovered_value)",
      "Line 435: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 435: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 435: Replace 022 with self.patterns.get('parameter_name', discovered_value)",
      "Line 438: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 438: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 438: Replace 022 with self.patterns.get('parameter_name', discovered_value)",
      "Line 442: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 443: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 444: Replace 022 with self.patterns.get('parameter_name', discovered_value)",
      "Line 489: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 496: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 498: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 506: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 509: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 512: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 515: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 538: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 565: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 629: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 643: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 643: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 643: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 644: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 644: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 644: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 647: Replace 0005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 647: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 647: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 648: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 648: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 648: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 651: Replace 0001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 651: Replace 002 with self.patterns.get('parameter_name', discovered_value)",
      "Line 651: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 652: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 652: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 655: Replace 0001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 655: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 655: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 656: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 656: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 656: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 661: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 666: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 680: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 680: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 687: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 687: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 687: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 688: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 693: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 693: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 706: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 706: Replace 119 with self.patterns.get('parameter_name', discovered_value)",
      "Line 759: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 759: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 768: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 771: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 771: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 772: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 772: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 774: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 775: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 775: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 799: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 759: Replace with dynamically discovered value",
      "Line 759: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/production_checkpoint_manager.py": [
      "Line 56: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 510: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 512: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 512: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 630: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 630: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 638: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 638: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 870: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 886: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 915: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 916: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 917: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 923: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 973: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 977: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1008: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1011: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1024: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1025: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1026: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1051: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1059: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1059: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1063: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1068: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1473: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1473: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1473: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1476: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1484: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1486: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1487: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1491: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1493: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1494: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Remove fallback, implement proper discovery mechanism",
      "Line 216: Replace with dynamically discovered value",
      "Line 227: Replace with dynamically discovered value",
      "Line 231: Remove fallback, implement proper discovery mechanism",
      "Line 789: Replace with dynamically discovered value",
      "Line 973: Replace with dynamically discovered value",
      "Line 977: Replace with dynamically discovered value",
      "Line 996: Remove fallback, implement proper discovery mechanism",
      "Line 1005: Replace with dynamically discovered value",
      "Line 1008: Replace with dynamically discovered value",
      "Line 1362: Replace with dynamically discovered value",
      "Line 1364: Replace with dynamically discovered value",
      "Line 1473: Replace with dynamically discovered value",
      "Line 1476: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/install_recsim.py": [
      "Line 56: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 61: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 14 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/realistic_competitor_inference.py": [
      "Line 56: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/campaign_visualizer.py": [
      "Line 57: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 059669 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 425: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 426: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 447: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/agent-manager/api/main.py": [
      "Line 57: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 283: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 306: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 432: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace with dynamically discovered value",
      "Line 194: Replace with dynamically discovered value",
      "Line 313: Replace with dynamically discovered value",
      "Line 335: Replace with dynamically discovered value",
      "Line 364: Replace with dynamically discovered value",
      "Line 407: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/safety_framework/operational_safety.py": [
      "Line 57: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 868: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace with dynamically discovered value",
      "Line 59: Replace with dynamically discovered value",
      "Line 60: Replace with dynamically discovered value",
      "Line 60: Replace with dynamically discovered value",
      "Line 212: Replace with dynamically discovered value",
      "Line 249: Replace with dynamically discovered value",
      "Line 768: Replace with dynamically discovered value",
      "Line 824: Replace with dynamically discovered value",
      "Line 853: Replace with dynamically discovered value",
      "Line 853: Replace with dynamically discovered value",
      "Line 858: Replace with dynamically discovered value",
      "Line 858: Replace with dynamically discovered value",
      "Line 962: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/standalone_online_learning_demo.py": [
      "Line 58: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 306: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 373: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 373: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 455: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 456: Replace 028 with self.patterns.get('parameter_name', discovered_value)",
      "Line 457: Replace 022 with self.patterns.get('parameter_name', discovered_value)",
      "Line 458: Replace 040 with self.patterns.get('parameter_name', discovered_value)",
      "Line 462: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 462: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 464: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 466: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 466: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 480: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 498: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 499: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 500: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 506: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 561: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 589: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 650: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 653: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 654: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 656: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 657: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 676: Replace 030 with self.patterns.get('parameter_name', discovered_value)",
      "Line 676: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 677: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 678: Replace 040 with self.patterns.get('parameter_name', discovered_value)",
      "Line 678: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 681: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 689: Replace 012 with self.patterns.get('parameter_name', discovered_value)",
      "Line 691: Replace 006 with self.patterns.get('parameter_name', discovered_value)",
      "Line 693: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 693: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 696: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 696: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 716: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 719: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 726: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 746: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 766: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 767: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 789: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 791: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 813: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 835: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace with dynamically discovered value",
      "Line 104: Replace with dynamically discovered value",
      "Line 106: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 139: Replace with dynamically discovered value",
      "Line 236: Replace with dynamically discovered value",
      "Line 291: Replace with dynamically discovered value",
      "Line 300: Replace with dynamically discovered value",
      "Line 372: Replace with dynamically discovered value",
      "Line 397: Replace with dynamically discovered value",
      "Line 448: Replace with dynamically discovered value",
      "Line 498: Replace with dynamically discovered value",
      "Line 499: Replace with dynamically discovered value",
      "Line 500: Replace with dynamically discovered value",
      "Line 507: Replace with dynamically discovered value",
      "Line 517: Replace with dynamically discovered value",
      "Line 843: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/comprehensive_behavioral_health_creative_generator.py": [
      "Line 58: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 301: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 315: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 315: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 418: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 418: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 444: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 444: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 445: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 445: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 471: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 485: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 486: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 512: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 517: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 518: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 529: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 535: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 576: Replace 1234567890 with self.patterns.get('parameter_name', discovered_value)",
      "Line 587: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 619: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 643: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 666: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 666: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 666: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 668: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 679: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 702: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 719: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 719: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 737: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 737: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 737: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 781: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 796: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 811: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 879: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 881: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 889: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 896: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 901: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 902: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 904: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 911: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 913: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 914: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 917: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 920: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 927: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 927: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 933: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 933: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 933: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 934: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 934: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 934: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 935: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 935: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 935: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 936: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 936: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 936: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 937: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 943: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 943: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 959: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 962: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 966: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 984: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1018: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1035: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1091: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1092: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1110: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1112: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1114: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1123: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 486: Replace with dynamically discovered value",
      "Line 505: Replace with dynamically discovered value",
      "Line 518: Replace with dynamically discovered value",
      "Line 536: Replace with dynamically discovered value",
      "Line 1141: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/auction_gym_integration.py": [
      "Line 58: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 199 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 065 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 030 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 020 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 199 with self.patterns.get('parameter_name', discovered_value)",
      "Line 49: Replace with dynamically discovered value",
      "Line 248: Replace with dynamically discovered value",
      "Line 270: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/run_console_monitor.py": [
      "Line 58: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 60: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 360: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 362: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 374: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 374: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/safety_framework/production_integration.py": [
      "Line 58: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 415: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 419: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 563: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 564: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 568: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 743: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 743: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 747: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 765: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 769: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 778: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 778: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 782: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 892: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 893: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 898: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace with dynamically discovered value",
      "Line 67: Replace with dynamically discovered value",
      "Line 105: Replace with dynamically discovered value",
      "Line 105: Replace with dynamically discovered value",
      "Line 106: Replace with dynamically discovered value",
      "Line 106: Replace with dynamically discovered value",
      "Line 116: Replace with dynamically discovered value",
      "Line 116: Replace with dynamically discovered value",
      "Line 131: Replace with dynamically discovered value",
      "Line 131: Replace with dynamically discovered value",
      "Line 132: Replace with dynamically discovered value",
      "Line 132: Replace with dynamically discovered value",
      "Line 135: Replace with dynamically discovered value",
      "Line 135: Replace with dynamically discovered value",
      "Line 140: Replace with dynamically discovered value",
      "Line 140: Replace with dynamically discovered value",
      "Line 150: Replace with dynamically discovered value",
      "Line 150: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/gaelp_persistent_integration.py": [
      "Line 59: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 315: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 328: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 409: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 415: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 436: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 484: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 489: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 489: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/launch_shadow_mode.py": [
      "Line 60: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 368: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 400: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 408: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 408: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 410: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 410: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 438: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 472: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 474: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 488: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 488: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 505: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 529: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 547: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 553: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 560: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 564: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 88: Replace with dynamically discovered value",
      "Line 133: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 135: Replace with dynamically discovered value",
      "Line 191: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 193: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/discovered_parameter_config.py": [
      "Line 61: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 62: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 012 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 150000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 340: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 362: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/cleanup_remaining_fallbacks.py": [
      "Line 61: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3: Remove fallback, implement proper discovery mechanism",
      "Line 4: Remove fallback, implement proper discovery mechanism",
      "Line 15: Remove fallback, implement proper discovery mechanism",
      "Line 19: Remove fallback, implement proper discovery mechanism",
      "Line 22: Remove fallback, implement proper discovery mechanism",
      "Line 23: Remove fallback, implement proper discovery mechanism",
      "Line 24: Remove fallback, implement proper discovery mechanism",
      "Line 25: Remove fallback, implement proper discovery mechanism",
      "Line 26: Replace with dynamically discovered value",
      "Line 27: Replace with dynamically discovered value",
      "Line 28: Replace with dynamically discovered value",
      "Line 31: Remove fallback, implement proper discovery mechanism",
      "Line 32: Remove fallback, implement proper discovery mechanism",
      "Line 33: Remove fallback, implement proper discovery mechanism",
      "Line 34: Remove fallback, implement proper discovery mechanism",
      "Line 35: Remove fallback, implement proper discovery mechanism",
      "Line 38: Remove fallback, implement proper discovery mechanism",
      "Line 41: Remove fallback, implement proper discovery mechanism",
      "Line 44: Remove fallback, implement proper discovery mechanism",
      "Line 45: Remove fallback, implement proper discovery mechanism",
      "Line 48: Remove fallback, implement proper discovery mechanism",
      "Line 49: Remove fallback, implement proper discovery mechanism",
      "Line 72: Remove fallback, implement proper discovery mechanism",
      "Line 77: Remove fallback, implement proper discovery mechanism",
      "Line 80: Remove fallback, implement proper discovery mechanism",
      "Line 84: Remove fallback, implement proper discovery mechanism",
      "Line 90: Remove fallback, implement proper discovery mechanism",
      "Line 93: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/production_ab_testing_integration.py": [
      "Line 62: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 362: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 438: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 481: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 482: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 636: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 773: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 774: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 775: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 788: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 789: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 793: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 794: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 773: Replace with dynamically discovered value",
      "Line 774: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/launch_production_online_learning.py": [
      "Line 62: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 387: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 388: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 394: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 415: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 423: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 443: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace with dynamically discovered value",
      "Line 249: Replace with dynamically discovered value",
      "Line 252: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/production_ad_account_manager.py": [
      "Line 63: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 63: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 65: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 362: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 391: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 392: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 393: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 418: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 478: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 506: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 508: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 508: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 524: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 526: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 531: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 532: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 533: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 533: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 582: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 585: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 586: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 587: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 587: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 619: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 629: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 642: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 677: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 678: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 679: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 697: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 698: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 699: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 700: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 701: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 719: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 721: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 721: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 722: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 756: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 757: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 757: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 774: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 779: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 780: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 789: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 789: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 794: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 794: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 799: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 800: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 848: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 867: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 900: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 900: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 901: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 901: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 902: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 925: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 967: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1004: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1022: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1025: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1036: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1038: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1042: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1044: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1059: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1061: Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/explainability_demo.py": [
      "Line 64: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 038 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 028 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 042 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 022 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 404: Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/shadow_mode_demo.py": [
      "Line 64: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 64: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 301: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 343: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 365: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 373: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 373: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 387: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 399: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 435: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace with dynamically discovered value",
      "Line 418: Replace with dynamically discovered value",
      "Line 420: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/fortified_rl_agent_production.py": [
      "Line 65: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 355: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 431: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 483: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 484: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 485: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 486: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 487: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 497: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 498: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 499: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 500: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 502: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 529: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 552: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 553: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 557: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 570: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 599: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 624: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 628: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 628: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 642: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 643: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 622: Replace with dynamically discovered value",
      "Line 695: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/safety_framework/budget_controls.py": [
      "Line 65: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 388: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 480: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 487: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace with dynamically discovered value",
      "Line 90: Replace with dynamically discovered value",
      "Line 116: Replace with dynamically discovered value",
      "Line 116: Replace with dynamically discovered value",
      "Line 117: Replace with dynamically discovered value",
      "Line 117: Replace with dynamically discovered value",
      "Line 379: Replace with dynamically discovered value",
      "Line 393: Replace with dynamically discovered value",
      "Line 398: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/gaelp_success_criteria_monitor.py": [
      "Line 66: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 288: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 289: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 301: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 15000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 321: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 344: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 365: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 374: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 376: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 387: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 399: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 400: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 402: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 406: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 409: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 410: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 420: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 423: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 430: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 431: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 441: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 444: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 445: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 448: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 449: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 449: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 452: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 452: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 453: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 456: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 456: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 457: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 465: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 465: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 466: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 467: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 470: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 471: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 472: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 476: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 476: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 479: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 479: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 480: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 480: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 483: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 483: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 585: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 606: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 658: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 658: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 658: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 658: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 659: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 659: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 659: Replace 1800 with self.patterns.get('parameter_name', discovered_value)",
      "Line 660: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 660: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 661: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 662: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 662: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 662: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 664: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 664: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 664: Replace 1200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 666: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 667: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 667: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 667: Replace 1500 with self.patterns.get('parameter_name', discovered_value)",
      "Line 669: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 669: Replace 15000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 669: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 670: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 670: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 673: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 673: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 674: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 674: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 674: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 675: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 675: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 675: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 677: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 677: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 677: Replace 10800 with self.patterns.get('parameter_name', discovered_value)",
      "Line 678: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 678: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 678: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 679: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 679: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 679: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 681: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 681: Replace 14400 with self.patterns.get('parameter_name', discovered_value)",
      "Line 682: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 682: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 682: Replace 1800 with self.patterns.get('parameter_name', discovered_value)",
      "Line 683: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 683: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 683: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 710: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 738: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 778: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 823: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 863: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 863: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 866: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 888: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 891: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 939: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 939: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1020: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1023: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1040: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1084: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1087: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 181: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 191: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 201: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 211: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 223: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 234: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 244: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 256: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 269: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 280: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 289: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 301: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 311: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 321: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 333: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 343: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 354: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 365: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 376: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 387: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 914: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/journey_state.py": [
      "Line 66: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 315: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 319: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 388: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 390: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 408: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 409: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 410: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 411: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 418: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 421: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 428: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 432: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 480: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 497: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 498: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 500: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 505: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 506: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 507: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 518: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 519: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace with dynamically discovered value",
      "Line 256: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 266: Replace with dynamically discovered value",
      "Line 266: Replace with dynamically discovered value",
      "Line 276: Replace with dynamically discovered value",
      "Line 276: Replace with dynamically discovered value",
      "Line 278: Replace with dynamically discovered value",
      "Line 278: Replace with dynamically discovered value",
      "Line 314: Replace with dynamically discovered value",
      "Line 314: Replace with dynamically discovered value",
      "Line 327: Replace with dynamically discovered value",
      "Line 327: Replace with dynamically discovered value",
      "Line 329: Replace with dynamically discovered value",
      "Line 329: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/check_gaelp_learning.py": [
      "Line 66: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 67: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 68: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 203: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 344: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 344: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 350: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 365: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 415: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 442: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 450: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 462: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 467: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 497: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 499: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 569: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 577: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 580: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace with dynamically discovered value",
      "Line 579: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/recsim_user_model.py": [
      "Line 67: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 288: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 332: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 383: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 395: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 436: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 436: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 438: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 438: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 482: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 490: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 498: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 499: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 500: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 501: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 511: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 513: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 514: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 518: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 529: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 529: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace with dynamically discovered value",
      "Line 69: Replace with dynamically discovered value",
      "Line 449: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/behavioral_health_persona_factory.py": [
      "Line 69: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 70: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 194: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 206: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 216: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 251: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 283: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 283: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 288: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 289: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 294: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 295: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 296: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 301: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 306: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 365: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 368: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 369: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 399: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 421: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 426: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 453: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 455: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 463: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 469: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace with dynamically discovered value",
      "Line 94: Replace with dynamically discovered value",
      "Line 95: Replace with dynamically discovered value",
      "Line 95: Replace with dynamically discovered value",
      "Line 96: Replace with dynamically discovered value",
      "Line 96: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/competitor_web_intelligence.py": [
      "Line 69: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 344: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 490: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 560: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace with dynamically discovered value",
      "Line 39: Replace with dynamically discovered value",
      "Line 44: Replace with dynamically discovered value",
      "Line 44: Replace with dynamically discovered value",
      "Line 45: Replace with dynamically discovered value",
      "Line 45: Replace with dynamically discovered value",
      "Line 48: Replace with dynamically discovered value",
      "Line 48: Replace with dynamically discovered value",
      "Line 49: Replace with dynamically discovered value",
      "Line 49: Replace with dynamically discovered value",
      "Line 50: Replace with dynamically discovered value",
      "Line 50: Replace with dynamically discovered value",
      "Line 325: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/final_competitive_intelligence.py": [
      "Line 70: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 1200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 294: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 302: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 365: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 365: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 412: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 430: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 431: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 432: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 449: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 450: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 463: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 490: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 503: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 543: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 543: Replace 5 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/safety_framework/safety_orchestrator.py": [
      "Line 70: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 407: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 698: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 698: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 700: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 700: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace with dynamically discovered value",
      "Line 54: Replace with dynamically discovered value",
      "Line 76: Replace with dynamically discovered value",
      "Line 76: Replace with dynamically discovered value",
      "Line 79: Replace with dynamically discovered value",
      "Line 79: Replace with dynamically discovered value",
      "Line 687: Replace with dynamically discovered value",
      "Line 735: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/phases.py": [
      "Line 70: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 71: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 369: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 369: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace with dynamically discovered value",
      "Line 134: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/integrated_training.py": [
      "Line 71: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 72: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 325: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 357: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace with self.optimizer_config.get('learning_rate')",
      "Line 97: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/advanced_ab_testing_enhancements.py": [
      "Line 72: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 711: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 765: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 766: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 767: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 768: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 792: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 797: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 812: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 816: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 825: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 825: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 834: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 835: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 835: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace with dynamically discovered value",
      "Line 87: Replace with dynamically discovered value",
      "Line 92: Replace with dynamically discovered value",
      "Line 92: Replace with dynamically discovered value",
      "Line 102: Replace with dynamically discovered value",
      "Line 102: Replace with dynamically discovered value",
      "Line 252: Replace with dynamically discovered value",
      "Line 268: Replace with dynamically discovered value",
      "Line 337: Replace with self.segment_discovery.get_discovered_segments()",
      "Line 382: Replace with dynamically discovered value",
      "Line 423: Replace with dynamically discovered value",
      "Line 667: Replace with dynamically discovered value",
      "Line 700: Replace with dynamically discovered value",
      "Line 716: Replace with dynamically discovered value",
      "Line 727: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/journey_tracking_solution.py": [
      "Line 72: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 382: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 383: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 411: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/social_media_scanner.py": [
      "Line 73: Replace 123 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 73: Replace 111 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 77: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 193: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 355: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 356: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 357: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 373: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 407: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 412: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 446: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 451: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 454: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 454: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 454: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 457: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 487: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 491: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 495: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 595: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 673: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 673: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 693: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 724: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 730: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 776: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 782: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 786: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 795: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 802: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 802: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 858: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 862: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 866: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 880: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 902: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 902: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 907: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 908: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 908: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 908: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 927: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 962: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 962: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 962: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 962: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 962: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 962: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 982: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 989: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 999: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1008: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1009: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1009: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1009: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1019: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/criteo_data_loader.py": [
      "Line 74: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/agent-manager/core/services.py": [
      "Line 74: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 365: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 369: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 408: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace with dynamically discovered value",
      "Line 216: Replace with dynamically discovered value",
      "Line 268: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/agent-manager/monitoring/metrics.py": [
      "Line 74: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 75: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 125 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/safety_framework/emergency_controls.py": [
      "Line 75: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 160 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 362: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 362: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 405: Replace 10000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 415: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 456: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 456: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 456: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 475: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 496: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 505: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 507: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 547: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 548: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 549: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 744: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 745: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 746: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 796: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 800: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 803: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 854: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 857: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace with dynamically discovered value",
      "Line 76: Replace with dynamically discovered value",
      "Line 77: Replace with dynamically discovered value",
      "Line 77: Replace with dynamically discovered value",
      "Line 92: Replace with dynamically discovered value",
      "Line 92: Replace with dynamically discovered value",
      "Line 93: Replace with dynamically discovered value",
      "Line 93: Replace with dynamically discovered value",
      "Line 94: Replace with dynamically discovered value",
      "Line 94: Replace with dynamically discovered value",
      "Line 101: Replace with dynamically discovered value",
      "Line 101: Replace with dynamically discovered value",
      "Line 102: Replace with dynamically discovered value",
      "Line 102: Replace with dynamically discovered value",
      "Line 106: Replace with dynamically discovered value",
      "Line 106: Replace with dynamically discovered value",
      "Line 107: Replace with dynamically discovered value",
      "Line 107: Replace with dynamically discovered value",
      "Line 111: Replace with dynamically discovered value",
      "Line 111: Replace with dynamically discovered value",
      "Line 135: Replace with dynamically discovered value",
      "Line 135: Replace with dynamically discovered value",
      "Line 136: Replace with dynamically discovered value",
      "Line 136: Replace with dynamically discovered value",
      "Line 169: Replace with dynamically discovered value",
      "Line 716: Replace with dynamically discovered value",
      "Line 759: Replace with dynamically discovered value",
      "Line 761: Replace with dynamically discovered value",
      "Line 763: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/creative_effectiveness_model.py": [
      "Line 76: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 76: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 35: Replace with dynamically discovered value",
      "Line 35: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/ga4_trial_vs_paid_extractor.py": [
      "Line 77: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 187 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 1307 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 1592 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 1018 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 177 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/budget_safety_monitor.py": [
      "Line 78: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 78: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 80: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 110 with self.patterns.get('parameter_name', discovered_value)",
      "Line 98: Replace 1234567890 with self.patterns.get('parameter_name', discovered_value)",
      "Line 412: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 423: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 434: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 614: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 644: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 661: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 738: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 738: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 780: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 812: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 820: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 835: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 876: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 877: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 879: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 880: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 881: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 886: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 888: Replace 09 with self.patterns.get('parameter_name', discovered_value)",
      "Line 888: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 894: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 926: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 459: Replace with self.performance_thresholds.get_threshold(metric_name)"
    ],
    "/home/hariravichandran/AELP/journey_aware_rl_agent.py": [
      "Line 79: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 118: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 288: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 289: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 306: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 426: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 458: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 558: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 567: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 567: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 570: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 580: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 581: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 582: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 585: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 632: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 633: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 637: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 648: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 650: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 833: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 840: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 850: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 851: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 852: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 894: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 899: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 899: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 900: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 909: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 920: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 306: Replace with dynamically discovered value",
      "Line 595: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/fortified_environment_no_hardcoding.py": [
      "Line 79: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 296: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 425: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 637: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 638: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 690: Replace 150000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 698: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 698: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 701: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 703: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 727: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 731: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 732: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 739: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 744: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 745: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 750: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 750: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 764: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 765: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 781: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 781: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 792: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 795: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 795: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 795: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 803: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 819: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 819: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 833: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 842: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 842: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 849: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 849: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 878: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 881: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 881: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 934: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 934: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 935: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 946: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 949: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 950: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1006: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1006: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1029: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1058: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1087: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1091: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1091: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1163: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1166: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1167: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1195: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1198: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1205: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1205: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1230: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1239: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1284: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1301: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 520: Remove fallback, implement proper discovery mechanism",
      "Line 719: Replace with dynamically discovered value",
      "Line 721: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/budget_pacer_integration.py": [
      "Line 80: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 81: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 362: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 1500 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 392: Replace 150000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 392: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 425: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 435: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 259: Replace with dynamically discovered value",
      "Line 278: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/safety_framework/performance_safety.py": [
      "Line 80: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 202: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 369: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 406: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 444: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 444: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 486: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 487: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 496: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 541: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 542: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 543: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 57: Replace with dynamically discovered value",
      "Line 57: Replace with dynamically discovered value",
      "Line 72: Replace with dynamically discovered value",
      "Line 72: Replace with dynamically discovered value",
      "Line 315: Replace with dynamically discovered value",
      "Line 496: Replace with dynamically discovered value",
      "Line 542: Replace with dynamically discovered value",
      "Line 643: Replace with dynamically discovered value",
      "Line 699: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/statistical_ab_testing_framework.py": [
      "Line 81: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 82: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 87: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 287: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 405: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 406: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 407: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 487: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 625: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 630: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 631: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 632: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 661: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 665: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 852: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 853: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 968: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 972: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 972: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 976: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 978: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 979: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 981: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1012: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1062: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1065: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1086: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1121: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1202: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1203: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1239: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1241: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1251: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1350: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1388: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1394: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1406: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1420: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1421: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1421: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1427: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1432: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1443: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1443: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 99: Replace with dynamically discovered value",
      "Line 99: Replace with dynamically discovered value",
      "Line 100: Replace with dynamically discovered value",
      "Line 100: Replace with dynamically discovered value",
      "Line 125: Replace with dynamically discovered value",
      "Line 125: Replace with dynamically discovered value",
      "Line 132: Replace with dynamically discovered value",
      "Line 132: Replace with dynamically discovered value",
      "Line 135: Replace with dynamically discovered value",
      "Line 135: Replace with dynamically discovered value",
      "Line 229: Replace with dynamically discovered value",
      "Line 229: Replace with dynamically discovered value",
      "Line 230: Replace with dynamically discovered value",
      "Line 230: Replace with dynamically discovered value",
      "Line 233: Replace with dynamically discovered value",
      "Line 233: Replace with dynamically discovered value",
      "Line 237: Replace with dynamically discovered value",
      "Line 237: Replace with dynamically discovered value",
      "Line 249: Replace with dynamically discovered value",
      "Line 249: Replace with dynamically discovered value",
      "Line 287: Replace with self.optimizer_config.get('learning_rate')",
      "Line 362: Replace with dynamically discovered value",
      "Line 602: Remove fallback, implement proper discovery mechanism",
      "Line 602: Replace with dynamically discovered value",
      "Line 602: Replace with dynamically discovered value",
      "Line 602: Replace with self.segment_discovery.get_discovered_segments()",
      "Line 620: Replace with dynamically discovered value",
      "Line 655: Replace with dynamically discovered value",
      "Line 655: Replace with dynamically discovered value",
      "Line 669: Remove fallback, implement proper discovery mechanism",
      "Line 880: Remove fallback, implement proper discovery mechanism",
      "Line 1267: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/auction-gym/src/Bidder.py": [
      "Line 81: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 243: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 283: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 390: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 391: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 392: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 392: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 398: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 407: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 518: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 518: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 519: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 520: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 521: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 536: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 571: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 575: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 575: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 576: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 577: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 578: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 578: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 578: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 584: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 593: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Remove fallback, implement proper discovery mechanism",
      "Line 241: Replace with self.optimizer_config.get('learning_rate')",
      "Line 243: Replace with dynamically discovered value",
      "Line 243: Replace with self.optimizer_config.get('learning_rate')",
      "Line 284: Replace with self.optimizer_config.get('learning_rate')",
      "Line 286: Replace with dynamically discovered value",
      "Line 286: Replace with self.optimizer_config.get('learning_rate')",
      "Line 390: Replace with self.optimizer_config.get('learning_rate')",
      "Line 392: Replace with dynamically discovered value",
      "Line 392: Replace with self.optimizer_config.get('learning_rate')",
      "Line 519: Replace with self.optimizer_config.get('learning_rate')",
      "Line 521: Replace with dynamically discovered value",
      "Line 521: Replace with self.optimizer_config.get('learning_rate')",
      "Line 576: Replace with self.optimizer_config.get('learning_rate')",
      "Line 578: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 578: Replace with dynamically discovered value",
      "Line 578: Replace with self.optimizer_config.get('learning_rate')"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/rl_agents/networks.py": [
      "Line 81: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 355: Replace 128 with self.patterns.get('parameter_name', discovered_value)",
      "Line 356: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 390: Replace 10000 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/budget_safety_controller.py": [
      "Line 83: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 83: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 84: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 85: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 280: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 105 with self.patterns.get('parameter_name', discovered_value)",
      "Line 662: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 710: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 890: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 911: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 932: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 953: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1009: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1041: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1041: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1057: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1059: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1375: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1446: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1454: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1455: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1457: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1458: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1467: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1475: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1476: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1484: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1490: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1491: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1508: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1511: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace with dynamically discovered value",
      "Line 106: Replace with dynamically discovered value",
      "Line 121: Replace with dynamically discovered value",
      "Line 121: Replace with dynamically discovered value",
      "Line 263: Replace with dynamically discovered value",
      "Line 263: Replace with dynamically discovered value",
      "Line 264: Replace with dynamically discovered value",
      "Line 264: Replace with dynamically discovered value",
      "Line 295: Replace with dynamically discovered value",
      "Line 295: Replace with dynamically discovered value",
      "Line 323: Replace with dynamically discovered value",
      "Line 323: Replace with dynamically discovered value",
      "Line 323: Replace with dynamically discovered value",
      "Line 323: Replace with dynamically discovered value",
      "Line 325: Replace with dynamically discovered value",
      "Line 325: Replace with dynamically discovered value",
      "Line 326: Replace with dynamically discovered value",
      "Line 326: Replace with dynamically discovered value",
      "Line 327: Replace with dynamically discovered value",
      "Line 327: Replace with dynamically discovered value",
      "Line 328: Replace with dynamically discovered value",
      "Line 328: Replace with dynamically discovered value",
      "Line 329: Replace with dynamically discovered value",
      "Line 329: Replace with dynamically discovered value",
      "Line 330: Replace with dynamically discovered value",
      "Line 330: Replace with dynamically discovered value",
      "Line 331: Replace with dynamically discovered value",
      "Line 331: Replace with dynamically discovered value",
      "Line 332: Replace with dynamically discovered value",
      "Line 332: Replace with dynamically discovered value",
      "Line 333: Replace with dynamically discovered value",
      "Line 333: Replace with dynamically discovered value",
      "Line 334: Replace with dynamically discovered value",
      "Line 334: Replace with dynamically discovered value",
      "Line 335: Replace with dynamically discovered value",
      "Line 335: Replace with dynamically discovered value",
      "Line 336: Replace with dynamically discovered value",
      "Line 336: Replace with dynamically discovered value",
      "Line 1253: Replace with dynamically discovered value",
      "Line 1321: Replace with dynamically discovered value",
      "Line 1458: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/agent-manager/main.py": [
      "Line 84: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/shadow_mode_environment.py": [
      "Line 86: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 150: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 1500 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 211: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 246: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 257: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 266: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 301: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 301: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 391: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 423: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 433: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 443: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 444: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 445: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 448: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 458: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 468: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 468: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 478: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 484: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 484: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 484: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 484: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 484: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 484: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 490: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 493: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 494: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 503: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 504: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 508: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 508: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 515: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 517: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 517: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 520: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 521: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 521: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 521: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 522: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 555: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 555: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 557: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 557: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 559: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 569: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 570: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 574: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 585: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 588: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 588: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 588: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 588: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 594: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 594: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 594: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 594: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 594: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 599: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 599: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 599: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 606: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 623: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 628: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 629: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 630: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 631: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 632: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 634: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 640: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 643: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 644: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 665: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 665: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 665: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 666: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 666: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 667: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 667: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 667: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 668: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 668: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 668: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 685: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 687: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 687: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 687: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 696: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 696: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 696: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 710: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 719: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 728: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 732: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 733: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 738: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 823: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 830: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 831: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 833: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 835: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 865: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 866: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 867: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 875: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 879: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 883: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 919: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 939: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 940: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 54: Replace with dynamically discovered value",
      "Line 54: Replace with dynamically discovered value",
      "Line 57: Replace with dynamically discovered value",
      "Line 57: Replace with dynamically discovered value",
      "Line 60: Replace with dynamically discovered value",
      "Line 60: Replace with dynamically discovered value",
      "Line 63: Replace with dynamically discovered value",
      "Line 63: Replace with dynamically discovered value",
      "Line 111: Replace with dynamically discovered value",
      "Line 128: Remove fallback, implement proper discovery mechanism",
      "Line 209: Replace with dynamically discovered value",
      "Line 209: Replace with dynamically discovered value",
      "Line 420: Replace with dynamically discovered value",
      "Line 420: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/safety_framework/production_budget_controls.py": [
      "Line 87: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 273: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 278: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 641: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 684: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 700: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 716: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 733: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace with dynamically discovered value",
      "Line 117: Replace with dynamically discovered value",
      "Line 148: Replace with dynamically discovered value",
      "Line 148: Replace with dynamically discovered value",
      "Line 159: Replace with dynamically discovered value",
      "Line 159: Replace with dynamically discovered value",
      "Line 179: Replace with dynamically discovered value",
      "Line 179: Replace with dynamically discovered value",
      "Line 180: Replace with dynamically discovered value",
      "Line 180: Replace with dynamically discovered value",
      "Line 183: Replace with dynamically discovered value",
      "Line 183: Replace with dynamically discovered value",
      "Line 204: Replace with dynamically discovered value",
      "Line 204: Replace with dynamically discovered value",
      "Line 205: Replace with dynamically discovered value",
      "Line 205: Replace with dynamically discovered value",
      "Line 206: Replace with dynamically discovered value",
      "Line 206: Replace with dynamically discovered value",
      "Line 209: Replace with dynamically discovered value",
      "Line 209: Replace with dynamically discovered value",
      "Line 260: Remove fallback, implement proper discovery mechanism",
      "Line 366: Replace with dynamically discovered value",
      "Line 668: Replace with dynamically discovered value",
      "Line 670: Replace with dynamically discovered value",
      "Line 672: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/dashboard.py": [
      "Line 89: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 89: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 168: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 317: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 333: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 357: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 373: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 373: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 390: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 397: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 405: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 405: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 419: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 438: Replace 1200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 438: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 464: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 574: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace with dynamically discovered value",
      "Line 125: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/dynamic_discovery.py": [
      "Line 89: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 301: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 21: Replace with dynamically discovered value",
      "Line 21: Replace with dynamically discovered value",
      "Line 22: Replace with dynamically discovered value",
      "Line 22: Replace with dynamically discovered value",
      "Line 23: Replace with dynamically discovered value",
      "Line 23: Replace with dynamically discovered value",
      "Line 24: Replace with dynamically discovered value",
      "Line 24: Replace with dynamically discovered value",
      "Line 27: Replace with dynamically discovered value",
      "Line 27: Replace with dynamically discovered value",
      "Line 28: Replace with dynamically discovered value",
      "Line 28: Replace with dynamically discovered value",
      "Line 31: Replace with dynamically discovered value",
      "Line 31: Replace with dynamically discovered value",
      "Line 32: Replace with dynamically discovered value",
      "Line 32: Replace with dynamically discovered value",
      "Line 33: Replace with dynamically discovered value",
      "Line 33: Replace with dynamically discovered value",
      "Line 36: Replace with dynamically discovered value",
      "Line 36: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/auction-gym/src/main.py": [
      "Line 89: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 90: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 213: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 342: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 369: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 29: Replace with dynamically discovered value",
      "Line 29: Replace with dynamically discovered value",
      "Line 37: Replace with dynamically discovered value",
      "Line 298: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/recsim_auction_bridge.py": [
      "Line 90: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 91: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 92: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 95: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 96: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 103: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 156: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 159: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 165: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 172: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 173: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 179: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 189: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 237: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 251: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 338: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 452: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 452: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 458: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 459: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 462: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 463: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 464: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 465: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 465: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 479: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 480: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 481: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 483: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 487: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 610: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 615: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 617: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 642: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 642: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 644: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 644: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 646: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 694: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 747: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 750: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 758: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 766: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 787: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/learning_tracker.py": [
      "Line 91: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 303: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 315: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 360: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 360: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 362: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 362: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 362: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 389: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 390: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 394: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 394: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 404: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 404: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 409: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 415: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 415: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 419: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 419: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/wandb_tracking.py": [
      "Line 94: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 94: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 291: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 294: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 304: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 315: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 394: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 395: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 396: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 397: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace with dynamically discovered value",
      "Line 372: Replace with dynamically discovered value",
      "Line 416: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/model_versioning.py": [
      "Line 99: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 566: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 597: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 597: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 616: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 616: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 643: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 643: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 644: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 644: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 646: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 649: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 649: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 650: Replace 09 with self.patterns.get('parameter_name', discovered_value)",
      "Line 650: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 652: Replace 11000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 662: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 675: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 680: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 691: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 813: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 941: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 942: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 958: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 959: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 962: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 963: Replace 1250 with self.patterns.get('parameter_name', discovered_value)",
      "Line 964: Replace 1000 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/budget_optimizer.py": [
      "Line 100: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 100: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 140: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 364: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 383: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 387: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 387: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 388: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 388: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 400: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 400: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 402: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 402: Replace 105 with self.patterns.get('parameter_name', discovered_value)",
      "Line 408: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 411: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 412: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 413: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 419: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 422: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 423: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 551: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 554: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 662: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 662: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 666: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 669: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 669: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 739: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 757: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 759: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 760: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 762: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 762: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 762: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 774: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 774: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 795: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 797: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 797: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 804: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 808: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 810: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 812: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 812: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 817: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 820: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 820: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 911: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 911: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 911: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 911: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 911: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 948: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 949: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 966: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 971: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 971: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 974: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 979: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1020: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1041: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1054: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1058: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1058: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1063: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1063: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1070: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1071: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1096: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1110: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1113: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1114: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1115: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1131: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1138: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1198: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1198: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1198: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1233: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1237: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1246: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1247: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1248: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1249: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1250: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1252: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1252: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1253: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1253: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1254: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1254: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1255: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1255: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1256: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1257: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1257: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1291: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1291: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1297: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1297: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1312: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1312: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1312: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1314: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1314: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1315: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1316: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1317: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1318: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1320: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1321: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1322: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1323: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1325: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1332: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1333: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace with dynamically discovered value",
      "Line 139: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 363: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 520: Remove fallback, implement proper discovery mechanism",
      "Line 589: Remove fallback, implement proper discovery mechanism",
      "Line 893: Replace with dynamically discovered value",
      "Line 908: Replace with dynamically discovered value",
      "Line 911: Replace with dynamically discovered value",
      "Line 1145: Replace with dynamically discovered value",
      "Line 1185: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/run_google_ads_production.py": [
      "Line 100: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 102: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/segment_discovery.py": [
      "Line 101: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 180: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 306: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 320: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 356: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 356: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 397: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 465: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 465: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 541: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 541: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 569: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 603: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 609: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 743: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 805: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 807: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 814: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 814: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 816: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 835: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 835: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 837: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 839: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 895: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 908: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 909: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 914: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 941: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1170: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1294: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1298: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1303: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1306: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1316: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1321: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1321: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1322: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1322: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1323: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1323: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1325: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1329: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1331: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1333: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1336: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace with dynamically discovered value",
      "Line 69: Replace with dynamically discovered value",
      "Line 70: Replace with dynamically discovered value",
      "Line 70: Replace with dynamically discovered value",
      "Line 72: Replace with dynamically discovered value",
      "Line 72: Replace with dynamically discovered value",
      "Line 73: Replace with dynamically discovered value",
      "Line 73: Replace with dynamically discovered value",
      "Line 74: Replace with dynamically discovered value",
      "Line 74: Replace with dynamically discovered value",
      "Line 90: Replace with dynamically discovered value",
      "Line 90: Replace with dynamically discovered value",
      "Line 93: Replace with dynamically discovered value",
      "Line 93: Replace with dynamically discovered value",
      "Line 126: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 149: Replace with dynamically discovered value",
      "Line 163: Replace with dynamically discovered value",
      "Line 239: Replace with dynamically discovered value",
      "Line 329: Replace with dynamically discovered value",
      "Line 344: Replace with dynamically discovered value",
      "Line 349: Replace with dynamically discovered value",
      "Line 364: Replace with dynamically discovered value",
      "Line 374: Replace with dynamically discovered value",
      "Line 482: Remove fallback, implement proper discovery mechanism",
      "Line 720: Replace with dynamically discovered value",
      "Line 1020: Replace with dynamically discovered value",
      "Line 1095: Replace with dynamically discovered value",
      "Line 1303: Replace with dynamically discovered value",
      "Line 1303: Replace with dynamically discovered value",
      "Line 1306: Replace with dynamically discovered value",
      "Line 1306: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/enhanced_journey_tracking.py": [
      "Line 101: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 101: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 252: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 337: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 424: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 425: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 430: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 438: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 440: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 441: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 472: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 475: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 475: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 58: Replace with dynamically discovered value",
      "Line 58: Replace with dynamically discovered value",
      "Line 77: Replace with dynamically discovered value",
      "Line 77: Replace with dynamically discovered value",
      "Line 78: Replace with dynamically discovered value",
      "Line 78: Replace with dynamically discovered value",
      "Line 79: Replace with dynamically discovered value",
      "Line 79: Replace with dynamically discovered value",
      "Line 284: Replace with dynamically discovered value",
      "Line 292: Replace with dynamically discovered value",
      "Line 297: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/performance_monitor.py": [
      "Line 104: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 105: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 114: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 117: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 129: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 130: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 131: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 242: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 298: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 558: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 570: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 588: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 613: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 40: Replace with dynamically discovered value",
      "Line 40: Replace with dynamically discovered value",
      "Line 41: Replace with dynamically discovered value",
      "Line 41: Replace with dynamically discovered value",
      "Line 409: Replace with dynamically discovered value",
      "Line 649: Replace with dynamically discovered value",
      "Line 675: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/integrated_behavioral_simulator.py": [
      "Line 105: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 151: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 155: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 251: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 251: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 292: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 294: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 305: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 429: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 431: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 432: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 433: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 433: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 435: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 435: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 436: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 478: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 488: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 488: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 489: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 505: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 506: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 52: Replace with dynamically discovered value",
      "Line 52: Replace with dynamically discovered value",
      "Line 57: Replace with dynamically discovered value",
      "Line 57: Replace with dynamically discovered value",
      "Line 258: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/production_adapter.py": [
      "Line 105: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 106: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 120: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 281: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5: Replace with dynamically discovered value",
      "Line 132: Replace with dynamically discovered value",
      "Line 153: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/safety_framework/agent_behavior_safety.py": [
      "Line 106: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 127: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 212: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 357: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 387: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 809: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 834: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace with dynamically discovered value",
      "Line 59: Replace with dynamically discovered value",
      "Line 120: Replace with dynamically discovered value",
      "Line 121: Replace with dynamically discovered value",
      "Line 127: Replace with dynamically discovered value",
      "Line 128: Replace with dynamically discovered value",
      "Line 231: Replace with dynamically discovered value",
      "Line 260: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 261: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 262: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 325: Replace with dynamically discovered value",
      "Line 442: Replace with dynamically discovered value",
      "Line 466: Replace with dynamically discovered value",
      "Line 689: Replace with dynamically discovered value",
      "Line 825: Replace with dynamically discovered value",
      "Line 861: Replace with dynamically discovered value",
      "Line 900: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/safety_framework/data_safety.py": [
      "Line 107: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 107: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 011 with self.patterns.get('parameter_name', discovered_value)",
      "Line 108: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 160: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 402: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 544: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 545: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 550: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 551: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 551: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 556: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 562: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 820: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 69: Replace with dynamically discovered value",
      "Line 69: Replace with dynamically discovered value",
      "Line 82: Replace with dynamically discovered value",
      "Line 82: Replace with dynamically discovered value",
      "Line 83: Replace with dynamically discovered value",
      "Line 83: Replace with dynamically discovered value",
      "Line 96: Replace with dynamically discovered value",
      "Line 96: Replace with dynamically discovered value",
      "Line 97: Replace with dynamically discovered value",
      "Line 97: Replace with dynamically discovered value",
      "Line 169: Replace with dynamically discovered value",
      "Line 388: Replace with dynamically discovered value",
      "Line 503: Replace with dynamically discovered value",
      "Line 525: Replace with dynamically discovered value",
      "Line 657: Replace with dynamically discovered value",
      "Line 736: Replace with dynamically discovered value",
      "Line 863: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/pipeline_integration.py": [
      "Line 108: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 162: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 297: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 355: Replace 8 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/safety_monitor.py": [
      "Line 108: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 109: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 110: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 111: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 124: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 128: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 154: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 344: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 375: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 397: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 443: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 443: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 66: Replace with dynamically discovered value",
      "Line 66: Replace with dynamically discovered value",
      "Line 67: Replace with dynamically discovered value",
      "Line 67: Replace with dynamically discovered value",
      "Line 70: Replace with dynamically discovered value",
      "Line 70: Replace with dynamically discovered value",
      "Line 71: Replace with dynamically discovered value",
      "Line 71: Replace with dynamically discovered value",
      "Line 108: Replace with dynamically discovered value",
      "Line 109: Replace with dynamically discovered value",
      "Line 110: Replace with dynamically discovered value",
      "Line 111: Replace with dynamically discovered value",
      "Line 115: Replace with dynamically discovered value",
      "Line 116: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 121: Replace with dynamically discovered value",
      "Line 122: Replace with dynamically discovered value",
      "Line 123: Replace with dynamically discovered value",
      "Line 124: Replace with dynamically discovered value",
      "Line 128: Replace with dynamically discovered value",
      "Line 129: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 134: Replace with dynamically discovered value",
      "Line 135: Replace with dynamically discovered value",
      "Line 136: Replace with dynamically discovered value",
      "Line 137: Replace with dynamically discovered value",
      "Line 141: Replace with dynamically discovered value",
      "Line 142: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 147: Replace with dynamically discovered value",
      "Line 148: Replace with dynamically discovered value",
      "Line 149: Replace with dynamically discovered value",
      "Line 150: Replace with dynamically discovered value",
      "Line 154: Replace with dynamically discovered value",
      "Line 155: Replace with self.performance_thresholds.get_threshold(metric_name)"
    ],
    "/home/hariravichandran/AELP/performance_cli.py": [
      "Line 109: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 310: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 88: Replace with dynamically discovered value",
      "Line 315: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/ga4_live_extractor.py": [
      "Line 110: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 112: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 158: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 161: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/delayed_reward_system.py": [
      "Line 114: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 115: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 122: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 141: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 566: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 610: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 611: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 614: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 738: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 742: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 752: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 752: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 756: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 756: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 840: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 845: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 845: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 845: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 845: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 938: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 958: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 959: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 79: Replace with dynamically discovered value",
      "Line 79: Replace with dynamically discovered value",
      "Line 93: Replace with dynamically discovered value",
      "Line 93: Replace with dynamically discovered value",
      "Line 102: Replace with dynamically discovered value",
      "Line 102: Replace with dynamically discovered value",
      "Line 104: Replace with dynamically discovered value",
      "Line 104: Replace with dynamically discovered value",
      "Line 119: Replace with dynamically discovered value",
      "Line 119: Replace with dynamically discovered value",
      "Line 232: Replace with dynamically discovered value",
      "Line 238: Replace with dynamically discovered value",
      "Line 402: Replace with dynamically discovered value",
      "Line 402: Replace with dynamically discovered value",
      "Line 468: Replace with dynamically discovered value",
      "Line 474: Replace with dynamically discovered value",
      "Line 474: Replace with dynamically discovered value",
      "Line 542: Replace with dynamically discovered value",
      "Line 637: Replace with dynamically discovered value",
      "Line 1034: Replace with dynamically discovered value",
      "Line 1055: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/verify_sequence_modeling.py": [
      "Line 116: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 116: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 123: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Remove fallback, implement proper discovery mechanism",
      "Line 176: Replace with dynamically discovered value",
      "Line 176: Replace with dynamically discovered value",
      "Line 176: Replace with dynamically discovered value",
      "Line 186: Remove fallback, implement proper discovery mechanism",
      "Line 197: Replace with dynamically discovered value",
      "Line 208: Remove fallback, implement proper discovery mechanism",
      "Line 208: Replace with dynamically discovered value",
      "Line 210: Remove fallback, implement proper discovery mechanism",
      "Line 216: Remove fallback, implement proper discovery mechanism",
      "Line 216: Replace with dynamically discovered value",
      "Line 216: Replace with dynamically discovered value",
      "Line 216: Replace with dynamically discovered value",
      "Line 241: Remove fallback, implement proper discovery mechanism",
      "Line 246: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/verify_scanner_launch.py": [
      "Line 118: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 208: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 276: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 279: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/production_example.py": [
      "Line 118: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 230: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 231: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 232: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 6: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/parameter_discovery_manager.py": [
      "Line 119: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 119: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 132: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace 180 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 185: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 035 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 008 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 204: Replace 005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 209: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 227: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 236: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 245: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 247: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 355: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 366: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 456: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 458: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 476: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 28: Replace with dynamically discovered value",
      "Line 28: Replace with dynamically discovered value",
      "Line 29: Replace with dynamically discovered value",
      "Line 29: Replace with dynamically discovered value",
      "Line 30: Replace with dynamically discovered value",
      "Line 30: Replace with dynamically discovered value",
      "Line 34: Replace with dynamically discovered value",
      "Line 34: Replace with dynamically discovered value",
      "Line 35: Replace with dynamically discovered value",
      "Line 35: Replace with dynamically discovered value",
      "Line 38: Replace with dynamically discovered value",
      "Line 38: Replace with dynamically discovered value",
      "Line 39: Replace with dynamically discovered value",
      "Line 39: Replace with dynamically discovered value",
      "Line 40: Replace with dynamically discovered value",
      "Line 40: Replace with dynamically discovered value",
      "Line 43: Replace with dynamically discovered value",
      "Line 43: Replace with dynamically discovered value",
      "Line 44: Replace with dynamically discovered value",
      "Line 44: Replace with dynamically discovered value",
      "Line 47: Replace with dynamically discovered value",
      "Line 47: Replace with dynamically discovered value",
      "Line 48: Replace with dynamically discovered value",
      "Line 48: Replace with dynamically discovered value",
      "Line 51: Replace with dynamically discovered value",
      "Line 51: Replace with dynamically discovered value",
      "Line 55: Replace with dynamically discovered value",
      "Line 55: Replace with dynamically discovered value",
      "Line 56: Replace with dynamically discovered value",
      "Line 56: Replace with dynamically discovered value",
      "Line 59: Replace with dynamically discovered value",
      "Line 59: Replace with dynamically discovered value",
      "Line 61: Replace with dynamically discovered value",
      "Line 61: Replace with dynamically discovered value",
      "Line 350: Remove fallback, implement proper discovery mechanism",
      "Line 355: Remove fallback, implement proper discovery mechanism",
      "Line 366: Remove fallback, implement proper discovery mechanism",
      "Line 370: Remove fallback, implement proper discovery mechanism",
      "Line 374: Remove fallback, implement proper discovery mechanism",
      "Line 378: Remove fallback, implement proper discovery mechanism",
      "Line 382: Remove fallback, implement proper discovery mechanism",
      "Line 386: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/discovery_engine.py": [
      "Line 121: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 121: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 135: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 176: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 253: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 327: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 329: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 330: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 482: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 500: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 525: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 526: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 539: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 703: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 706: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 708: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 712: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 773: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 798: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 872: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 872: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 935: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 935: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 978: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 982: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 982: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 983: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1055: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1072: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1095: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1188: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1211: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1218: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1229: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1269: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1294: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1310: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1337: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1338: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1349: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1356: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1372: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1374: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1393: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1395: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 39: Replace with dynamically discovered value",
      "Line 39: Replace with dynamically discovered value",
      "Line 41: Replace with dynamically discovered value",
      "Line 41: Replace with dynamically discovered value",
      "Line 42: Replace with dynamically discovered value",
      "Line 42: Replace with dynamically discovered value",
      "Line 43: Replace with dynamically discovered value",
      "Line 43: Replace with dynamically discovered value",
      "Line 44: Replace with dynamically discovered value",
      "Line 44: Replace with dynamically discovered value",
      "Line 45: Replace with dynamically discovered value",
      "Line 45: Replace with dynamically discovered value",
      "Line 46: Replace with dynamically discovered value",
      "Line 46: Replace with dynamically discovered value",
      "Line 47: Replace with dynamically discovered value",
      "Line 47: Replace with dynamically discovered value",
      "Line 48: Replace with dynamically discovered value",
      "Line 48: Replace with dynamically discovered value",
      "Line 49: Replace with dynamically discovered value",
      "Line 49: Replace with dynamically discovered value",
      "Line 50: Replace with dynamically discovered value",
      "Line 50: Replace with dynamically discovered value",
      "Line 51: Replace with dynamically discovered value",
      "Line 51: Replace with dynamically discovered value",
      "Line 53: Replace with dynamically discovered value",
      "Line 53: Replace with dynamically discovered value",
      "Line 54: Replace with dynamically discovered value",
      "Line 54: Replace with dynamically discovered value",
      "Line 121: Replace with dynamically discovered value",
      "Line 135: Replace with dynamically discovered value",
      "Line 238: Replace with dynamically discovered value",
      "Line 358: Replace with dynamically discovered value",
      "Line 487: Replace with dynamically discovered value",
      "Line 504: Replace with dynamically discovered value",
      "Line 507: Replace with dynamically discovered value",
      "Line 543: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/data_pipeline.py": [
      "Line 123: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 125: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 373: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 374: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 398: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 449: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 457: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 495: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 571: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 634: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 648: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 681: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 682: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 692: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 714: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 729: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 731: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace with dynamically discovered value",
      "Line 219: Replace with dynamically discovered value",
      "Line 233: Replace with dynamically discovered value",
      "Line 305: Replace with dynamically discovered value",
      "Line 317: Replace with dynamically discovered value",
      "Line 398: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/budget_pacer.py": [
      "Line 125: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 126: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 174: Replace 168 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 11 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 17 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 19 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 307: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 308: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 314: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 357: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 358: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 374: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 404: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 522: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 632: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 635: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 635: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 637: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 637: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 638: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 641: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 643: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 671: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 716: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 735: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 736: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 753: Replace 168 with self.patterns.get('parameter_name', discovered_value)",
      "Line 774: Replace 168 with self.patterns.get('parameter_name', discovered_value)",
      "Line 786: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 862: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 863: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 924: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 952: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 965: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 970: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 988: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1010: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1023: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1039: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace with dynamically discovered value",
      "Line 157: Replace with dynamically discovered value",
      "Line 169: Replace with dynamically discovered value",
      "Line 307: Replace with dynamically discovered value",
      "Line 310: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 313: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 314: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 315: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 447: Replace with dynamically discovered value",
      "Line 467: Replace with dynamically discovered value",
      "Line 494: Replace with dynamically discovered value",
      "Line 656: Replace with dynamically discovered value",
      "Line 659: Replace with dynamically discovered value",
      "Line 836: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/explainable_rl_agent.py": [
      "Line 125: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 446: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 534: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 545: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 614: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 684: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 721: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 731: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 738: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 756: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 768: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 863: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 889: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 74: Replace with dynamically discovered value",
      "Line 74: Replace with dynamically discovered value",
      "Line 75: Replace with dynamically discovered value",
      "Line 75: Replace with dynamically discovered value",
      "Line 101: Replace with dynamically discovered value",
      "Line 101: Replace with dynamically discovered value",
      "Line 400: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/gaelp_master_integration_simple.py": [
      "Line 131: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 133: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 134: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 137: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 138: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 139: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 142: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 143: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 144: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 148: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 149: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 196: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 492: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 494: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 495: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 496: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 501: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 545: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 549: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 579: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 586: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 586: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 588: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 629: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 674: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 678: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 695: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 698: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 703: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 705: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 740: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 742: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 758: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 760: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 787: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 789: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Remove fallback, implement proper discovery mechanism",
      "Line 89: Replace with dynamically discovered value",
      "Line 92: Replace with dynamically discovered value",
      "Line 184: Replace with dynamically discovered value",
      "Line 184: Replace with dynamically discovered value",
      "Line 208: Remove fallback, implement proper discovery mechanism",
      "Line 217: Remove fallback, implement proper discovery mechanism",
      "Line 513: Replace with dynamically discovered value",
      "Line 513: Replace with dynamically discovered value",
      "Line 796: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/verify_hardcoding_elimination.py": [
      "Line 131: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 175: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 181: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 182: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/safety_framework/content_safety.py": [
      "Line 133: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 163: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 178: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 205: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 341: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 355: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 410: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace 13 with self.patterns.get('parameter_name', discovered_value)",
      "Line 511: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 53: Replace with dynamically discovered value",
      "Line 53: Replace with dynamically discovered value",
      "Line 54: Replace with dynamically discovered value",
      "Line 54: Replace with dynamically discovered value",
      "Line 66: Replace with dynamically discovered value",
      "Line 66: Replace with dynamically discovered value",
      "Line 67: Replace with dynamically discovered value",
      "Line 67: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/user_journey_database.py": [
      "Line 134: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 146: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 147: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 465: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 465: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 747: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 900: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 901: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 903: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 906: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 954: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 957: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1321: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1327: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1328: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1329: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1329: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1330: Replace 192 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1330: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1335: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1335: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1335: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1341: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1342: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1343: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1343: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1344: Replace 192 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1344: Replace 101 with self.patterns.get('parameter_name', discovered_value)",
      "Line 145: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 145: Replace with dynamically discovered value",
      "Line 146: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 147: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 528: Replace with dynamically discovered value",
      "Line 869: Replace with dynamically discovered value",
      "Line 928: Replace with dynamically discovered value",
      "Line 933: Replace with dynamically discovered value",
      "Line 938: Replace with dynamically discovered value",
      "Line 943: Replace with dynamically discovered value",
      "Line 948: Replace with dynamically discovered value",
      "Line 1261: Replace with dynamically discovered value",
      "Line 1310: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/creative_selector.py": [
      "Line 136: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 152: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 157: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 171: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 224: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 244: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 254: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 324: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 367: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 374: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 376: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 383: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 388: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 391: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 393: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 406: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 451: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 470: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 471: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 471: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 523: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 526: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 538: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 634: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 635: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 636: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 649: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 650: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 651: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 652: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 653: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 676: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 691: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 692: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 136: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 348: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/conversion_tracking_pixels.py": [
      "Line 138: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 186: Replace 00 with self.patterns.get('parameter_name', discovered_value)",
      "Line 210: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 250: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 474: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 522: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 622: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 660: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Remove fallback, implement proper discovery mechanism",
      "Line 486: Replace with dynamically discovered value",
      "Line 507: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/NO_FALLBACKS.py": [
      "Line 144: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 249: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 275: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 23: Remove fallback, implement proper discovery mechanism",
      "Line 28: Remove fallback, implement proper discovery mechanism",
      "Line 28: Replace with dynamically discovered value",
      "Line 28: Replace with dynamically discovered value",
      "Line 28: Replace with dynamically discovered value",
      "Line 31: Remove fallback, implement proper discovery mechanism",
      "Line 39: Remove fallback, implement proper discovery mechanism",
      "Line 40: Replace with dynamically discovered value",
      "Line 41: Replace with dynamically discovered value",
      "Line 42: Replace with dynamically discovered value",
      "Line 44: Replace with dynamically discovered value",
      "Line 51: Remove fallback, implement proper discovery mechanism",
      "Line 51: Remove fallback, implement proper discovery mechanism",
      "Line 84: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/fortified_rl_agent_no_hardcoding.py": [
      "Line 148: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 235: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 336: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 386: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 411: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 479: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 485: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 485: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 485: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 488: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 576: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 700: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 701: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 702: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 703: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 706: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 707: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 729: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 732: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 733: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 734: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 766: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 773: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 783: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 788: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 792: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 793: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 798: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 825: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 826: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 827: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 869: Replace 002 with self.patterns.get('parameter_name', discovered_value)",
      "Line 870: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 870: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 870: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 871: Replace 0005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 872: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 873: Replace 002 with self.patterns.get('parameter_name', discovered_value)",
      "Line 874: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 874: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 874: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 875: Replace 0005 with self.patterns.get('parameter_name', discovered_value)",
      "Line 876: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 883: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 895: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 896: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 897: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 898: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 899: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 901: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 904: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 905: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 906: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 907: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 913: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 920: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 921: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 922: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 923: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 924: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 927: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 928: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 929: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 930: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 941: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 943: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 950: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 956: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1113: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1133: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1133: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1138: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1139: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1143: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1144: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1149: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1150: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1156: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1157: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1161: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1173: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1203: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1203: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1223: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1243: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1244: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1264: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1296: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1304: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1305: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1313: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1318: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1320: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1322: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1326: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1327: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1364: Replace 0001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1400: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1414: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1423: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1431: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1468: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1468: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1487: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1502: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1505: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1505: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1508: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1535: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1536: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1536: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1599: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1599: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1608: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1612: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1616: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1643: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1645: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1651: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1653: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1653: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1669: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1670: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1679: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1680: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1692: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1714: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1716: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1718: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1722: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1722: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1876: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1876: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1903: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1927: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1958: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1958: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1958: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1975: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1976: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1980: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1980: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1987: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1988: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2006: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2025: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2026: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2030: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2034: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2035: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2035: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2036: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2037: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2039: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2053: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2054: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2055: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2058: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2086: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2122: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2135: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2145: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2146: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2150: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2167: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2168: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2179: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2179: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2192: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2196: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2196: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2201: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2266: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2266: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2282: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2287: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2293: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2306: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2311: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2322: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2330: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2340: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2363: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2381: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2488: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2494: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2494: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2504: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2504: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2566: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2573: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2612: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2613: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2630: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2631: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2632: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2634: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2641: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2642: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2643: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2651: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2652: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2667: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2775: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2777: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2779: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2782: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2788: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2790: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2804: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2831: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2845: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2849: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2849: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2938: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2939: Replace 0001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2947: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2947: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2947: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2947: Replace 09 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2948: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2958: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2964: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2974: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2977: Replace 1500 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2984: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2984: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2985: Replace 1200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 2992: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3002: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3002: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3003: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3060: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3083: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3114: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3130: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3131: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3133: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3152: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3154: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3155: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3160: Replace 100000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3161: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3162: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3163: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3164: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3165: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3170: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3170: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3187: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3193: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3194: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3194: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3219: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3219: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3225: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3238: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3239: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3240: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3241: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3242: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3327: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3327: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3340: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3340: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3356: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3401: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3401: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3401: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3402: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3413: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3427: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3462: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3488: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3490: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3501: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3591: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3615: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3616: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3622: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3710: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3710: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3710: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3711: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3725: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3731: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3733: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3779: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3780: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3925: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3925: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3981: Replace 04 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3991: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3992: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 4008: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 4017: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 4632: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 4751: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 4755: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 4755: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 4791: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 4816: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 4823: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 4835: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 4889: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 4925: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 4978: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 4990: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5008: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5049: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5057: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5225: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5343: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5354: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5355: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5357: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5371: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5389: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5425: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5456: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5456: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5498: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5586: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5596: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 5615: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace with dynamically discovered value",
      "Line 446: Replace with dynamically discovered value",
      "Line 1191: Replace with dynamically discovered value",
      "Line 1243: Replace with self.optimizer_config.get('learning_rate')",
      "Line 1244: Replace with self.optimizer_config.get('learning_rate')",
      "Line 1318: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 1322: Replace with dynamically discovered value",
      "Line 1400: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 1431: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 1566: Replace with dynamically discovered value",
      "Line 1708: Replace with dynamically discovered value",
      "Line 2396: Replace with dynamically discovered value",
      "Line 2819: Replace with dynamically discovered value",
      "Line 2881: Replace with dynamically discovered value",
      "Line 3096: Replace with dynamically discovered value",
      "Line 3322: Replace with self.segment_discovery.get_discovered_segments()",
      "Line 3427: Replace with dynamically discovered value",
      "Line 3591: Replace with dynamically discovered value",
      "Line 3822: Replace with dynamically discovered value",
      "Line 3822: Replace with dynamically discovered value",
      "Line 4523: Replace with dynamically discovered value",
      "Line 5101: Replace with dynamically discovered value",
      "Line 5101: Replace with dynamically discovered value",
      "Line 5420: Replace with dynamically discovered value",
      "Line 5454: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/offline_rl_trainer.py": [
      "Line 152: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 170: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 199: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 385: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 468: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 468: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 487: Replace 150 with self.patterns.get('parameter_name', discovered_value)",
      "Line 493: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 516: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 534: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 538: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 538: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 557: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 585: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 586: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 587: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 588: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 591: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 613: Replace 10 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/component_logger.py": [
      "Line 153: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 164: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 177: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 113: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/verify_regression_integration.py": [
      "Line 159: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 0001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 225: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 272: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 432: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 434: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 435: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 448: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 448: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 454: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 458: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 465: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 466: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 469: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 476: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 480: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 513: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 513: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 530: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 632: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 634: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 643: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 648: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 653: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 679: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 704: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 12: Remove fallback, implement proper discovery mechanism",
      "Line 15: Replace with dynamically discovered value",
      "Line 69: Remove fallback, implement proper discovery mechanism",
      "Line 71: Remove fallback, implement proper discovery mechanism",
      "Line 85: Remove fallback, implement proper discovery mechanism",
      "Line 85: Replace with dynamically discovered value",
      "Line 85: Replace with dynamically discovered value",
      "Line 85: Replace with dynamically discovered value",
      "Line 86: Replace with dynamically discovered value",
      "Line 86: Replace with dynamically discovered value",
      "Line 112: Remove fallback, implement proper discovery mechanism",
      "Line 114: Remove fallback, implement proper discovery mechanism",
      "Line 685: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/NO_FALLBACKS_SMART.py": [
      "Line 159: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 226: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 3: Remove fallback, implement proper discovery mechanism",
      "Line 9: Remove fallback, implement proper discovery mechanism",
      "Line 10: Replace with dynamically discovered value",
      "Line 65: Remove fallback, implement proper discovery mechanism",
      "Line 69: Replace with dynamically discovered value",
      "Line 75: Replace with dynamically discovered value",
      "Line 99: Replace with dynamically discovered value",
      "Line 105: Replace with dynamically discovered value",
      "Line 130: Remove fallback, implement proper discovery mechanism",
      "Line 141: Remove fallback, implement proper discovery mechanism",
      "Line 145: Remove fallback, implement proper discovery mechanism",
      "Line 151: Remove fallback, implement proper discovery mechanism",
      "Line 167: Replace with dynamically discovered value",
      "Line 213: Remove fallback, implement proper discovery mechanism",
      "Line 222: Remove fallback, implement proper discovery mechanism",
      "Line 259: Remove fallback, implement proper discovery mechanism",
      "Line 260: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/ga4_mcp_extractor.py": [
      "Line 165: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 166: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 167: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 169: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 262: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 264: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 265: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 284: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 104: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/evaluation_framework.py": [
      "Line 173: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 282: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 402: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 421: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 427: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 433: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 516: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 563: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 563: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 628: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 650: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 651: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 680: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 712: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 713: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 714: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 716: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 719: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 722: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 723: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 725: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 997: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1023: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1024: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1103: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1104: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1112: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1129: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1133: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1183: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1183: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1184: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1188: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1192: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1198: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1198: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1199: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1203: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1203: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1203: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1207: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1238: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1258: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1259: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1278: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1281: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1282: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1297: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1297: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1297: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1298: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 153: Replace with dynamically discovered value",
      "Line 153: Replace with dynamically discovered value",
      "Line 344: Replace with dynamically discovered value",
      "Line 388: Replace with dynamically discovered value",
      "Line 718: Replace with dynamically discovered value",
      "Line 718: Replace with dynamically discovered value",
      "Line 756: Replace with dynamically discovered value",
      "Line 756: Replace with dynamically discovered value",
      "Line 1010: Replace with dynamically discovered value",
      "Line 1086: Replace with dynamically discovered value",
      "Line 1126: Replace with dynamically discovered value",
      "Line 1177: Replace with dynamically discovered value",
      "Line 1216: Replace with dynamically discovered value",
      "Line 1218: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/checkpoint_manager.py": [
      "Line 173: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace with dynamically discovered value",
      "Line 229: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/shadow_mode_testing.py": [
      "Line 175: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 184: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 201: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 286: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 290: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 293: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 300: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 311: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 312: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 334: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 335: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 350: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 350: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 362: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 365: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 402: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 402: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 436: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 455: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 456: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 457: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 462: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 463: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 468: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 470: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 474: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 475: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 482: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 614: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 650: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 676: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 677: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 688: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 698: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 714: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 719: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 738: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 779: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 780: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 781: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 786: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 792: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 795: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 796: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 799: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 807: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 809: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 810: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 811: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 821: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 822: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 823: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 824: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 830: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 831: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 833: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 838: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 839: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 840: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 849: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 850: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 856: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 858: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 861: Replace 10000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 863: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 864: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 882: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 884: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 896: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 450: Replace with dynamically discovered value",
      "Line 450: Replace with dynamically discovered value",
      "Line 490: Replace with dynamically discovered value",
      "Line 490: Replace with dynamically discovered value",
      "Line 494: Replace with dynamically discovered value",
      "Line 494: Replace with dynamically discovered value",
      "Line 772: Replace with self.segment_discovery.get_discovered_segments()"
    ],
    "/home/hariravichandran/AELP/verify_google_ads_integration.py": [
      "Line 181: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 183: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 233: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 261: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 268: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 316: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 318: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 326: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 361: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 16: Remove fallback, implement proper discovery mechanism",
      "Line 17: Remove fallback, implement proper discovery mechanism",
      "Line 27: Remove fallback, implement proper discovery mechanism",
      "Line 27: Replace with dynamically discovered value",
      "Line 27: Replace with dynamically discovered value",
      "Line 27: Replace with dynamically discovered value",
      "Line 27: Replace with dynamically discovered value",
      "Line 27: Replace with dynamically discovered value",
      "Line 43: Remove fallback, implement proper discovery mechanism",
      "Line 43: Replace with dynamically discovered value",
      "Line 56: Remove fallback, implement proper discovery mechanism",
      "Line 61: Remove fallback, implement proper discovery mechanism",
      "Line 351: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/audit_trail.py": [
      "Line 186: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 187: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 188: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 191: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 192: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 449: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 479: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 505: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 561: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 588: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 588: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 589: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 589: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 589: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 590: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 590: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 590: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 591: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 830: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 908: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 983: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 983: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1053: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1070: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1092: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1096: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1096: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1096: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1097: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1097: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1103: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1103: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1107: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1107: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1108: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1108: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1108: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1108: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1110: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1110: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1111: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1111: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1112: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1118: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1120: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1123: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1123: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1123: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1124: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1124: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 901: Replace with dynamically discovered value",
      "Line 903: Replace with dynamically discovered value",
      "Line 1074: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/conversion_lag_model.py": [
      "Line 189: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 190: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 480: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 481: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 486: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 487: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 495: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 495: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 500: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 501: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 501: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 507: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 512: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 548: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 549: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 568: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 572: Replace 14 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/keyword_gap_analyzer.py": [
      "Line 191: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 200: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 207: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 219: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 222: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 229: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 269: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 270: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 271: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 322: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 323: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 331: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 339: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 346: Replace 1200 with self.patterns.get('parameter_name', discovered_value)",
      "Line 347: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 348: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 350: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 351: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 352: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 353: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 354: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 355: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 411: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 417: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 459: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 524: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 541: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 547: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 552: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 562: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 362: Replace with dynamically discovered value",
      "Line 396: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/agent-manager/kubernetes/client.py": [
      "Line 193: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 223: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 228: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 267: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 285: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 415: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 487: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 498: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 500: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 502: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 502: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 504: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 504: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 505: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 505: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 505: Replace 1024 with self.patterns.get('parameter_name', discovered_value)",
      "Line 349: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/ab_testing_integration.py": [
      "Line 195: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 195: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 218: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 220: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 221: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 263: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 390: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 391: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 394: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 522: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 562: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 570: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 570: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 646: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 646: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 666: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 667: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 668: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 669: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 712: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 714: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 715: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 720: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 720: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 726: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 97: Replace with dynamically discovered value",
      "Line 97: Replace with dynamically discovered value",
      "Line 100: Replace with dynamically discovered value",
      "Line 100: Replace with dynamically discovered value",
      "Line 101: Replace with dynamically discovered value",
      "Line 101: Replace with dynamically discovered value",
      "Line 497: Replace with dynamically discovered value",
      "Line 582: Replace with dynamically discovered value",
      "Line 608: Replace with self.segment_discovery.get_discovered_segments()",
      "Line 609: Replace with self.segment_discovery.get_discovered_segments()"
    ],
    "/home/hariravichandran/AELP/safety_framework/production_content_safety.py": [
      "Line 196: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 197: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 198: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 240: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 299: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 345: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 345: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 400: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 439: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 471: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 472: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 473: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 473: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 473: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 486: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 496: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 498: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 500: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 543: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 545: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 550: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 641: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 642: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 643: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 730: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 747: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 748: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 86: Replace with dynamically discovered value",
      "Line 86: Replace with dynamically discovered value",
      "Line 87: Replace with dynamically discovered value",
      "Line 87: Replace with dynamically discovered value",
      "Line 108: Replace with dynamically discovered value",
      "Line 108: Replace with dynamically discovered value",
      "Line 112: Replace with dynamically discovered value",
      "Line 112: Replace with dynamically discovered value",
      "Line 127: Replace with dynamically discovered value",
      "Line 127: Replace with dynamically discovered value",
      "Line 130: Replace with dynamically discovered value",
      "Line 130: Replace with dynamically discovered value",
      "Line 134: Replace with dynamically discovered value",
      "Line 134: Replace with dynamically discovered value",
      "Line 138: Replace with dynamically discovered value",
      "Line 138: Replace with dynamically discovered value",
      "Line 141: Replace with dynamically discovered value",
      "Line 141: Replace with dynamically discovered value",
      "Line 149: Replace with dynamically discovered value",
      "Line 149: Replace with dynamically discovered value",
      "Line 162: Replace with dynamically discovered value",
      "Line 162: Replace with dynamically discovered value",
      "Line 169: Replace with dynamically discovered value",
      "Line 169: Replace with dynamically discovered value",
      "Line 172: Replace with dynamically discovered value",
      "Line 172: Replace with dynamically discovered value",
      "Line 201: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/ga4_real_extractor.py": [
      "Line 213: Replace 01 with self.patterns.get('parameter_name', discovered_value)",
      "Line 214: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 215: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 217: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 238: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 239: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 241: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 255: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 256: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 274: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 277: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/creative_content_analyzer.py": [
      "Line 223: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 369: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 369: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 370: Replace 15 with self.patterns.get('parameter_name', discovered_value)",
      "Line 371: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 374: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 12 with self.patterns.get('parameter_name', discovered_value)",
      "Line 382: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 384: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 388: Replace 08 with self.patterns.get('parameter_name', discovered_value)",
      "Line 390: Replace 06 with self.patterns.get('parameter_name', discovered_value)",
      "Line 392: Replace 02 with self.patterns.get('parameter_name', discovered_value)",
      "Line 399: Replace 015 with self.patterns.get('parameter_name', discovered_value)",
      "Line 401: Replace 020 with self.patterns.get('parameter_name', discovered_value)",
      "Line 403: Replace 018 with self.patterns.get('parameter_name', discovered_value)",
      "Line 405: Replace 025 with self.patterns.get('parameter_name', discovered_value)",
      "Line 407: Replace 03 with self.patterns.get('parameter_name', discovered_value)",
      "Line 407: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 437: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 526: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 527: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 528: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 546: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 584: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 597: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 606: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 615: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 624: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 669: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 671: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 674: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 679: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 736: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 756: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 756: Replace 000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 93: Replace with dynamically discovered value",
      "Line 93: Replace with dynamically discovered value",
      "Line 99: Replace with dynamically discovered value",
      "Line 99: Replace with dynamically discovered value",
      "Line 638: Replace with dynamically discovered value",
      "Line 695: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/verify_pipeline.py": [
      "Line 226: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 248: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 360: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 363: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 378: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 396: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 398: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 414: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 416: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 425: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Remove fallback, implement proper discovery mechanism",
      "Line 26: Remove fallback, implement proper discovery mechanism",
      "Line 35: Remove fallback, implement proper discovery mechanism",
      "Line 36: Replace with dynamically discovered value",
      "Line 37: Replace with dynamically discovered value",
      "Line 38: Replace with dynamically discovered value",
      "Line 71: Remove fallback, implement proper discovery mechanism",
      "Line 74: Remove fallback, implement proper discovery mechanism",
      "Line 226: Replace with dynamically discovered value",
      "Line 369: Remove fallback, implement proper discovery mechanism"
    ],
    "/home/hariravichandran/AELP/training_orchestrator/cli.py": [
      "Line 233: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 234: Replace 4 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/comprehensive_realism_audit.py": [
      "Line 249: Replace 14 with self.patterns.get('parameter_name', discovered_value)",
      "Line 258: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 260: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 313: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 315: Replace 6 with self.patterns.get('parameter_name', discovered_value)"
    ],
    "/home/hariravichandran/AELP/safety_framework/production_monitoring.py": [
      "Line 302: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 309: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 365: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 463: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 764: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 794: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 794: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 818: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 820: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 830: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 846: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 889: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 952: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 952: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 956: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 973: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 977: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1010: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 1024: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 59: Replace with dynamically discovered value",
      "Line 59: Replace with dynamically discovered value",
      "Line 85: Replace with dynamically discovered value",
      "Line 85: Replace with dynamically discovered value",
      "Line 113: Replace with dynamically discovered value",
      "Line 113: Replace with dynamically discovered value",
      "Line 114: Replace with dynamically discovered value",
      "Line 114: Replace with dynamically discovered value",
      "Line 460: Replace with dynamically discovered value",
      "Line 788: Replace with dynamically discovered value",
      "Line 788: Replace with dynamically discovered value",
      "Line 794: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 806: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 818: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 830: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 842: Replace with self.performance_thresholds.get_threshold(metric_name)",
      "Line 851: Replace with dynamically discovered value",
      "Line 851: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/integrate_production_checkpoint_manager.py": [
      "Line 355: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 357: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 359: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 365: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 372: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 377: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 379: Replace 05 with self.patterns.get('parameter_name', discovered_value)",
      "Line 380: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 381: Replace 9 with self.patterns.get('parameter_name', discovered_value)",
      "Line 397: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 447: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 449: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 449: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 456: Replace 001 with self.patterns.get('parameter_name', discovered_value)",
      "Line 457: Replace 8 with self.patterns.get('parameter_name', discovered_value)",
      "Line 464: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 464: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 468: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 468: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 490: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 492: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 507: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 509: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 48: Replace with dynamically discovered value",
      "Line 355: Replace with self.optimizer_config.get('learning_rate')",
      "Line 356: Replace with self.discovered_patterns['exploration']['epsilon']",
      "Line 365: Replace with dynamically discovered value",
      "Line 447: Replace with self.optimizer_config.get('learning_rate')",
      "Line 457: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/cross_account_attributor_simple.py": [
      "Line 367: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 420: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 420: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 466: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 700: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 712: Replace 192 with self.patterns.get('parameter_name', discovered_value)",
      "Line 712: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 712: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 713: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 726: Replace 123456789 with self.patterns.get('parameter_name', discovered_value)",
      "Line 737: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 756: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 766: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 781: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 784: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 799: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 520: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/cross_account_attributor.py": [
      "Line 421: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 474: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 474: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 493: Replace 1000000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 504: Replace 10 with self.patterns.get('parameter_name', discovered_value)",
      "Line 559: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 829: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 841: Replace 192 with self.patterns.get('parameter_name', discovered_value)",
      "Line 841: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 841: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 842: Replace 16 with self.patterns.get('parameter_name', discovered_value)",
      "Line 855: Replace 123456789 with self.patterns.get('parameter_name', discovered_value)",
      "Line 866: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 885: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 895: Replace 120 with self.patterns.get('parameter_name', discovered_value)",
      "Line 910: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 913: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 928: Replace 4 with self.patterns.get('parameter_name', discovered_value)",
      "Line 613: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/safety_framework/integration.py": [
      "Line 439: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 452: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 453: Replace 18 with self.patterns.get('parameter_name', discovered_value)",
      "Line 453: Replace 6 with self.patterns.get('parameter_name', discovered_value)",
      "Line 463: Replace 100 with self.patterns.get('parameter_name', discovered_value)",
      "Line 463: Replace 7 with self.patterns.get('parameter_name', discovered_value)",
      "Line 463: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 463: Replace 1000 with self.patterns.get('parameter_name', discovered_value)",
      "Line 469: Replace 5 with self.patterns.get('parameter_name', discovered_value)",
      "Line 25: Replace with dynamically discovered value",
      "Line 107: Replace with dynamically discovered value",
      "Line 127: Replace with dynamically discovered value",
      "Line 136: Replace with dynamically discovered value",
      "Line 164: Replace with dynamically discovered value",
      "Line 173: Replace with dynamically discovered value",
      "Line 204: Replace with dynamically discovered value",
      "Line 214: Replace with dynamically discovered value",
      "Line 236: Replace with dynamically discovered value",
      "Line 261: Replace with dynamically discovered value",
      "Line 280: Replace with dynamically discovered value",
      "Line 298: Replace with dynamically discovered value",
      "Line 362: Replace with dynamically discovered value",
      "Line 386: Replace with dynamically discovered value",
      "Line 406: Replace with dynamically discovered value"
    ],
    "/home/hariravichandran/AELP/ga4_comprehensive_extractor.py": [
      "Line 448: Replace 3 with self.patterns.get('parameter_name', discovered_value)",
      "Line 479: Replace 3 with self.patterns.get('parameter_name', discovered_value)"
    ]
  }
}